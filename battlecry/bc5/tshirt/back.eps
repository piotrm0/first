%!PS-Adobe-3.1 EPSF-3.0
%%Title: scene-2004-020-outlines.eps
%%Creator: Adobe Illustrator(R) X
%%AI8_CreatorVersion: 10.0%AI9_PrintingDataBegin%%For: Aether X Doombringer
%%CreationDate: 5/19/2004
%%BoundingBox: 0 0 612 792
%%HiResBoundingBox: 0 0 612 792
%%CropBox: 0 0 612 792
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI10"
%ADOEndClientInjection: DocumentHeader "AI10"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image (1.0 0)
%%+ procset Adobe_CoolType_Utility_MAKEOCF (1.13 0)
%%+ procset Adobe_CoolType_Core (2.11 0)
%%+ procset Adobe_AGM_Core (2.0 0)
%%+ procset Adobe_AGM_Utils (1.0 0)
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: (18c 97m 88y 1k)
%%+ (0c 0m 0y 0k)
%%+ (50% Black)
%%CMYKCustomColor: 
%%RGBCustomColor: .8039 .0471 .0627 (18c 97m 88y 1k)
%%+ 1 1 1 (0c 0m 0y 0k)
%%+ .498 .498 .498 (50% Black)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%ADOBeginClientInjection: DocumentProlog Start "AI10"
%ADOEndClientInjection: DocumentProlog Start "AI10"
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2000 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Utils 35 dict dup begin put
/bdf
{
	bind def
} bind def
/nd{
	null def
}bdf
/xdf
{
	exch def
}bdf
/ldf 
{
	load def
}bdf
/ddf
{
	put
}bdf	
/xddf
{
	3 -1 roll put
}bdf	
/xpt
{
	exch put
}bdf
/ndf
{ 
	
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/bdict
{
	mark
}bdf
/edict
{
	counttomark 2 idiv dup dict begin {def} repeat pop currentdict end
}def
	
/ps_level
	/languagelevel where{
		pop languagelevel
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/makereadonlyarray
{
	/packedarray where{
		pop packedarray
	}{
		array astore readonly
	}ifelse
}bdf
/map_reserved_ink_name
{
	dup type /stringtype eq{
		dup /Red eq{
			pop (_Red_)
		}{
			dup /Green eq{
				pop (_Green_)
			}{
				dup /Blue eq{
					pop (_Blue_)
				}{
					dup /Cyan eq{
						pop (_Cyan_)
					}{
						dup /Magenta eq{
							pop (_Magenta_)
						}{
							dup /Yellow eq{
								pop (_Yellow_)
							}{
								dup /Black eq{
									pop (_Black_)
								}{
									dup () cvn eq{
										pop (Process)
									}if
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf
		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	
	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne
			{
			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark
			} if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		} ifelse
	
	AGMUTIL_GSTATE_flt setflat
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/rdline
{
	currentfile AGMUTIL_str256 readline pop
} bdf
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%) anchorsearch {pop} if
} bdf
/filter_cmyk
{	
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length /AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} bdf
/AGMUTIL_imagefile nd
/AGMUTIL_imbuf nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	dup /DataSource {AGMUTIL_imagefile AGMUTIL_imbuf readstring pop} put
	exch
	load exec
}def
/write_image_file
{
	begin
	{ (AGMUTIL_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		Adobe_AGM_Utils/AGMUTIL_imbuf Width BitsPerComponent mul 7 add 8 idiv string ddf
		1 1 Height { 
			pop
			DataSource dup type /filetype eq{
				AGMUTIL_imbuf readstring pop
			}{
				exec
			} ifelse
			AGMUTIL_imagefile exch writestring
		}for
		true
	}ifelse
	end
}def
/close_image_file
{
	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile
}def
/consumeimagedata
{
	begin
	currentdict /MultipleDataSources known not
		{/MultipleDataSources false def} if
	MultipleDataSources
		{
		1 dict begin
		/flushbuffer Width string def
		1 1 Height
			{
			pop
			0 1 DataSource length 1 sub
				{
				DataSource exch get
				dup type dup 
				/filetype eq
					{
					exch flushbuffer readstring pop pop
					}if
				/arraytype eq
					{
					exec pop
					}if
				}for
			}for
		end
		}
		{
		/DataSource load type dup 
		/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 div mul cvi string def
			1 1 Height { pop DataSource flushbuffer readstring pop pop} for
			end
			}if
		/arraytype eq
			{
			1 1 Height { pop DataSource pop } for
			}if
		}ifelse
	end
}bdf
/addprocs
{
     2{/exec load}repeat
     3 1 roll
     [ 5 1 roll ] bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
    currentdict 2 index known{
    	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
	    addprocs /TransferFunction xdf 
	    currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/doc_setup{
	Adobe_AGM_Utils begin
}bdf
/doc_trailer{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-1999 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 206 dict dup begin put
/nd{
	null def
}bind def
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_src256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_arg1 nd
/AGMCORE_arg2 nd
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_will_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSA_cache 0 dict def
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_pattern_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 3 dict def
/AGMCORE_cur_err nd
/AGMCORE_ovp nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/knockout_unitsq nd
/AGMCORE_CRD_cache where{
	pop
}{
	/AGMCORE_CRD_cache 0 dict def
}ifelse
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer {readline} stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq{
		dup /HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup /HalftoneType get 2 eq{
				/GraySpotFunction get
			}{ 
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/stkpath_clp_npth
{
	strokepath clip newpath
} def
/stk_n_clp_npth
{
	gsave stroke grestore clip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	Adobe_AGM_Core/spot_alias get exec
	/Adobe_AGM_Image where {
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			get exec
		}{
			pop pop
		}ifelse
	} if
	100 dict begin
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
			
	/AGMCORE_arg2 xdf
	/AGMCORE_arg1 xdf
	
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
		
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			dup (.) ne AGMCORE_arg1 0 lt and
				{
				pop
				}
				{
				stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
					{
					currentpoint AGMCORE_deltaY sub exch pop
					clippath pathbbox pop pop pop 44 add exch moveto
					} if
				AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
				} ifelse
			
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
			dup 94 eq 
				{
				pop
				AGMCORE_arg1 0 ge
					{
					AGMCORE_arg1 AGMCORE_str256 cvs
					dup /AGMCORE_tmp exch length def
					AGMCORE_str256 exch 0 exch putinterval
					AGMCORE_str256 0 AGMCORE_tmp getinterval
					stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
						{
						currentpoint AGMCORE_deltaY sub exch pop
						clippath pathbbox pop pop pop 44 add exch moveto
						} if
					AGMCORE_str256 0 AGMCORE_tmp getinterval show
					}
					{
					/AGMCORE_arg1 0 def
					} ifelse
				0 1 AGMCORE_str256 length 1 sub
					{
					AGMCORE_str256 exch 0 put
					}for
				/AGMCORE_tmp 0 def
				AGMCORE_arg1 0 ne
					{
					/AGMCORE_arg1 AGMCORE_arg2 def
					} if
				}
				{
				AGMCORE_str256 exch AGMCORE_tmp exch put
				/AGMCORE_tmp AGMCORE_tmp 1 add def
				}ifelse
			} ifelse
		} forall
} bdf
/doc_setup{
	Adobe_AGM_Core begin
	
	/AGMCORE_will_host_separate xdf
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	
	errordict /AGM_handleerror known not{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror {
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and{
				$error /newerror false put
				AGMCORE_cur_err /AGMCORE_bad_environ eq{
					/AGMCORE_bad_environ AGMCORE_ps_level AGMCORE_ps_version
				}{
					AGMCORE_cur_err 0 0
				}ifelse
				compose_error_msg
			}if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	level2 not{
		/xput{
			dup load dup length exch maxlength eq{
				dup dup load dup
				length dup 0 eq {pop 1} if 2 mul dict copy def
			}if
			load begin
				def
 			end
		}def
	}{
		/xput{
			load 3 1 roll put
		}def
	}ifelse
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 8 def
											
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			Adobe_AGM_Core
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core begin
				/AGMCORE_gstackptr exch def
				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def
			end
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	end
}def
/page_setup
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/LeaveColorUnchanged eq
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where {pop}{
		/convert_spot_to_process
		{
			AGMCORE_host_sep
			{ 
				gsave
				1 0 0 0 setcmykcolor currentgray 1 exch sub
				0 1 0 0 setcmykcolor currentgray 1 exch sub
				0 0 1 0 setcmykcolor currentgray 1 exch sub
				0 0 0 1 setcmykcolor currentgray 1 exch sub
				add add add 0 eq
				{
					pop false
				}{
					false setoverprint
					1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor
					currentgray 0 eq
				}ifelse
				grestore
			}{
				AGMCORE_distilling
				{
					pop
					AGM_is_distiller_preserving_spotimages not
				}{
					Adobe_AGM_Core/AGMCORE_name xddf
					false
					currentpagedevice/OverrideSeparations known
						{
						currentpagedevice/OverrideSeparations get
							{
							/HqnSpots /ProcSet resourcestatus
								{
								pop pop pop true
								}if
							}if
						}if					
						{
						AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not
						}{
						gsave
						[/Separation AGMCORE_name /DeviceGray {}]setcolorspace
						false
						currentpagedevice/SeparationColorNames 2 copy known
						{
							get
							{
							AGMCORE_name eq or
							}forall
						not
						}{
							pop pop
						}ifelse
						grestore
						}ifelse
				}ifelse
			}ifelse
		}def
	}ifelse
	/convert_to_process where {pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
				true exch
					{
					convert_spot_to_process and
					}
				forall
				}{
				false exch
					{
					convert_spot_to_process or
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	AGMCORE_host_sep AGMCORE_will_host_separate not and {
		/AGMCORE_cur_err /AGMCORE_color_space_onhost_seps def
		AGMCORE_color_space_onhost_seps
	}if
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	AGMCORE_host_sep{
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
		/clip AGMCORE_key_known not{
			Adobe_AGM_Core/AGMCORE_&clip /clip load put
			/clip
			{
				current_spot_alias{
					currentdict/InksUsed known{
						[
						InksUsed{
							dup map_alias{
								/Name get exch pop
							}if
						}forall
						]
						/InksUsed xdf
					}if
				}if
				AGMCORE_&clip
			}def
		}if
		/eoclip AGMCORE_key_known not{
			Adobe_AGM_Core/AGMCORE_&eoclip /eoclip load put
			/eoclip
			{
				current_spot_alias{
					currentdict/InksUsed known{
						[
						InksUsed{
							dup map_alias{
								/Name get exch pop
							}if
						}forall
						]
						/InksUsed xdf
					}if
				}if
				AGMCORE_&eoclip
			}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	}def
	
	level2{
		/mo /moveto ldf
		/li /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		/level2ScreenFreq{
			begin
			60
			HalftoneType 1 eq{
				pop Frequency
			}if
			HalftoneType 2 eq{
				pop GrayFrequency
			}if
			HalftoneType 5 eq{
				pop Default level2ScreenFreq
			}if
			 end
		}def
		/currentScreenFreq{
			currenthalftone level2ScreenFreq
		}def
		level2 /setcolorspace AGMCORE_key_known not and{
		
			/AGMCORE_&&&setcolorspace /setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get dup /Separation eq
					{
						pop
						dup length array copy
						dup dup 1 get
						current_spot_alias
						{
							dup map_alias
							{
								begin
								/sep_colorspace_dict currentdict AGMCORE_gput
								pop pop	pop
									
								[ 
									/Separation Name 
									CSA map_csa
									dup /MappedCSA xdf 
									/sep_colorspace_proc load
								]
								dup Name
								end
							}if
						}if
						map_reserved_ink_name 1 exch put
					}{
						/DeviceN eq 
						{
							dup length array copy
							dup dup 1 get [ 
								exch {
									current_spot_alias{
										dup map_alias{
											/Name get exch pop
										}if
									}if
									map_reserved_ink_name
								} forall 
							] 1 exch put
						}if
					}ifelse
				}if
			}def
			/setcolorspace
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get /Indexed eq
					{
						aload pop 3 -1 roll
						AGMCORE_ReplaceMappedColor
						3 1 roll 4 array astore
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				AGMCORE_&&&setcolorspace
			}def
		}if	
	}{
		
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/currentScreenFreq{
			currentscreen pop pop
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		
		/n_color_components
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop 1
			}{
				/DeviceCMYK eq{
					4
				}{
					3
				}ifelse
			}ifelse
		} def
		
		/setcolor_devicecolor
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
	
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	
	/sop /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/spclp /stkpath_clp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/s /stroke ldf
	/sclp /stk_n_clp_npth ldf
	/nclp /npth_clp ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer{
}def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/current_ink
{
	dup length 0 eq{
		pop true
	}{
		Adobe_AGM_Core/ink_result false put
		{
			dup /ProcessCyan eq{
				AGMCORE_cyan_plate ink_result or Adobe_AGM_Core/ink_result xddf
			}{
				dup /ProcessMagenta eq{
					AGMCORE_magenta_plate ink_result or Adobe_AGM_Core/ink_result xddf
				}{
					dup /ProcessYellow eq{
						AGMCORE_yellow_plate ink_result or Adobe_AGM_Core/ink_result xddf
					}{
						dup /ProcessBlack eq{
							AGMCORE_black_plate ink_result or Adobe_AGM_Core/ink_result xddf
						}{
							dup /sep_colorspace_dict AGMCORE_gget dup null eq{
								pop false ink_result or Adobe_AGM_Core/ink_result xddf
							}{
								/Name get eq{
									1 setsepcolor
									currentgray 1 ne ink_result or Adobe_AGM_Core/ink_result xddf
								}{
									false ink_result or Adobe_AGM_Core/ink_result xddf
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			pop 
		} forall
		ink_result
	}ifelse
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA map_csa setcolorspace_opt
		set_crd
	end
}
def
/setsepcolor
{ 
	
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/sep_colorspace_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf
	
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
							}{
								Name inRip_spot_has_ink not
							}ifelse
							{
		 						/pop cvx 1
							}if
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc /setcolor ldf
						
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		/MappedCSA CSA map_csa def
		AGMCORE_host_sep level2 not and{
			0 0 0 0 setcmykcolor
		}{
			[/Indexed MappedCSA 
			level2 not has_color not and{
				dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
					pop [/DeviceGray]
				}if
				HiVal GrayLookup
			}{
				HiVal 
				currentdict/RangeArray known{
					{ 
						/indexed_colorspace_dict AGMCORE_gget begin
						Lookup exch 
						dup HiVal gt{
							pop HiVal
						}if
						NComponents mul NComponents getinterval {} forall
						NComponents 1 sub -1 0{
							RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
							NComponents 1 roll
						}for
						end
					} bind
				}{
					Lookup
				}ifelse
			}ifelse
			] setcolorspace_opt
			
			set_crd
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget/Lookup get 4 3 -1 roll map_index setcmykcolor
	}{
		setcolor
	}ifelse
} def
/ignoreimagedata
{
	currentoverprint not{
		gsave 
		dup begin
		1 setgray
		0 0 ImageMatrix itransform 
		Width Height ImageMatrix idtransform rectfill 
		end
		grestore
		}if
	consumeimagedata
}def
/add_csa
{
	Adobe_AGM_Core begin
			/AGMCORE_CSA_cache xput
	end
}def
/map_csa
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get
	}if
}def
/add_csd
{
	Adobe_AGM_Core begin
		/AGMCORE_CSD_cache xput
	end
}def
/get_csd
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get
	}if
}def
/cachepattern_level2
{
	4 dict begin
	/comparebuffer exch def
	/holdbuffer exch def
	/readbuffer 1024 string def
	/LZWFilter holdbuffer /LZWEncode filter def
	{
		currentfile readbuffer readline not
			{pop exit}
		if
		dup LZWFilter exch writestring
		LZWFilter (\n) writestring
		comparebuffer eq
			{exit}
		if
	}loop
	LZWFilter closefile
	end
}def
/cachepattern_level3
{
	3 dict begin
	/comparebuffer exch def
	/readbuffer 1024 string def
	/DoEOL false def
	{ 
		DoEOL
			{
			(\n)
			/DoEOL false def
			}
			{
			currentfile readbuffer readline not
				{pop ()}
				{
				dup length 0 eq
					{ pop(\n)}
					{
					dup comparebuffer eq
						{pop ()}
						{/DoEOL true def}
					ifelse
					}
				ifelse
				}
			ifelse
			}
		ifelse
	} /ReusableStreamDecode filter
	end
}def
/add_pattern
{
	Adobe_AGM_Core begin
		/AGMCORE_pattern_cache xput
	end
}def
/get_pattern
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get
	}if
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			false sop [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	
	currentcolorrendering/Intent known{
		currentcolorrendering/Intent get
	}{
		null
	}ifelse
	
	Intent ne{
		false  
		Intent
		AGMCORE_CRD_cache {
			exch pop 
			begin
				dup Intent eq{
					currentdict setcolorrendering_opt
					end 
					exch pop true exch	
					exit
				}if
			end
		} forall
		pop
		not{
			systemdict /findcolorrendering known{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				dup length dict copy
				setcolorrendering_opt
			}if
		}if
	}if
} def
/add_crd
{
	AGMCORE_CRD_cache 3 1 roll put
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/CRD known{
			AGMCORE_CRD_cache CRD get dup null ne{
				setcolorrendering_opt
			}{
				pop
			}ifelse
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp) flushinput
	}if
}def
/cpaint_gsep
{
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep) flushinput
	}if
}def
/cpaint_gend
{
	newpath
}def
/AGMCORE_ctm_stack bdict
	/push_ctm {
		stack length size le{
			stack dup length 2 mul array 
			dup /stack exch def
			copy pop
		}if
		stack size 3 -1 roll put
		/size size 1 add def
	}
	/pop_ctm {
		/size size 1 sub def
		size 0 lt{ 
			/size 0 def
		}if
		stack size get
	}
	/stack 1 array
	/size 0 
edict 
def
/save_ctm
{
	matrix currentmatrix AGMCORE_ctm_stack begin 
		push_ctm 
	end
}def
/restore_ctm
{
	AGMCORE_ctm_stack begin
		pop_ctm 
	end
	setmatrix
}def
/path_rez
{
	dup 0 ne{
		AGMCORE_deviceDPI exch div 
		dup 1 lt{
			pop 1
		}if
		setflat
	}{
		pop
	}ifelse 	
}def
/rdcmntline {
	currentfile AGMCORE_str256 readline pop
	(%) anchorsearch {pop} if
} def
/set_spot_alias_ary
{
	/AGMCORE_SpotAliasAry where{
		pop pop
	}{
		Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
		true set_spot_alias
	}ifelse
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry{
				dup/Name get AGMCORE_name eq{
					save exch
					/Adobe_AGM_Core currentdict def
					/CSD get get_csd
					exch restore
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	
	/AGMCORE_&setcustomcolor AGMCORE_key_known not {
		Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put
	} if
	/customcolor_tint 1 AGMCORE_gput
	
	Adobe_AGM_Core begin
	/setcustomcolor
	{
		
		dup /customcolor_tint exch AGMCORE_gput
		
		current_spot_alias{
			1 index 4 get map_alias{
				mark 3 1 roll
				setsepcolorspace
				counttomark 0 ne{
					setsepcolor
				}if
				pop
				pop
			}{
				AGMCORE_&setcustomcolor
			}ifelse
		}{
			AGMCORE_&setcustomcolor
		}ifelse
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd /setpagedevice load def
	/setpagedevice { get_gstate spd set_gstate } def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known{
			currentpagedevice/NegativePrint get Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<< /NegativePrint Adobe_AGM_Core/AGMCORE_inverting get >> setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 
		fill grestore
	}if
	end
}def
/lw_save_restore_override {
	/md where {
		pop
		md /pmSVsetup{} put
		md /endp{}put
		md /pse{}put
		md /psb{}put
	}if
}def
/driver_media_override
{
	/md where {
		pop
		md /initializepage known {
			md /initializepage {} put
		} if
		md /rC known {
			md /rC {4{pop}repeat} put
		} if
	}if
	
	/mysetup where {
		/mysetup [1 0 0 1 0 0] put
	}if 
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def
	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def
	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.11 0
%%Copyright: Copyright 1997-2001 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 2.11 0
userdict/Adobe_CoolType_Core 60 dict dup begin put/Level2? systemdict
/languagelevel known dup{pop systemdict/languagelevel get 2 ge}if def Level2?
not{/currentglobal false def/setglobal/pop load def/gcheck{pop false}bind def
/currentpacking false def/setpacking/pop load def/SharedFontDirectory 0 dict
def}if currentpacking true setpacking/doc_setup{Adobe_CoolType_Core begin/mov
/moveto load def/nfnt/newencodedfont load def/mfnt/makefont load def/sfnt
/setfont load def/ufnt/undefinefont load def/chp/charpath load def/awsh
/awidthshow load def/wsh/widthshow load def/ash/ashow load def/sh/show load
def end userdict/Adobe_CoolType_Data 6 dict dup begin/AddWidths? false def/CC
0 def/charcode 2 string def end put}bind def/doc_trailer{currentdict
Adobe_CoolType_Core eq{end}if}bind def/page_setup{Adobe_CoolType_Core begin}
bind def/page_trailer{end}bind def/unload{systemdict/languagelevel known{
systemdict/languagelevel get 2 ge{userdict/Adobe_CoolType_Core 2 copy known{
undef}{pop pop}ifelse}if}if}bind def/ndf{1 index where{pop pop pop}{dup xcheck
{bind}if def}ifelse}def/findfont dup systemdict begin userdict begin
/globaldict where{/globaldict get begin}if dup where pop exch get/globaldict
where{pop end}if end end def/systemfindfont/findfont load def/undefinefont{pop
}ndf/copyfont{currentglobal 3 1 roll 1 index gcheck setglobal dup null eq{0}{
dup length}ifelse 2 index length add 1 add dict begin exch{1 index/FID eq{pop
pop}{def}ifelse}forall dup null eq{pop}{{def}forall}ifelse currentdict end
exch setglobal}bind def/copyarray{currentglobal exch dup gcheck setglobal dup
length array copy exch setglobal}bind def/newencodedfont{currentglobal{
SharedFontDirectory 3 index known{SharedFontDirectory 3 index get
/FontReferenced known}{false}ifelse}{FontDirectory 3 index known{FontDirectory
3 index get/FontReferenced known}{SharedFontDirectory 3 index known{
SharedFontDirectory 3 index get/FontReferenced known}{false}ifelse}ifelse}
ifelse dup{3 index findfont/FontReferenced get 2 index findfont ne{pop false}
if}if{pop 1 index findfont/Encoding get exch 0 1 255{2 copy get 3 index 3 1
roll put}for pop pop pop}{findfont dup dup maxlength 2 add dict begin exch{1
index/FID ne{def}{pop pop}ifelse}forall/FontReferenced exch def/Encoding exch
dup length array copy def/FontName 1 index dup type/stringtype eq{cvn}if def
currentdict end definefont pop}ifelse}bind def/SetSubstituteStrategy{
$SubstituteFont begin dup type/dicttype ne{0 dict}if currentdict/$Strategies
known{exch $Strategies exch 2 copy known{get 2 copy maxlength exch maxlength
add dict begin{def}forall{def}forall currentdict dup/$Init known{dup/$Init get
exec}if end/$Strategy exch def}{pop pop pop}ifelse}{pop pop}ifelse end}bind
def/scff{$SubstituteFont begin dup type/stringtype eq{dup length exch}{null}
ifelse/$sname exch def/$slen exch def end findfont $SubstituteFont begin
/$sname null def/$slen 0 def end}bind def/isWidthsOnlyFont{dup/WidthsOnly
known{pop pop true}{dup/FDepVector known{/FDepVector get{isWidthsOnlyFont dup{
exit}if}forall}{dup/FDArray known{/FDArray get{isWidthsOnlyFont dup{exit}if}
forall}{pop}ifelse}ifelse}ifelse}bind def/?set{$SubstituteFont begin
/$substituteFound false def/$fontname 4 index def/$doSmartSub false def end 3
index findfont $SubstituteFont begin $substituteFound{false}{dup/FontName
known{dup/FontName get $fontname eq 1 index/DistillerFauxFont known not and
/currentdistillerparams where{pop false 2 index isWidthsOnlyFont not and}if}{
false}ifelse}ifelse exch pop/$doSmartSub true def end{exch pop exch pop exch 2
dict dup/Found 3 index put exch findfont exch}{exch exec exch findfont 2 dict
dup/Downloaded 6 5 roll put}ifelse dup/FontName 4 index put copyfont
definefont pop}bind def/?str1 256 string def/?str2 256 string def/?add{1 index
type/integertype eq{exch true 4 2}{false 3 1}ifelse roll 1 index findfont dup
/Widths known{Adobe_CoolType_Data/AddWidths? true put gsave dup 1000 scalefont
setfont}if/Downloaded known{exec exch{exch ?str2 cvs exch findfont/Downloaded
get 1 dict begin/Downloaded 1 index def ?str1 cvs length ?str1 1 index 1 add 3
index putinterval exch length 1 add 1 index add ?str1 2 index(*)putinterval
?str1 0 2 index getinterval cvn findfont ?str1 3 index(+)putinterval 2 dict
dup/FontName ?str1 0 6 index getinterval cvn put dup/Downloaded Downloaded put
end copyfont dup/FontName get exch definefont pop pop pop}{pop}ifelse}{pop
exch{findfont dup/Found get dup length exch ?str1 cvs pop ?str1 1 index(+)
putinterval ?str1 1 index 1 add 4 index ?str2 cvs putinterval ?str1 exch 0
exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn 1 dict exch 1 index
exch/FontName exch put copyfont dup/FontName get exch definefont pop}{pop}
ifelse}ifelse Adobe_CoolType_Data/AddWidths? get{grestore Adobe_CoolType_Data
/AddWidths? false put}if}bind def/?sh{currentfont/Downloaded known{exch}if pop
}bind def/?chp{currentfont/Downloaded known{pop}{false chp}ifelse}bind def/?mv
{currentfont/Downloaded known{moveto pop pop}{pop pop moveto}ifelse}bind def
setpacking userdict/$SubstituteFont 25 dict put 1 dict begin/SubstituteFont
dup $error exch 2 copy known{get}{pop pop{pop/Courier}bind}ifelse def
/currentdistillerparams where dup{pop pop currentdistillerparams
/CannotEmbedFontPolicy 2 copy known{get/Error eq}{pop pop false}ifelse}if not{
countdictstack array dictstack 0 get begin userdict begin $SubstituteFont
begin/$str 128 string def/$fontpat 128 string def/$slen 0 def/$sname null def
/$match false def/$fontname null def/$substituteFound false def/$doSmartSub
true def/$depth 0 def/$fontname null def/$italicangle 26.5 def/$dstack null
def/$Strategies 10 dict dup begin/$Type3Underprint{currentglobal exch false
setglobal 11 dict begin/UseFont exch $WMode 0 ne{dup length dict copy dup
/WMode $WMode put/UseFont exch definefont}if def/FontName $fontname dup type
/stringtype eq{cvn}if def/FontType 3 def/FontMatrix[.001 0 0 .001 0 0]def
/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def/FontBBox[0 0 0 0]
def/CCInfo 7 dict dup begin/cc null def/x 0 def/y 0 def end def/BuildChar{exch
begin CCInfo begin 1 string dup 0 3 index put exch pop/cc exch def UseFont
1000 scalefont setfont cc stringwidth/y exch def/x exch def x y setcharwidth
$SubstituteFont/$Strategy get/$Underprint get exec 0 0 moveto cc show x y
moveto end end}bind def currentdict end exch setglobal}bind def/$GetaTint 2
dict dup begin/$BuildFont{dup/WMode known{dup/WMode get}{0}ifelse/$WMode exch
def $fontname exch dup/FontName known{dup/FontName get dup type/stringtype eq{
cvn}if}{/unnamedfont}ifelse exch $deepcopyfont exch 1 index exch/FontBasedOn
exch put dup/FontName $fontname dup type/stringtype eq{cvn}if put definefont}
bind def/$Underprint{gsave x abs y abs gt{/y 1000 def}{/x -1000 def 500 120
translate}ifelse Level2?{[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
setcolorspace}{0 setgray}ifelse 10 setlinewidth x .8 mul[7 3]{y mul 8 div 120
sub x 10 div exch moveto 0 y 4 div neg rlineto dup 0 rlineto 0 y 4 div rlineto
closepath gsave Level2?{.2 setcolor}{.8 setgray}ifelse fill grestore stroke}
forall pop grestore}bind def end def/$Oblique 1 dict dup begin/$BuildFont{
currentglobal exch dup gcheck setglobal null copyfont begin/FontBasedOn
currentdict/FontName known{FontName dup type/stringtype eq{cvn}if}{
/unnamedfont}ifelse def/FontName $fontname dup type/stringtype eq{cvn}if def
/currentdistillerparams where{pop}{/FontInfo currentdict/FontInfo known{
FontInfo null copyfont}{2 dict}ifelse dup begin/ItalicAngle $italicangle def
/FontMatrix FontMatrix[1 0 ItalicAngle dup sin exch cos div 1 0 0]matrix
concatmatrix readonly end 4 2 roll def def}ifelse FontName currentdict end
definefont exch setglobal}bind def end def/$None 1 dict dup begin/$BuildFont{}
bind def end def end def/$Oblique SetSubstituteStrategy/$findfontByEnum{dup
type/stringtype eq{cvn}if dup/$fontname exch def $sname null eq{$str cvs dup
length $slen sub $slen getinterval}{pop $sname}ifelse $fontpat dup 0(fonts/*)
putinterval exch 7 exch putinterval/$match false def $SubstituteFont/$dstack
countdictstack array dictstack put mark{$fontpat 0 $slen 7 add getinterval{
/$match exch def exit}$str filenameforall}stopped{cleardictstack currentdict
true $SubstituteFont/$dstack get{exch{1 index eq{pop false}{true}ifelse}{begin
false}ifelse}forall pop}if cleartomark/$slen 0 def $match false ne{$match
(fonts/)anchorsearch pop pop cvn}{/Courier}ifelse}bind def/$ROS 1 dict dup
begin/Adobe 4 dict dup begin/Japan1[/Ryumin-Light/HeiseiMin-W3
/GothicBBB-Medium/HeiseiKakuGo-W5/HeiseiMaruGo-W4/Jun101-Light]def/Korea1[
/HYSMyeongJo-Medium/HYGoThic-Medium]def/GB1[/STSong-Light/STHeiti-Regular]def
/CNS1[/MKai-Medium/MHei-Medium]def end def end def/$cmapname null def
/$deepcopyfont{dup/FontType get 0 eq{1 dict dup/FontName/copied put copyfont
begin/FDepVector FDepVector copyarray 0 1 2 index length 1 sub{2 copy get
$deepcopyfont dup/FontName/copied put/copied exch definefont 3 copy put pop
pop}for def currentdict end}{$Strategies/$Type3Underprint get exec}ifelse}bind
def/$buildfontname{length $str 1 index(-)putinterval 1 add $str 1 index
$cmapname $fontpat cvs putinterval $cmapname length add $str exch 0 exch
getinterval cvn}bind def/$findfontByROS{/$fontname exch def $ROS Registry 2
copy known{get Ordering 2 copy known{get}{pop pop[]}ifelse}{pop pop[]}ifelse
false exch{dup/CIDFont resourcestatus{pop pop save 1 index/CIDFont
findresource dup/WidthsOnly known{dup/WidthsOnly get}{false}ifelse exch pop
exch restore{pop}{exch pop true exit}ifelse}{pop}ifelse}forall{$str cvs
$buildfontname}{false(*){save exch dup/CIDFont findresource dup/WidthsOnly
known{dup/WidthsOnly get not}{true}ifelse exch/CIDSystemInfo get dup/Registry
get Registry eq exch/Ordering get Ordering eq and and{exch restore exch pop
true exit}{pop restore}ifelse}$str/CIDFont resourceforall{$buildfontname}{
$fontname $findfontByEnum}ifelse}ifelse}bind def end end currentdict/$error
known currentdict/languagelevel known and dup{pop $error/SubstituteFont known}
if dup{$error}{Adobe_CoolType_Core}ifelse begin{/SubstituteFont/CMap/Category
resourcestatus{pop pop{$SubstituteFont begin/$substituteFound true def dup
length $slen gt $sname null ne or $slen 0 gt and{$sname null eq{dup $str cvs
dup length $slen sub $slen getinterval cvn}{$sname}ifelse dup/CMap
resourcestatus{pop pop dup/$cmapname exch def/CMap findresource/CIDSystemInfo
get{def}forall $findfontByROS}{128 string cvs dup(-)search{3 1 roll search{3 1
roll pop{dup cvi}stopped{pop pop pop pop pop $findfontByEnum}{4 2 roll pop pop
exch length exch 2 index length 2 index sub exch 1 sub -1 0{$str cvs dup
length 4 index 0 4 index 4 3 roll add getinterval exch 1 index exch 3 index
exch putinterval dup/CMap resourcestatus{pop pop 4 1 roll pop pop pop dup
/$cmapname exch def/CMap findresource/CIDSystemInfo get{def}forall
$findfontByROS true exit}{pop}ifelse}for dup type/booleantype eq{pop}{pop pop
$findfontByEnum}ifelse}ifelse}{pop pop pop $findfontByEnum}ifelse}{pop pop
$findfontByEnum}ifelse}ifelse}{//SubstituteFont exec}ifelse/$slen 0 def end}}{
{$SubstituteFont begin/$substituteFound true def dup length $slen gt $sname
null ne or $slen 0 gt and{$findfontByEnum}{//SubstituteFont exec}ifelse end}}
ifelse bind readonly def Adobe_CoolType_Core/scfindfont/systemfindfont load
put}{/scfindfont{$SubstituteFont begin dup systemfindfont dup/FontName known{
dup/FontName get dup 3 index ne}{/noname true}ifelse dup{/$origfontnamefound 2
index def/$origfontname 4 index def/$substituteFound true def}if exch pop{
$slen 0 gt $sname null ne 3 index length $slen gt or and{pop dup
$findfontByEnum findfont dup maxlength 1 add dict begin{1 index/FID eq{pop pop
}{def}ifelse}forall currentdict end definefont dup/FontName known{dup/FontName
get}{null}ifelse $origfontnamefound ne{$origfontname $str cvs print
( substitution revised, using )print dup/FontName known{dup/FontName get}{
(unspecified font)}ifelse $str cvs print(.
)print}if}{exch pop}ifelse}{exch pop}ifelse end}bind def}ifelse end end
Adobe_CoolType_Core/findfont{$SubstituteFont begin $depth 0 eq{/$fontname 1
index dup type/stringtype ne{$str cvs}if def/$substituteFound false def}if
/$depth $depth 1 add def end scfindfont $SubstituteFont begin/$depth $depth 1
sub def $substituteFound $depth 0 eq and $doSmartSub and{currentdict/$Strategy
known{$Strategy/$BuildFont get exec}if}if end}bind put}if end end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.13 0
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated.
%%Version: 1.13 0
systemdict/languagelevel known dup{currentglobal false setglobal}{false}ifelse
exch userdict/Adobe_CoolType_Utility 2 copy known{2 copy get dup maxlength 25
add dict copy}{25 dict}ifelse put Adobe_CoolType_Utility begin/ct_Level2? exch
def/ct_Clone? 1183615869 internaldict dup/CCRun known not exch/eCCRun known
not ct_Level2? and or def/ct_UseNativeCapability? systemdict/composefont known
def/ct_MakeOCF 35 dict def/ct_Vars 25 dict def/ct_GlyphDirProcs 6 dict def
/ct_BuildCharDict 15 dict dup begin/charcode 2 string def/dst_string 1500
string def/nullstring()def/usewidths? true def end def ct_Level2?{setglobal}{
pop}ifelse ct_GlyphDirProcs begin/GetGlyphDirectory{systemdict/languagelevel
known{pop/CIDFont findresource/GlyphDirectory get}{1 index/CIDFont
findresource/GlyphDirectory get dup type/dicttype eq{dup dup maxlength exch
length sub 2 index lt{dup length 2 index add dict copy 2 index/CIDFont
findresource/GlyphDirectory 2 index put}if}if exch pop exch pop}ifelse +}def/+
{systemdict/languagelevel known{currentglobal false setglobal 3 dict begin/vm
exch def}{1 dict begin}ifelse/$ exch def systemdict/languagelevel known{vm
setglobal/gvm currentglobal def $ gcheck setglobal}if ?{$ begin}if}def/?{$
type/dicttype eq}def/|{userdict/Adobe_CoolType_Data known{Adobe_CoolType_Data
/AddWidths? known{currentdict Adobe_CoolType_Data begin begin AddWidths?{
Adobe_CoolType_Data/CC 3 index put ?{def}{$ 3 1 roll put}ifelse CC charcode
exch 1 index 0 2 index 256 idiv put 1 index exch 1 exch 256 mod put
stringwidth 2 array astore currentfont/Widths get exch CC exch put}{?{def}{$ 3
1 roll put}ifelse}ifelse end end}{?{def}{$ 3 1 roll put}ifelse}ifelse}{?{def}{
$ 3 1 roll put}ifelse}ifelse}def/!{?{end}if systemdict/languagelevel known{gvm
setglobal}if end}def/:{string currentfile exch readstring pop}executeonly def
end ct_MakeOCF begin/ct_cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09
/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C
/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F
/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42
/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55
/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68
/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B
/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E
/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1
/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4
/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7
/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA
/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED
/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_CID_STR_SIZE 8000 def/ct_mkocfStr100 100 string def/ct_defaultFontMtx[.001
0 0 .001 0 0]def/ct_1000Mtx[1000 0 0 1000 0 0]def/ct_raise{exch cvx exch
errordict exch get exec stop}bind def/ct_reraise{cvx $error/errorname get
(Error: )print dup(                    )cvs print errordict exch get exec stop
}bind def/ct_cvnsi{1 index add 1 sub 1 exch 0 4 1 roll{2 index exch get exch 8
bitshift add}for exch pop}bind def/ct_GetInterval{Adobe_CoolType_Utility
/ct_BuildCharDict get begin/dst_index 0 def dup dst_string length gt{dup
string/dst_string exch def}if 1 index ct_CID_STR_SIZE idiv/arrayIndex exch def
2 index arrayIndex get 2 index arrayIndex ct_CID_STR_SIZE mul sub{dup 3 index
add 2 index length le{2 index getinterval dst_string dst_index 2 index
putinterval length dst_index add/dst_index exch def exit}{1 index length 1
index sub dup 4 1 roll getinterval dst_string dst_index 2 index putinterval
pop dup dst_index add/dst_index exch def sub/arrayIndex arrayIndex 1 add def 2
index dup length arrayIndex gt{arrayIndex get}{pop exit}ifelse 0}ifelse}loop
pop pop pop dst_string 0 dst_index getinterval end}bind def ct_Level2?{
/ct_resourcestatus currentglobal mark true setglobal{/unknowninstancename
/Category resourcestatus}stopped{cleartomark setglobal true}{cleartomark
currentglobal not exch setglobal}ifelse{{mark 3 1 roll/Category findresource
begin ct_Vars/vm currentglobal put({ResourceStatus} stopped)0()/SubFileDecode
filter cvx exec{cleartomark false}{{3 2 roll pop true}{cleartomark false}
ifelse}ifelse ct_Vars/vm get setglobal end}}{{resourcestatus}}ifelse bind def
/CIDFont/Category ct_resourcestatus{pop pop}{currentglobal true setglobal
/Generic/Category findresource dup length dict copy dup/InstanceType/dicttype
put/CIDFont exch/Category defineresource pop setglobal}ifelse
ct_UseNativeCapability?{/CIDInit/ProcSet findresource begin 12 dict begin
begincmap/CIDSystemInfo 3 dict dup begin/Registry(Adobe)def/Ordering(Identity)
def/Supplement 0 def end def/CMapName/Identity-H def/CMapVersion 1 def
/CMapType 1 def 1 begincodespacerange<0000><ffff>endcodespacerange 1
begincidrange<0000><ffff>0 endcidrange endcmap CMapName currentdict/CMap
defineresource pop end end}if}{/ct_Category 2 dict begin/CIDFont 10 dict def
/ProcSet 2 dict def currentdict end def/defineresource{ct_Category 1 index 2
copy known{get dup dup maxlength exch length eq{dup length 10 add dict copy
ct_Category 2 index 2 index put}if 3 index 3 index put pop exch pop}{pop pop
/defineresource/undefined ct_raise}ifelse}bind def/findresource{ct_Category 1
index 2 copy known{get 2 index 2 copy known{get 3 1 roll pop pop}{pop pop
/findresource/undefinedresource ct_raise}ifelse}{pop pop/findresource
/undefined ct_raise}ifelse}bind def/resourcestatus{ct_Category 1 index 2 copy
known{get 2 index known exch pop exch pop{0 -1 true}{false}ifelse}{pop pop
/findresource/undefined ct_raise}ifelse}bind def/ct_resourcestatus
/resourcestatus load def}ifelse/ct_CIDInit 2 dict begin/ct_cidfont_stream_init
{{dup(Binary)eq{pop null currentfile ct_Level2?{{cid_BYTE_COUNT()
/SubFileDecode filter}stopped{pop pop pop}if}if/readstring load exit}if dup
(Hex)eq{pop currentfile ct_Level2?{{null exch/ASCIIHexDecode filter/readstring
}stopped{pop exch pop(>)exch/readhexstring}if}{(>)exch/readhexstring}ifelse
load exit}if/StartData/typecheck ct_raise}loop cid_BYTE_COUNT ct_CID_STR_SIZE
le{2 copy cid_BYTE_COUNT string exch exec pop 1 array dup 3 -1 roll 0 exch put
}{cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi dup array exch 2 sub 0 exch 1
exch{2 copy 5 index ct_CID_STR_SIZE string 6 index exec pop put pop}for 2
index cid_BYTE_COUNT ct_CID_STR_SIZE mod string 3 index exec pop 1 index exch
1 index length 1 sub exch put}ifelse cid_CIDFONT exch/GlyphData exch put 2
index null eq{pop pop pop}{pop/readstring load 1 string exch{3 copy exec pop
dup length 0 eq{pop pop pop pop pop true exit}if 4 index eq{pop pop pop pop
false exit}if}loop pop}ifelse}bind def/StartData{mark{currentdict dup/FDArray
get 0 get/FontMatrix get 0 get .001 eq{dup/CDevProc known not{/CDevProc
1183615869 internaldict/stdCDevProc 2 copy known{get}{pop pop{pop pop pop pop
pop 0 -1000 7 index 2 div 880}}ifelse def}if}{/CDevProc{pop pop pop pop pop 0
1 cid_temp/cid_CIDFONT get/FDArray get 0 get/FontMatrix get 0 get div 7 index
2 div 1 index .88 mul}def}ifelse/cid_temp 15 dict def cid_temp begin
/cid_CIDFONT exch def 3 copy pop dup/cid_BYTE_COUNT exch def 0 gt{
ct_cidfont_stream_init FDArray{/Private get dup/SubrMapOffset known{begin
/Subrs SubrCount array def Subrs SubrMapOffset SubrCount SDBytes ct_Level2?{
currentdict dup/SubrMapOffset undef dup/SubrCount undef/SDBytes undef}if end
/cid_SD_BYTES exch def/cid_SUBR_COUNT exch def/cid_SUBR_MAP_OFFSET exch def
/cid_SUBRS exch def cid_SUBR_COUNT 0 gt{GlyphData cid_SUBR_MAP_OFFSET
cid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi 0 1 cid_SUBR_COUNT 1 sub{
exch 1 index 1 add cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add GlyphData exch
cid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi cid_SUBRS 4 2 roll
GlyphData exch 4 index 1 index sub ct_GetInterval dup length string copy put}
for pop}if}{pop}ifelse}forall}if cleartomark pop pop end CIDFontName
currentdict/CIDFont defineresource pop end end}stopped{cleartomark/StartData
ct_reraise}if}bind def currentdict end def/ct_saveCIDInit{/CIDInit/ProcSet
ct_resourcestatus{true}{/CIDInitC/ProcSet ct_resourcestatus}ifelse{pop pop
/CIDInit/ProcSet findresource ct_UseNativeCapability?{pop null}{/CIDInit
ct_CIDInit/ProcSet defineresource pop}ifelse}{/CIDInit ct_CIDInit/ProcSet
defineresource pop null}ifelse ct_Vars exch/ct_oldCIDInit exch put}bind def
/ct_restoreCIDInit{ct_Vars/ct_oldCIDInit get dup null ne{/CIDInit exch/ProcSet
defineresource pop}{pop}ifelse}bind def/ct_BuildCharSetUp{1 index begin
CIDFont begin Adobe_CoolType_Utility/ct_BuildCharDict get begin/ct_dfCharCode
exch def/ct_dfDict exch def CIDFirstByte ct_dfCharCode add dup CIDCount ge{pop
0}if/cid exch def{GlyphDirectory cid 2 copy known{get}{pop pop nullstring}
ifelse dup length FDBytes sub 0 gt{dup FDBytes 0 ne{0 FDBytes ct_cvnsi}{pop 0}
ifelse/fdIndex exch def dup length FDBytes sub FDBytes exch getinterval
/charstring exch def exit}{pop cid 0 eq{/charstring nullstring def exit}if/cid
0 def}ifelse}loop}def/ct_SetCacheDevice{0 0 moveto dup stringwidth 3 -1 roll
true charpath pathbbox 0 -1000 7 index 2 div 880 setcachedevice2 0 0 moveto}
def/ct_CloneSetCacheProc{1 eq{stringwidth pop -2 div -880 0 -1000 setcharwidth
moveto}{usewidths?{currentfont/Widths get cid 2 copy known{get exch pop aload
pop}{pop pop stringwidth}ifelse}{stringwidth}ifelse setcharwidth 0 0 moveto}
ifelse}def/ct_Type3ShowCharString{ct_FDDict fdIndex 2 copy known{get}{
currentglobal 3 1 roll 1 index gcheck setglobal ct_Type1FontTemplate dup
maxlength dict copy begin FDArray fdIndex get dup/FontMatrix 2 copy known{get}
{pop pop ct_defaultFontMtx}ifelse/FontMatrix exch dup length array copy def
/Private get/Private exch def/Widths rootfont/Widths get def/CharStrings 1
dict dup/.notdef<d841272cf18f54fc13>dup length string copy put def currentdict
end/ct_Type1Font exch definefont dup 5 1 roll put setglobal}ifelse dup
/CharStrings get 1 index/Encoding get ct_dfCharCode get charstring put
rootfont/WMode 2 copy known{get}{pop pop 0}ifelse exch 1000 scalefont setfont
ct_str1 0 ct_dfCharCode put ct_str1 exch ct_dfSetCacheProc ct_SyntheticBold{
currentpoint ct_str1 show newpath moveto ct_str1 true charpath ct_StrokeWidth
setlinewidth stroke}{ct_str1 show}ifelse}def/ct_Type4ShowCharString{ct_dfDict
ct_dfCharCode charstring FDArray fdIndex get dup/FontMatrix get dup
ct_defaultFontMtx ct_matrixeq not{ct_1000Mtx matrix concatmatrix concat}{pop}
ifelse/Private get Adobe_CoolType_Utility/ct_Level2? get not{ct_dfDict/Private
3 -1 roll{put}1183615869 internaldict/superexec get exec}if 1183615869
internaldict Adobe_CoolType_Utility/ct_Level2? get{1 index}{3 index/Private
get mark 6 1 roll}ifelse dup/RunInt known{/RunInt get}{pop/CCRun}ifelse get
exec Adobe_CoolType_Utility/ct_Level2? get not{cleartomark}if}bind def
/ct_BuildCharIncremental{{Adobe_CoolType_Utility/ct_MakeOCF get begin
ct_BuildCharSetUp ct_ShowCharString}stopped{stop}if end end end end}bind def
/BaseFontNameStr(BF00)def/ct_Type1FontTemplate 14 dict begin/FontType 1 def
/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def/Encoding
ct_cHexEncoding def/PaintType 0 def currentdict end def/BaseFontTemplate 11
dict begin/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def
/Encoding ct_cHexEncoding def/BuildChar/ct_BuildCharIncremental load def
ct_Clone?{/FontType 3 def/ct_ShowCharString/ct_Type3ShowCharString load def
/ct_dfSetCacheProc/ct_CloneSetCacheProc load def/ct_SyntheticBold false def
/ct_StrokeWidth 1 def}{/FontType 4 def/Private 1 dict dup/lenIV 4 put def
/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def/PaintType 0 def
/ct_ShowCharString/ct_Type4ShowCharString load def}ifelse/ct_str1 1 string def
currentdict end def/BaseFontDictSize BaseFontTemplate length 5 add def
/ct_matrixeq{true 0 1 5{dup 4 index exch get exch 3 index exch get eq and dup
not{exit}if}for exch pop exch pop}bind def/ct_makeocf{15 dict begin exch/WMode
exch def exch/FontName exch def/FontType 0 def/FMapType 2 def/FontMatrix
matrix def/bfCount 1 index/CIDCount get 256 idiv 1 add dup 256 gt{pop 256}if
def/Encoding 256 array 0 1 bfCount 1 sub{2 copy dup put pop}for bfCount 1 255{
2 copy bfCount put pop}for def/FDepVector bfCount dup 256 lt{1 add}if array
def BaseFontTemplate BaseFontDictSize dict copy begin/CIDFont exch def CIDFont
/FontBBox known{CIDFont/FontBBox get/FontBBox exch def}if CIDFont/CDevProc
known{CIDFont/CDevProc get/CDevProc exch def}if currentdict end
BaseFontNameStr 3(0)putinterval 0 1 bfCount dup 256 eq{1 sub}if{FDepVector
exch 2 index BaseFontDictSize dict copy begin dup/CIDFirstByte exch 256 mul
def FontType 3 eq{/ct_FDDict 2 dict def}if currentdict end 1 index 16
BaseFontNameStr 2 2 getinterval cvrs pop BaseFontNameStr exch definefont put}
for ct_Clone?{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
if FontName currentdict end definefont ct_Clone?{gsave dup 1000 scalefont
setfont ct_BuildCharDict begin/usewidths? false def currentfont/Widths get
begin exch/CIDFont get/GlyphDirectory get{pop dup charcode exch 1 index 0 2
index 256 idiv put 1 index exch 1 exch 256 mod put stringwidth 2 array astore
def}forall end/usewidths? true def end grestore}{exch pop}ifelse}bind def
/ct_ComposeFont{ct_UseNativeCapability?{2 index/CMap ct_resourcestatus{pop pop
exch pop}{/CIDInit/ProcSet findresource begin 12 dict begin begincmap/CMapName
3 index def/CMapVersion 1 def/CMapType 1 def exch/WMode exch def/CIDSystemInfo
3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs
(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop
(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1
begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0
endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}
ifelse composefont}{3 2 roll pop 0 get/CIDFont findresource ct_makeocf}ifelse}
bind def/ct_MakeIdentity{ct_UseNativeCapability?{1 index/CMap
ct_resourcestatus{pop pop}{/CIDInit/ProcSet findresource begin 12 dict begin
begincmap/CMapName 2 index def/CMapVersion 1 def/CMapType 1 def/CIDSystemInfo
3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs
(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop
(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1
begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0
endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}
ifelse composefont}{exch pop 0 get/CIDFont findresource ct_makeocf}ifelse}bind
def currentdict readonly pop end end
%%EndResource
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2000 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Image 65 dict dup begin put
/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
%%don't initialize AGMIMG_&customcolorimage, it wrecks havoc in a nested environment
%%AGMIMG_ccimage_exists not {/AGMIMG_&customcolorimage nd} if 
/AGMIMG_&imagemask nd
/AGMIMG_mbuf () def
/AGMIMG_ybuf () def
/AGMIMG_kbuf () def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/idximg nd
/doc_setup
{ 
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage /colorimage ldf
	}if
	end
	end
}def
/page_setup
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists {/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				 }ifelse
			 }ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
	}ifelse
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/idximg /indexed_imageormask ldf
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer
{
}def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMIMG_&imagemask
			}{
				AGMIMG_&image
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get
		dup /DeviceGray eq{
			pop AGMCORE_black_plate not
		}{
			/DeviceCMYK eq{
				AGMCORE_is_cmyk_sep not
			}if
		}ifelse
	}{
		false
	}ifelse
}def
/imageormask
{
	begin
		SkipImageProc not{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					image
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					AGMCORE_host_sep{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentdict ignoreimagedata
				 		}ifelse
					}{
						imagemask
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								MultipleDataSources{
									4 {pop} repeat
									/DataSource [
										DataSource 0 get /exec cvx
										DataSource 1 get /exec cvx
										DataSource 2 get /exec cvx
										DataSource 3 get /exec cvx
										/AGMCORE_get_ink_data cvx
									] cvx def
								}{
									/DataSource /DataSource load filter_cmyk 0 () /SubFileDecode filter def
								}ifelse
	
								/Decode [ Decode 0 get Decode 1 get ] def
								/MultipleDataSources false def
								/NComponents 1 def
								/Operator /image def
								AGMCORE_is_cmyk_sep{
									currentoverprint InksUsed current_ink not and{
										currentdict consumeimagedata
									}{
										invert_image_samples
						 				1 AGMCORE_&setgray
										currentdict imageormask_sys
									}ifelse
								}{
										currentdict ignoreimagedata
								}ifelse
							}{
									
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								/DoImage true def
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys} if
							}{
								image
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentoverprint InksUsed current_ink not and{
								}{
									currentcolorspace overprint_plate not{
										knockout_unitsq
									}if
								}ifelse
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	begin
	SkipImageProc not{
		save mark 
	
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentoverprint InksUsed current_ink not and{
						}{
							currentdict/ImageMatrix get concat
							knockout_unitsq
						}ifelse
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
	 								[ /Separation Name [/DeviceGray]
	 								{ 
	 									sep_colorspace_proc AGMCORE_get_ink_data
										1 exch sub
	 								} bind
									] AGMCORE_&setcolorspace
									/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
							currentdict consumeimagedata 
 							currentoverprint not Name (All) eq or{
								gsave 
								knockout_unitsq
								grestore
		 					}if
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}if
	end
	end
}def
/imageormask_l2_overprint
{
	
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{ 			
			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN [
				AGMIMG_c 0 ne {/Cyan} if
				AGMIMG_m 0 ne {/Magenta} if
				AGMIMG_y 0 ne {/Yellow} if
				AGMIMG_k 0 ne {/Black} if
				] /DeviceCMYK {}] setcolorspace
				
				AGMIMG_c 0 ne {AGMIMG_c} if
				AGMIMG_m 0 ne {AGMIMG_m} if
				AGMIMG_y 0 ne {AGMIMG_y} if
				AGMIMG_k 0 ne {AGMIMG_k} if
				setcolor			
			}{	
				/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
				[/Indexed 				
					[
						/DeviceN [
							AGMIMG_c 0 ne {/Cyan} if
							AGMIMG_m 0 ne {/Magenta} if
							AGMIMG_y 0 ne {/Yellow} if
							AGMIMG_k 0 ne {/Black} if
						] 
						/DeviceCMYK {
							AGMIMG_k 0 eq {0} if
							AGMIMG_y 0 eq {0 exch} if
							AGMIMG_m 0 eq {0 3 1 roll} if
							AGMIMG_c 0 eq {0 4 1 roll} if						
						}
					]
					255
					{
						255 div 
		
						mark exch
						dup	dup dup
		
						
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
							
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
		
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
							
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				] setcolorspace
			}ifelse
			
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
	
 		currentdict
 		AGMCORE_host_sep{
 			
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget /CSA get map_csa overprint_plate not{
					knockout_unitsq
				}if
			}{
	 			AGMCORE_is_cmyk_sep{
					Operator /imagemask eq{
						imageormask_sys
					}{
						level2{
							indexed_image_lev2_sep
						}{
							indexed_image_lev1_sep
						}ifelse
					}ifelse
				}{
					currentoverprint not{
						knockout_image_samples
		 				imageormask_sys
		 			}{
		 				currentdict consumeimagedata
		 			}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				imageormask
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		
		currentcolorspace 
		dup 1 /DeviceGray put
		dup 3 [
			currentcolorspace 3 get 
			{
				exch 4 mul 4 getinterval {} forall
				AGMCORE_get_ink_data 255 div 1 exch sub
			} /exec cvx
		] cvx put
		setcolorspace
		
		currentdict 
		Operator /imagemask eq{
			AGMIMG_&imagemask
		}{
			AGMIMG_&image
		}ifelse
			
	end end
}def
/OPIimage
{
	dup type /dicttype ne{
		10 dict begin
			/DataSource xdf
			/ImageMatrix xdf
			/BitsPerComponent xdf
			/Height xdf
			/Width xdf
			/ImageType 1 def
			/Decode [0 1 def]
			currentdict
		end
	}if
	dup begin
		/NComponents 1 cdndf
		/MultipleDataSources false cdndf
		/SkipImageProc {false} cdndf
		/HostSepColorImage false cdndf
		/Decode [
				0 
				currentcolorspace 0 get /Indexed eq{
					2 BitsPerComponent exp 1 sub
				}{
					1
				}ifelse
		] cdndf
		/Operator /image cdndf
	end
	/sep_colorspace_dict AGMCORE_gget null eq{
		imageormask
	}{
		gsave
		dup begin invert_image_samples end
		sep_imageormask
		grestore
	}ifelse
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type /dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode [/customcolor_tint AGMCORE_gget 0] def
				/Operator /image def
				/HostSepColorImage false def
				/InksUsed [] def
				/SkipImageProc {false} def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		bdict
			/Name AGMIMG_colorAry 4 get
			/CSA [ /DeviceCMYK ] 
			/TintMethod /Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components [ AGMIMG_colorAry aload pop pop ] 
		edict
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		dup 4 get map_alias{
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					} if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage	
		end
	} def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				
				{
					255 mul round cvi GrayLookup exch get
				} currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get /DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
						
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer
						currentdict imageormask
					}{ 
						
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					
					MappedCSA 0 get /DeviceGray eq {
						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get /DeviceCMYK eq {
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{ 
							currentcolortransfer
							{pop 1} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
					
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{ 
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			
			currentdict imageormask_sys
				
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				
				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				
				MappedCSA 0 get /DeviceGray eq {
					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 	   Lookup exch get HiVal div} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			
			currentdict imageormask_sys
				
		end end
	}def
}if
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%ADOBeginClientInjection: DocumentProlog End "AI10"
%ADOEndClientInjection: DocumentProlog End "AI10"
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
%ADOBeginClientInjection: DocumentSetup Start "AI10"
%ADOEndClientInjection: DocumentSetup Start "AI10"
Adobe_AGM_Utils begin
2 2010 true Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
Adobe_AGM_Image/doc_setup get exec
%ADOBeginClientInjection: DocumentSetup End "AI10"
%ADOEndClientInjection: DocumentSetup End "AI10"
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: scene-2004-020-outlines.eps 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI10"
%ADOEndClientInjection: PageSetup Start "AI10"
Adobe_AGM_Utils begin
Adobe_AGM_Core/page_setup get exec
Adobe_CoolType_Core/page_setup get exec
Adobe_AGM_Image/page_setup get exec
%ADOBeginClientInjection: PageSetup End "AI10"
%ADOEndClientInjection: PageSetup End "AI10"
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
1 -1 scale 0 -792 translate
[1 0 0 1 0 0 ]  concat
mark
/0 
[/DeviceGray] add_csa
/CSA /0 
/1 
[/DeviceCMYK] add_csa
/CSA /1 
/2 
[/DeviceRGB] add_csa
/CSA /2 
cleartomark
300 path_rez
% page clip
gsave
newpath
gsave % PSGState
0 0 mo
0 792 li
612 792 li
612 0 li
clp
[1 0 0 1 0 0 ] concat
%ADOBeginClientInjection: BeginPageContent "AI10"
%ADOEndClientInjection: BeginPageContent "AI10"
612 792 mo
0 792 li
0 0 li
612 0 li
612 792 li
false sop
0 0 0 rgb
ef
gsave % PSGState
612 792 mo
0 792 li
0 0 li
612 0 li
612 792 li
eclp
287.027 283.921 mo
293.528 284.591 292.267 274.331 299.573 276.593 cv
299.692 277.298 299.561 278.396 301.067 279.071 cv
309.858 271.725 317.738 264.477 326.085 257.8 cv
330.775 252.016 324.423 247.143 326.476 242.564 cv
327.637 242.072 327.557 242.253 329.203 242.774 cv
329.303 243.036 329.402 243.297 329.448 243.68 cv
333.638 245.63 338.016 247.809 343.379 249.563 cv
345.62 244.562 343.196 237.542 344.979 233.566 cv
345.535 233.454 346.118 233.282 346.763 233.136 cv
351.023 236.059 356.662 238.008 362.608 240.239 cv
362.924 240.019 363.213 239.858 363.475 239.759 cv
362.967 226.363 355.658 222.653 372.275 229.161 cv
384.441 229.622 397.202 207.125 407.141 205.937 cv
410.354 209.259 411.25 210.167 409.24 215.777 cv
406.229 216.525 406.229 216.525 402.307 216.721 cv
391.614 214.75 383.774 230.626 374.201 232.774 cv
369.748 231.573 367.037 230.358 365.16 230.023 cv
363.675 233.337 368.465 238.957 365.344 244.142 cv
362.568 244.2 350.332 238.571 348.229 237.773 cv
347.887 238.053 347.544 238.334 347.321 238.668 cv
347.492 239.902 347.217 250.849 346.465 253.333 cv
346.027 253.499 345.679 253.632 345.337 253.913 cv
336.197 250.25 336.197 250.25 329.685 247.187 cv
328.47 249.897 333.815 253.307 330.871 257.775 cv
325.696 261.895 305.415 275.667 303.234 282.792 cv
304.653 283.5 305.723 284.342 306.896 286.243 cv
305.196 290.038 298.627 291.941 296.115 297.543 cv
287.027 283.921 li
/0 
<<
/Name (50% Black)
/CSA /2 
/TintMethod /Additive
/TintProc null
/MappedCSA null
/NComponents 3 
/ColorLookup [ 
[ 1 1 1 ] [ .998031 .998031 .998031 ]
[ .996063 .996063 .996063 ] [ .994094 .994094 .994094 ]
[ .992125 .992125 .992125 ] [ .990157 .990157 .990157 ]
[ .988188 .988188 .988188 ] [ .98622 .98622 .98622 ]
[ .984251 .984251 .984251 ] [ .982282 .982282 .982282 ]
[ .980314 .980314 .980314 ] [ .978345 .978345 .978345 ]
[ .976376 .976376 .976376 ] [ .974408 .974408 .974408 ]
[ .972439 .972439 .972439 ] [ .970471 .970471 .970471 ]
[ .968502 .968502 .968502 ] [ .966533 .966533 .966533 ]
[ .964565 .964565 .964565 ] [ .962596 .962596 .962596 ]
[ .960627 .960627 .960627 ] [ .958659 .958659 .958659 ]
[ .95669 .95669 .95669 ] [ .954722 .954722 .954722 ]
[ .952753 .952753 .952753 ] [ .950784 .950784 .950784 ]
[ .948816 .948816 .948816 ] [ .946847 .946847 .946847 ]
[ .944878 .944878 .944878 ] [ .94291 .94291 .94291 ]
[ .940941 .940941 .940941 ] [ .938973 .938973 .938973 ]
[ .937004 .937004 .937004 ] [ .935035 .935035 .935035 ]
[ .933067 .933067 .933067 ] [ .931098 .931098 .931098 ]
[ .929129 .929129 .929129 ] [ .927161 .927161 .927161 ]
[ .925192 .925192 .925192 ] [ .923223 .923223 .923223 ]
[ .921255 .921255 .921255 ] [ .919286 .919286 .919286 ]
[ .917318 .917318 .917318 ] [ .915349 .915349 .915349 ]
[ .91338 .91338 .91338 ] [ .911412 .911412 .911412 ]
[ .909443 .909443 .909443 ] [ .907474 .907474 .907474 ]
[ .905506 .905506 .905506 ] [ .903537 .903537 .903537 ]
[ .901569 .901569 .901569 ] [ .8996 .8996 .8996 ]
[ .897631 .897631 .897631 ] [ .895663 .895663 .895663 ]
[ .893694 .893694 .893694 ] [ .891725 .891725 .891725 ]
[ .889757 .889757 .889757 ] [ .887788 .887788 .887788 ]
[ .88582 .88582 .88582 ] [ .883851 .883851 .883851 ]
[ .881882 .881882 .881882 ] [ .879914 .879914 .879914 ]
[ .877945 .877945 .877945 ] [ .875976 .875976 .875976 ]
[ .874008 .874008 .874008 ] [ .872039 .872039 .872039 ]
[ .870071 .870071 .870071 ] [ .868102 .868102 .868102 ]
[ .866133 .866133 .866133 ] [ .864165 .864165 .864165 ]
[ .862196 .862196 .862196 ] [ .860227 .860227 .860227 ]
[ .858259 .858259 .858259 ] [ .85629 .85629 .85629 ]
[ .854322 .854322 .854322 ] [ .852353 .852353 .852353 ]
[ .850384 .850384 .850384 ] [ .848416 .848416 .848416 ]
[ .846447 .846447 .846447 ] [ .844478 .844478 .844478 ]
[ .84251 .84251 .84251 ] [ .840541 .840541 .840541 ]
[ .838573 .838573 .838573 ] [ .836604 .836604 .836604 ]
[ .834635 .834635 .834635 ] [ .832667 .832667 .832667 ]
[ .830698 .830698 .830698 ] [ .828729 .828729 .828729 ]
[ .826761 .826761 .826761 ] [ .824792 .824792 .824792 ]
[ .822823 .822823 .822823 ] [ .820855 .820855 .820855 ]
[ .818886 .818886 .818886 ] [ .816918 .816918 .816918 ]
[ .814949 .814949 .814949 ] [ .81298 .81298 .81298 ]
[ .811012 .811012 .811012 ] [ .809043 .809043 .809043 ]
[ .807074 .807074 .807074 ] [ .805106 .805106 .805106 ]
[ .803137 .803137 .803137 ] [ .801169 .801169 .801169 ]
[ .7992 .7992 .7992 ] [ .797231 .797231 .797231 ]
[ .795263 .795263 .795263 ] [ .793294 .793294 .793294 ]
[ .791325 .791325 .791325 ] [ .789357 .789357 .789357 ]
[ .787388 .787388 .787388 ] [ .78542 .78542 .78542 ]
[ .783451 .783451 .783451 ] [ .781482 .781482 .781482 ]
[ .779514 .779514 .779514 ] [ .777545 .777545 .777545 ]
[ .775576 .775576 .775576 ] [ .773608 .773608 .773608 ]
[ .771639 .771639 .771639 ] [ .769671 .769671 .769671 ]
[ .767702 .767702 .767702 ] [ .765733 .765733 .765733 ]
[ .763765 .763765 .763765 ] [ .761796 .761796 .761796 ]
[ .759827 .759827 .759827 ] [ .757859 .757859 .757859 ]
[ .75589 .75589 .75589 ] [ .753922 .753922 .753922 ]
[ .751953 .751953 .751953 ] [ .749984 .749984 .749984 ]
[ .748016 .748016 .748016 ] [ .746047 .746047 .746047 ]
[ .744078 .744078 .744078 ] [ .74211 .74211 .74211 ]
[ .740141 .740141 .740141 ] [ .738172 .738172 .738172 ]
[ .736204 .736204 .736204 ] [ .734235 .734235 .734235 ]
[ .732267 .732267 .732267 ] [ .730298 .730298 .730298 ]
[ .728329 .728329 .728329 ] [ .726361 .726361 .726361 ]
[ .724392 .724392 .724392 ] [ .722423 .722423 .722423 ]
[ .720455 .720455 .720455 ] [ .718486 .718486 .718486 ]
[ .716518 .716518 .716518 ] [ .714549 .714549 .714549 ]
[ .71258 .71258 .71258 ] [ .710612 .710612 .710612 ]
[ .708643 .708643 .708643 ] [ .706674 .706674 .706674 ]
[ .704706 .704706 .704706 ] [ .702737 .702737 .702737 ]
[ .700769 .700769 .700769 ] [ .6988 .6988 .6988 ]
[ .696831 .696831 .696831 ] [ .694863 .694863 .694863 ]
[ .692894 .692894 .692894 ] [ .690925 .690925 .690925 ]
[ .688957 .688957 .688957 ] [ .686988 .686988 .686988 ]
[ .68502 .68502 .68502 ] [ .683051 .683051 .683051 ]
[ .681082 .681082 .681082 ] [ .679114 .679114 .679114 ]
[ .677145 .677145 .677145 ] [ .675176 .675176 .675176 ]
[ .673208 .673208 .673208 ] [ .671239 .671239 .671239 ]
[ .669271 .669271 .669271 ] [ .667302 .667302 .667302 ]
[ .665333 .665333 .665333 ] [ .663365 .663365 .663365 ]
[ .661396 .661396 .661396 ] [ .659427 .659427 .659427 ]
[ .657459 .657459 .657459 ] [ .65549 .65549 .65549 ]
[ .653521 .653521 .653521 ] [ .651553 .651553 .651553 ]
[ .649584 .649584 .649584 ] [ .647616 .647616 .647616 ]
[ .645647 .645647 .645647 ] [ .643678 .643678 .643678 ]
[ .64171 .64171 .64171 ] [ .639741 .639741 .639741 ]
[ .637773 .637773 .637773 ] [ .635804 .635804 .635804 ]
[ .633835 .633835 .633835 ] [ .631867 .631867 .631867 ]
[ .629898 .629898 .629898 ] [ .627929 .627929 .627929 ]
[ .625961 .625961 .625961 ] [ .623992 .623992 .623992 ]
[ .622023 .622023 .622023 ] [ .620055 .620055 .620055 ]
[ .618086 .618086 .618086 ] [ .616118 .616118 .616118 ]
[ .614149 .614149 .614149 ] [ .61218 .61218 .61218 ]
[ .610212 .610212 .610212 ] [ .608243 .608243 .608243 ]
[ .606274 .606274 .606274 ] [ .604306 .604306 .604306 ]
[ .602337 .602337 .602337 ] [ .600369 .600369 .600369 ]
[ .5984 .5984 .5984 ] [ .596431 .596431 .596431 ]
[ .594463 .594463 .594463 ] [ .592494 .592494 .592494 ]
[ .590525 .590525 .590525 ] [ .588557 .588557 .588557 ]
[ .586588 .586588 .586588 ] [ .58462 .58462 .58462 ]
[ .582651 .582651 .582651 ] [ .580682 .580682 .580682 ]
[ .578714 .578714 .578714 ] [ .576745 .576745 .576745 ]
[ .574776 .574776 .574776 ] [ .572808 .572808 .572808 ]
[ .570839 .570839 .570839 ] [ .568871 .568871 .568871 ]
[ .566902 .566902 .566902 ] [ .564933 .564933 .564933 ]
[ .562965 .562965 .562965 ] [ .560996 .560996 .560996 ]
[ .559027 .559027 .559027 ] [ .557059 .557059 .557059 ]
[ .55509 .55509 .55509 ] [ .553122 .553122 .553122 ]
[ .551153 .551153 .551153 ] [ .549184 .549184 .549184 ]
[ .547216 .547216 .547216 ] [ .545247 .545247 .545247 ]
[ .543278 .543278 .543278 ] [ .54131 .54131 .54131 ]
[ .539341 .539341 .539341 ] [ .537372 .537372 .537372 ]
[ .535404 .535404 .535404 ] [ .533435 .533435 .533435 ]
[ .531467 .531467 .531467 ] [ .529498 .529498 .529498 ]
[ .527529 .527529 .527529 ] [ .525561 .525561 .525561 ]
[ .523592 .523592 .523592 ] [ .521623 .521623 .521623 ]
[ .519655 .519655 .519655 ] [ .517686 .517686 .517686 ]
[ .515718 .515718 .515718 ] [ .513749 .513749 .513749 ]
[ .51178 .51178 .51178 ] [ .509812 .509812 .509812 ]
[ .507843 .507843 .507843 ] [ .505874 .505874 .505874 ]
[ .503906 .503906 .503906 ] [ .501937 .501937 .501937 ]
[ .499969 .499969 .499969 ] [ .498 .498 .498 ]
] 
>>
add_csd
1 /0 get_csd
sepcs
1 sep
ef
3 lw
1 lc
2 lj
4 ml
[] 0 dsh
true sadj
409.5 467.5 mo
446.561 474.238 li
.498039 .498039 .498039 rgb
s
402.5 479.5 mo
431.533 494.017 li
.498039 .498039 .498039 rgb
s
398.5 491.5 mo
426.051 521.806 li
.498039 .498039 .498039 rgb
s
359.5 429.5 mo
353.5 397.5 li
.498039 .498039 .498039 rgb
s
368.5 425.5 mo
372.5 404.5 li
.498039 .498039 .498039 rgb
s
381.5 490.5 mo
375.5 504.5 li
.498039 .498039 .498039 rgb
s
387.5 494.5 mo
390.5 510.5 li
.498039 .498039 .498039 rgb
s
603.085 386.591 mo
391.5 459.5 li
.498039 .498039 .498039 rgb
s
605.574 347.669 mo
386.5 450.5 li
.498039 .498039 .498039 rgb
s
586.481 320.594 mo
377.5 442.5 li
.498039 .498039 .498039 rgb
s
429.496 517.641 mo
429.496 490.025 451.883 467.641 479.497 467.641 cv
507.111 467.641 529.497 490.025 529.497 517.641 cv
529.497 545.256 507.111 567.641 479.497 567.641 cv
451.883 567.641 429.496 545.256 429.496 517.641 cv
.52549 .203922 .584314 rgb
ef
515.423 516.987 mo
515.423 536.454 499.617 552.235 480.15 552.235 cv
.52549 .203922 .584314 rgb
ef
429.496 517.641 mo
429.496 490.025 451.883 467.641 479.497 467.641 cv
507.111 467.641 529.497 490.025 529.497 517.641 cv
529.497 545.256 507.111 567.641 479.497 567.641 cv
451.883 567.641 429.496 545.256 429.496 517.641 cv
.407843 .0509804 .505882 rgb
ef
3.5 lw
0 lj
3.8637 ml
515.423 516.987 mo
515.423 536.454 499.617 552.235 480.15 552.235 cv
0 0 0 rgb
s
46.75 621.5 mo
46.75 127.083 li
72.75 127.083 li
72.75 127.083 72.5 615.5 72.75 621.5 cv
61.5 629.5 46.75 621.5 46.75 621.5 cv
0 0 0 rgb
f
5 lw
0 lc
46.75 621.5 mo
46.75 127.083 li
72.75 127.083 li
72.75 127.083 72.5 615.5 72.75 621.5 cv
61.5 629.5 46.75 621.5 46.75 621.5 cv
cp
1 1 1 rgb
s
498.25 781.5 mo
498.25 263.083 li
550.25 263.083 li
550.25 263.083 550.3 754.631 550.25 781.5 cv
524.92 796.498 498.25 781.5 498.25 781.5 cv
0 0 0 rgb
f
7 lw
498.25 781.5 mo
498.25 263.083 li
550.25 263.083 li
550.25 263.083 550.3 754.631 550.25 781.5 cv
524.92 796.498 498.25 781.5 498.25 781.5 cv
cp
1 1 1 rgb
s
81.25 119.367 mo
81.25 131.241 71.624 140.867 59.75 140.867 cv
47.876 140.867 38.25 131.241 38.25 119.367 cv
38.25 107.493 47.876 97.8672 59.75 97.8672 cv
71.624 97.8672 81.25 107.493 81.25 119.367 cv
0 0 0 rgb
f
5 lw
81.25 119.367 mo
81.25 131.241 71.624 140.867 59.75 140.867 cv
47.876 140.867 38.25 131.241 38.25 119.367 cv
38.25 107.493 47.876 97.8672 59.75 97.8672 cv
71.624 97.8672 81.25 107.493 81.25 119.367 cv
cp
1 1 1 rgb
s
529.641 235.271 mo
516.794 278.551 li
72.1177 136.557 li
72.1177 136.557 69.3594 132.045 71.7856 122.768 cv
74.2119 113.491 79.5186 111.629 79.5186 111.629 cv
529.641 235.271 li
0 0 0 rgb
f
6 lw
529.641 235.271 mo
516.794 278.551 li
72.1177 136.557 li
72.1177 136.557 69.3594 132.045 71.7856 122.768 cv
74.2119 113.491 79.5186 111.629 79.5186 111.629 cv
529.641 235.271 li
cp
1 1 1 rgb
s
561.75 255.367 mo
561.75 276.078 544.961 292.867 524.25 292.867 cv
503.539 292.867 486.75 276.078 486.75 255.367 cv
486.75 234.656 503.539 217.867 524.25 217.867 cv
544.961 217.867 561.75 234.656 561.75 255.367 cv
0 0 0 rgb
f
7 lw
561.75 255.367 mo
561.75 276.078 544.961 292.867 524.25 292.867 cv
503.539 292.867 486.75 276.078 486.75 255.367 cv
486.75 234.656 503.539 217.867 524.25 217.867 cv
544.961 217.867 561.75 234.656 561.75 255.367 cv
cp
1 1 1 rgb
s
210.932 181.982 mo
207.902 178.599 207.53 172.193 207.681 167.859 cv
207.835 163.43 210.473 158.618 213.587 155.474 cv
214.801 154.25 216.125 153.193 217.69 152.451 cv
219.056 151.804 220.81 151.764 221.559 150.341 cv
223.727 146.228 215.467 144.103 213.096 143.341 cv
203.368 140.214 196.145 147.314 191.648 155.523 cv
188.677 160.95 188.341 169.37 191.464 174.829 cv
193.375 178.167 197.486 180.678 200.791 182.426 cv
205.301 184.814 209.396 183.225 212.667 179.598 cv
0 0 0 rgb
f
4 lw
210.932 181.982 mo
207.902 178.599 207.53 172.193 207.681 167.859 cv
207.835 163.43 210.473 158.618 213.587 155.474 cv
214.801 154.25 216.125 153.193 217.69 152.451 cv
219.056 151.804 220.81 151.764 221.559 150.341 cv
223.727 146.228 215.467 144.103 213.096 143.341 cv
203.368 140.214 196.145 147.314 191.648 155.523 cv
188.677 160.95 188.341 169.37 191.464 174.829 cv
193.375 178.167 197.486 180.678 200.791 182.426 cv
205.301 184.814 209.396 183.225 212.667 179.598 cv
1 /0 get_csd
sepcs
1 sep
s
194.638 169.599 mo
200.471 177.775 li
97.7612 251.729 li
91.9277 243.554 li
194.638 169.599 li
0 0 0 rgb
f
194.638 169.599 mo
200.471 177.775 li
97.7612 251.729 li
91.9277 243.554 li
194.638 169.599 li
cp
1 /0 get_csd
sepcs
1 sep
s
87.5527 250.445 mo
81.2856 236.862 103.519 227.115 104.743 248.983 cv
103.146 252.54 100.875 253.702 96.9673 256.202 cv
92.9629 254.782 90.1895 253.333 87.5527 250.445 cv
true sop
1 /0 get_csd
sepcs
1 sep
f
91.2246 250.457 mo
84.7793 237.509 102.668 233.596 101.721 249.058 cv
98.5972 253.119 95.0024 253.966 91.2246 250.457 cv
false sop
0 0 0 rgb
f
91.4297 247.469 mo
91.4219 246.809 91.4219 246.809 92.52 245.965 cv
95.667 246.379 97.002 244.105 98.3291 245.833 cv
97.6353 247.53 97.5186 247.705 95.0942 249.316 cv
93.8232 248.961 92.3545 248.674 91.4297 247.469 cv
true sop
1 /0 get_csd
sepcs
1 sep
f
193.054 165.372 mo
206.64 159.104 216.386 181.337 194.518 182.562 cv
190.96 180.964 189.798 178.693 187.298 174.786 cv
188.719 170.782 190.167 168.006 193.054 165.372 cv
false sop
0 0 0 rgb
f
193.054 165.372 mo
206.64 159.104 216.386 181.337 194.518 182.562 cv
190.96 180.964 189.798 178.693 187.298 174.786 cv
188.719 170.782 190.167 168.006 193.054 165.372 cv
cp
1 /0 get_csd
sepcs
1 sep
s
91.1333 249.448 mo
99.0366 243.25 li
177.555 342.517 li
169.652 348.713 li
91.1333 249.448 li
0 0 0 rgb
f
91.1333 249.448 mo
99.0366 243.25 li
177.555 342.517 li
169.652 348.713 li
91.1333 249.448 li
cp
1 /0 get_csd
sepcs
1 sep
s
176.733 352.771 mo
163.447 359.646 152.706 337.876 174.496 335.665 cv
178.122 337.1 179.384 339.316 182.059 343.107 cv
180.821 347.171 179.499 350.008 176.733 352.771 cv
true sop
1 /0 get_csd
sepcs
1 sep
f
176.579 349.104 mo
163.936 356.128 159.219 338.434 174.706 338.681 cv
178.907 341.618 179.914 345.17 176.579 349.104 cv
false sop
0 0 0 rgb
f
173.586 349.034 mo
172.926 349.071 172.926 349.071 172.034 348.012 cv
172.304 344.85 169.973 343.619 171.639 342.215 cv
173.366 342.831 173.546 342.94 175.265 345.289 cv
174.967 346.574 174.747 348.056 173.586 349.034 cv
true sop
1 /0 get_csd
sepcs
1 sep
f
86.9814 251.221 mo
80.1064 237.933 101.876 227.191 104.088 248.981 cv
102.653 252.608 100.437 253.872 96.646 256.544 cv
92.5815 255.308 89.7432 253.986 86.9814 251.221 cv
false sop
0 0 0 rgb
f
86.9814 251.221 mo
80.1064 237.933 101.876 227.191 104.088 248.981 cv
102.653 252.608 100.437 253.872 96.646 256.544 cv
92.5815 255.308 89.7432 253.986 86.9814 251.221 cv
cp
1 /0 get_csd
sepcs
1 sep
s
341.695 376.849 mo
341.532 377.337 338.866 401.031 337.405 422.955 cv
336.416 423.883 323.72 424.756 321.05 425.108 cv
319.187 441.128 319.187 441.128 319.169 444.369 cv
338.818 446.408 380.518 458.121 377.57 485.451 cv
373.223 485.161 368.22 477.813 366.538 476.246 cv
359.208 472.051 357.065 471.445 349.217 470.062 cv
349.533 471.273 352.027 473.558 353.85 475.995 cv
362.81 490.487 362.889 503.197 358.378 520.232 cv
356.173 530.264 351.101 538.695 345.058 547.334 cv
342.079 560.236 325.483 565.02 319.457 573.021 cv
293.406 576.709 281.703 566.665 277.166 542.41 cv
276.187 542.212 275.203 542.081 274.215 542.015 cv
273.564 542.831 273.564 542.831 272.642 547.732 cv
262.272 567.289 255.681 574.855 233.099 576.128 cv
208.185 569.703 197.921 561.873 193.591 536.507 cv
193.473 523.396 197.667 524.999 183.789 523.744 cv
179.691 534.587 172.985 537.911 162.845 542.132 cv
136.411 545.597 114.163 526.976 112.661 500.87 cv
100.694 495.771 87.0225 488.441 78.6348 480.272 cv
80.7334 472.605 82.7896 464.604 85.1035 457.678 cv
90.1455 455.499 96.3291 450.089 101.753 447.142 cv
106.672 444.823 125.648 439.075 127.405 435.553 cv
129.026 417.199 130.862 399.589 133.853 382.518 cv
135.397 380.514 135.007 347.144 154.003 314.518 cv
184.989 261.299 243.248 249.271 272.655 269.692 cv
285.909 279.311 li
298.451 293.646 306.492 309.004 312.72 327.747 cv
317.33 327.063 322.987 324.595 328.127 324.938 cv
332.662 335.297 336.483 345.478 339.039 357.757 cv
340.635 357.691 345.391 357.911 347.229 357.645 cv
348.53 359.272 349.995 376.524 347.717 376.198 cv
347.717 376.198 341.858 376.361 341.695 376.849 cv
true sop
1 /0 get_csd
sepcs
1 sep
ef
275.422 527.869 mo
276.019 527.843 276.753 527.759 277.412 527.803 cv
277.947 524.729 278.422 521.585 279.019 518.58 cv
274.804 518.3 li
274.987 521.487 275.177 524.609 275.422 527.869 cv
0 0 0 rgb
ef
274.702 538.673 mo
275.233 538.642 275.835 538.55 276.428 538.589 cv
276.657 536.155 276.951 533.728 277.183 531.229 cv
276.529 531.118 275.813 530.938 275.225 530.833 cv
274.702 538.673 li
0 0 0 rgb
ef
278.571 515.375 mo
278.971 515.335 279.367 515.361 279.696 515.383 cv
281.097 511.241 284.07 502.376 286.305 499.612 cv
290.785 489.986 297.619 484.752 303.504 476.872 cv
297.848 475.371 268.366 488.822 263.376 491.201 cv
263.283 491.593 263.118 492.111 263.087 492.572 cv
268.247 495.563 272.072 507.662 273.372 514.961 cv
275.019 515.071 276.797 515.189 278.571 515.375 cv
0 0 0 rgb
ef
218.753 465.796 mo
234.167 466.823 306.254 467.396 313.223 450.193 cv
316.702 418.862 315.596 389.807 315.767 359.447 cv
309.606 328.797 302.131 303.948 281.732 281.414 cv
253.046 259.121 218.823 262.532 194.458 280.396 cv
189.892 283.744 143.389 311.622 136.804 389.861 cv
133.8 404.152 130.879 421.162 132.03 436.655 cv
143.096 449.304 179.701 459.023 196.007 462.559 cv
210.939 464.878 216.868 465.273 218.753 465.796 cv
0 0 0 rgb
ef
363.31 546.485 mo
362.543 546.87 361.812 547.111 361.037 547.402 cv
360.737 547.144 360.524 546.783 360.267 546.475 cv
362.519 543.97 364.818 541.508 366.944 537.936 cv
367.246 541.423 365.253 544.238 363.31 546.485 cv
1 /0 get_csd
sepcs
1 sep
f
355.445 547.108 mo
355.123 547.179 354.844 547.199 354.614 547.263 cv
354.264 546.961 353.964 546.701 353.664 546.442 cv
354.161 545.564 356.97 535.95 358.236 535.998 cv
359.177 539.252 357.517 544.711 355.445 547.108 cv
1 /0 get_csd
sepcs
1 sep
f
189.076 571.474 mo
183.473 567.195 180.367 561.166 183.894 555.909 cv
185.374 557.529 184.438 565.605 189.915 570.801 cv
189.897 571.064 189.945 571.332 190.051 571.737 cv
189.66 571.645 189.34 571.491 189.076 571.474 cv
1 /0 get_csd
sepcs
1 sep
f
197.108 569.097 mo
190.024 566.177 187.583 551.192 192.524 552.514 cv
192.73 556.365 193.007 560.155 194.438 564.485 cv
195.883 565.641 197.938 566.572 198.479 569.387 cv
197.961 569.221 197.504 569.123 197.108 569.097 cv
1 /0 get_csd
sepcs
1 sep
f
148.436 536.936 mo
135.647 533.238 129.068 528.697 122.634 518.013 cv
123.17 517.915 123.768 517.889 124.361 517.928 cv
137.25 524.081 149.292 527.067 164.321 528.93 cv
163.877 530.621 162.779 531.21 161.33 532.105 cv
160.807 539.944 157.065 537.512 148.436 536.936 cv
false sop
0 0 0 rgb
f
235.804 531.58 mo
235.304 531.149 235.304 531.149 235.304 528.171 cv
236.09 528.29 236.872 528.474 237.658 528.593 cv
236.911 530.859 236.911 530.859 236.055 531.794 cv
235.998 531.658 235.871 531.584 235.804 531.58 cv
0 0 0 rgb
f
197.333 521.074 mo
168.581 517.635 128.546 507.753 104.488 492.451 cv
104.664 489.816 108.661 479.496 107.269 478.543 cv
104.932 479.843 103.544 488.75 102.973 491.358 cv
101.774 491.477 101.774 491.477 101.081 490.968 cv
101.687 487.831 105.31 477.156 104.106 475.354 cv
101.52 479.417 100.606 484.187 99.4556 489.536 cv
99.2485 489.653 99.0469 489.706 98.9067 489.83 cv
98.665 489.483 98.3486 489.263 98.1641 489.053 cv
98.9111 482.815 100.87 477.256 102.503 471.608 cv
102.034 471.71 101.502 471.74 101.098 471.846 cv
98.3359 476.558 97.5801 481.934 96.3594 487.344 cv
95.8101 487.639 95.8101 487.639 95.1733 487.265 cv
95.5952 480.94 97.8262 476.26 98.5908 470.752 cv
98.1865 470.857 97.7871 470.896 97.4487 471.007 cv
95.7319 475.921 94.0801 480.84 92.4946 485.763 cv
92.1782 485.544 92.0601 485.336 91.8755 485.126 cv
92.6001 479.219 95.7842 473.145 95.8149 468.715 cv
94.2339 468.609 93.8213 469.839 93.0352 470.713 cv
92.9253 469.382 92.9253 469.382 93.9751 466.54 cv
102.324 468.354 110.852 476.399 120.044 479.461 cv
123.5 482.206 185.625 508.118 186.346 497.313 cv
185.296 496.186 172.749 492.835 171.646 492.496 cv
144.4 486.313 114.892 473.361 92.8506 458.592 cv
92.7539 458.056 92.7188 457.59 92.7451 457.194 cv
101.639 450.841 120.549 439.133 132.583 443.243 cv
145.811 451.271 162.565 458.013 178.239 463.094 cv
212.727 470.819 250.821 474.087 286.67 467.347 cv
298.977 463.403 314.462 463.378 318.664 449.96 cv
333.852 445.48 361.936 461.911 371.861 474.813 cv
371.726 474.871 371.646 475.063 371.501 475.254 cv
367.275 472.126 363.258 468.881 359.524 467.309 cv
314.523 459.477 266.938 484.427 228.137 502.682 cv
224.413 505.94 224.689 512.708 220.768 516.946 cv
221.387 513.612 224.347 506.928 223.372 504.681 cv
220.86 506.63 219.235 512.146 217.931 512.853 cv
217.886 511.526 217.886 511.526 219.775 506.028 cv
219.384 505.936 219.063 505.783 218.8 505.766 cv
217.535 506.871 217.285 507.649 216.372 509.439 cv
215.809 508.939 215.243 508.504 214.676 508.07 cv
211.444 510.898 210.179 516.969 208.356 521.479 cv
207.544 521.755 207.544 521.755 197.333 521.074 cv
0 0 0 rgb
f
210.131 521.663 mo
210.276 519.488 210.979 518.874 211.874 517.345 cv
212.375 517.775 212.687 520.046 213.191 520.411 cv
213.833 519.726 214.536 519.111 215.234 518.563 cv
215.366 519.563 215.366 519.563 214.575 521.495 cv
213.121 521.465 211.593 521.561 210.131 521.663 cv
0 0 0 rgb
f
203.324 520.548 mo
203.508 517.78 209.455 507.987 211.053 507.828 cv
209.968 511.196 207.245 520.279 203.324 520.548 cv
true sop
1 /0 get_csd
sepcs
1 sep
f
213.073 517.227 mo
211.519 516.726 214.176 512.603 214.176 512.603 cv
214.58 512.497 214.979 512.457 215.383 512.353 cv
214.773 514.561 214.773 514.561 213.073 517.227 cv
false sop
0 0 0 rgb
f
214.461 511.299 mo
215.265 510.161 215.265 510.161 215.81 509.932 cv
215.779 510.393 215.875 510.93 215.91 511.395 cv
215.449 511.364 214.988 511.334 214.461 511.299 cv
0 0 0 rgb
f
108.278 493.168 mo
106.306 490.984 108.683 487.107 110.018 485.938 cv
110.632 486.642 109.456 491.394 109.073 493.154 cv
108.529 493.383 108.529 493.383 108.278 493.168 cv
true sop
1 /0 get_csd
sepcs
1 sep
f
294.189 420.08 mo
289.121 417.691 292.766 404.7 299.555 413.026 cv
299.393 417.449 298.572 419.842 294.189 420.08 cv
false sop
.407843 .0509804 .505882 rgb
f
281.296 420.935 mo
280.668 420.43 279.974 419.921 279.417 419.354 cv
279.715 414.875 279.161 414.242 282.495 411.884 cv
287.871 413.631 289.267 421.466 281.296 420.935 cv
.407843 .0509804 .505882 rgb
f
269.076 422.054 mo
265.075 419.538 267.768 415.879 269.318 413.469 cv
276.555 413.09 275.597 422.488 269.076 422.054 cv
.407843 .0509804 .505882 rgb
f
321.111 415.253 mo
322.297 397.467 321.06 379.32 320.462 362.473 cv
316.615 340.777 316.615 340.777 316.677 339.855 cv
319.158 343.329 324.537 341.042 329.325 340.698 cv
329.175 340.953 329.083 341.345 328.925 341.73 cv
324.968 342.525 322.175 342.737 319.03 344.248 cv
319 344.708 319.031 345.24 319.131 345.71 cv
323.141 345.117 328.622 343.299 332.995 344.186 cv
336.324 350.826 341.12 385.091 337.232 391.779 cv
334.15 389.39 329.684 388.894 328.845 392.543 cv
329.231 392.701 329.557 392.789 330.074 392.956 cv
330.057 393.22 330.101 393.553 330.207 393.957 cv
329.661 394.185 329.18 394.484 328.758 394.854 cv
328.744 395.051 328.731 395.248 328.714 395.512 cv
331.172 397.329 333.396 396.751 337.12 396.47 cv
337.085 396.997 337.054 397.457 337.145 398.059 cv
333.272 398.595 330.698 398.49 327.444 398.67 cv
327.277 399.188 327.177 399.711 327.138 400.304 cv
329.218 400.839 333.522 400.795 337.198 401.239 cv
337.027 402.815 336.785 404.454 336.609 406.097 cv
336.008 406.188 335.411 406.215 334.809 406.308 cv
335.139 405.336 335.771 404.783 335.631 403.913 cv
331.626 403.447 327.751 402.991 323.808 402.596 cv
323.702 403.185 323.653 403.909 323.609 404.567 cv
325.016 405.323 329.644 405.367 332.214 405.538 cv
332.196 405.802 332.174 406.132 332.147 406.526 cv
329.368 406.539 326.588 406.553 323.939 406.574 cv
323.976 407.04 324.066 407.642 324.093 408.239 cv
324.672 408.477 325.384 408.723 326.029 408.964 cv
325.731 409.473 325.731 409.473 323.448 409.983 cv
323.285 410.436 323.184 410.957 323.152 411.418 cv
323.825 412.258 323.197 413.737 322.705 415.161 cv
322.113 415.122 321.58 415.151 321.111 415.253 cv
0 0 0 rgb
f
329.236 415.464 mo
330.255 415.068 330.255 415.068 331.567 415.223 cv
331.428 415.346 331.348 415.539 331.203 415.728 cv
330.554 415.552 329.828 415.503 329.236 415.464 cv
0 0 0 rgb
f
324.511 412.898 mo
324.537 412.504 324.555 412.24 324.576 411.911 cv
335.42 412.038 335.42 412.038 336.053 412.478 cv
334.194 413.544 325.766 412.916 324.511 412.898 cv
0 0 0 rgb
f
328.388 409.319 mo
328.01 409.03 328.01 409.03 330.377 409.254 cv
329.653 409.206 328.984 409.293 328.388 409.319 cv
true sop
0 0 0 rgb
f
331.023 393.614 mo
331.453 393.114 331.453 393.114 337.717 392.473 cv
337.282 393.039 336.913 393.61 336.61 394.187 cv
334.708 393.927 332.868 393.737 331.023 393.614 cv
false sop
0 0 0 rgb
f
331.801 387.91 mo
331.238 387.41 331.238 387.41 331.322 386.157 cv
333.021 385.478 334.374 385.038 336.816 386.128 cv
336.935 386.333 336.987 386.535 337.103 386.809 cv
335.6 388.494 333.451 387.953 331.801 387.91 cv
true sop
1 /0 get_csd
sepcs
1 sep
f
341.213 373.781 mo
339.592 361.366 339.592 361.366 339.869 360.194 cv
341.727 360.119 343.576 360.176 345.495 360.172 cv
345.895 370.058 345.895 370.058 345.679 373.286 cv
343.786 373.888 342.793 373.887 341.213 373.781 cv
false sop
0 0 0 rgb
f
323.884 362.767 mo
323.452 362.275 323.452 362.275 323.54 360.958 cv
325.652 360.04 326.627 359.312 329.741 359.254 cv
330.106 359.741 330.106 359.741 329.751 361.107 cv
327.73 361.635 325.837 362.235 323.884 362.767 cv
true sop
1 /0 get_csd
sepcs
1 sep
f
322.518 358.441 mo
322.087 357.949 322.087 357.949 322.175 356.632 cv
325.166 355.442 328.504 354.01 332.262 355.187 cv
332.231 355.648 332.2 356.109 332.298 356.646 cv
324.538 357.914 323.506 358.507 322.518 358.441 cv
1 /0 get_csd
sepcs
1 sep
f
320.22 354.186 mo
320.255 353.659 320.281 353.264 320.44 352.877 cv
324.449 351.291 328.741 350.453 333.594 350.114 cv
332.14 354.055 323.436 353.606 320.22 354.186 cv
1 /0 get_csd
sepcs
1 sep
f
320.168 349.021 mo
320.133 348.556 320.036 348.02 320.063 347.625 cv
322.013 347.16 330.11 343.795 333.176 346.447 cv
331.223 348.964 322.539 349.18 320.168 349.021 cv
1 /0 get_csd
sepcs
1 sep
f
321.551 339.188 mo
321.586 338.66 321.612 338.266 321.639 337.87 cv
325.565 337.537 325.565 337.537 327.528 337.866 cv
327.23 338.376 327.23 338.376 321.551 339.188 cv
false sop
0 0 0 rgb
f
317.778 336.223 mo
317.924 336.035 317.998 335.908 318.139 335.785 cv
318.732 335.824 319.391 335.868 320.05 335.912 cv
318.753 336.487 318.753 336.487 317.778 336.223 cv
0 0 0 rgb
f
106.59 537.157 mo
100.986 532.879 97.8818 526.85 101.408 521.593 cv
102.888 523.214 101.952 531.29 107.429 536.486 cv
107.411 536.749 107.46 537.017 107.565 537.421 cv
107.174 537.328 106.854 537.175 106.59 537.157 cv
true sop
1 /0 get_csd
sepcs
1 sep
f
114.623 534.781 mo
107.539 531.861 105.097 516.876 110.038 518.198 cv
110.244 522.05 110.521 525.84 111.952 530.17 cv
113.397 531.324 115.453 532.257 115.993 535.071 cv
115.475 534.904 115.018 534.808 114.623 534.781 cv
1 /0 get_csd
sepcs
1 sep
f
232.721 552.019 mo
210.596 541.479 224.5 511.57 238.989 502.678 cv
249.595 503.385 251.575 516.354 252.41 525.673 cv
251.971 529.282 li
250.459 542.02 246.885 552.963 232.721 552.019 cv
cp
235.229 520.358 mo
222.045 529.537 240.069 546.022 242.155 528.628 cv
242.548 525.35 238.813 520.201 235.229 520.358 cv
false sop
.407843 .0509804 .505882 rgb
ef
257.913 529.48 mo
258.183 519.355 254.694 503.327 245.041 500.235 cv
245.203 499.784 245.304 499.262 245.462 498.874 cv
249.481 497.156 254.497 493.389 259.227 494.896 cv
261.668 497.969 269.129 509.121 268.18 514.417 cv
269.516 518.211 li
269.779 521.206 270.043 524.202 270.376 527.135 cv
270.227 529.375 270.253 534.935 269.143 537.707 cv
268.352 541.624 li
268.515 558.044 249.915 571.03 235.102 570.903 cv
234.258 570.647 233.406 570.525 232.493 570.332 cv
231.764 566.379 227.249 563.629 225.005 561.562 cv
222.467 556.959 219.959 552.887 218.839 548.843 cv
218.448 548.751 218.185 548.733 217.855 548.712 cv
217.846 553.806 221.487 560.73 225.729 565.58 cv
227.324 566.48 228.663 566.239 228.869 569.098 cv
221.558 568.61 211.922 548.382 211.312 543.643 cv
210.917 543.616 210.653 543.599 210.324 543.577 cv
210.855 549.502 213.196 554.091 215.954 560.362 cv
210.157 559.976 207.144 547.6 205.976 544.279 cv
205.704 548.364 209.779 556.709 208.773 559.883 cv
198.747 549.488 198.032 539.383 198.479 526.709 cv
198.976 526.212 199.138 525.759 200.438 526.111 cv
200.284 528.417 200.267 530.665 200.174 533.041 cv
200.71 532.944 201.176 532.909 201.711 532.813 cv
202.52 530.617 203.007 528.268 203.93 526.344 cv
204.325 526.37 204.72 526.396 205.049 526.419 cv
205.335 531.069 205.335 531.069 205.787 533.217 cv
206.125 533.107 206.521 533.134 206.916 533.16 cv
207.619 528.575 206.828 526.537 210.812 526.34 cv
210.899 528 210.144 531.39 213.042 532.576 cv
213.301 530.674 213.499 528.702 213.763 526.734 cv
214.632 526.595 215.493 526.586 216.424 526.516 cv
216.595 538.834 217.434 542.132 224.803 552.682 cv
246.357 566.823 253.942 546.354 257.913 529.48 cv
0 0 0 rgb
f
1 lw
257.913 529.48 mo
258.183 519.355 254.694 503.327 245.041 500.235 cv
245.203 499.784 245.304 499.262 245.462 498.874 cv
249.481 497.156 254.497 493.389 259.227 494.896 cv
261.668 497.969 269.129 509.121 268.18 514.417 cv
269.516 518.211 li
269.779 521.206 270.043 524.202 270.376 527.135 cv
270.227 529.375 270.253 534.935 269.143 537.707 cv
268.352 541.624 li
268.515 558.044 249.915 571.03 235.102 570.903 cv
234.258 570.647 233.406 570.525 232.493 570.332 cv
231.764 566.379 227.249 563.629 225.005 561.562 cv
222.467 556.959 219.959 552.887 218.839 548.843 cv
218.448 548.751 218.185 548.733 217.855 548.712 cv
217.846 553.806 221.487 560.73 225.729 565.58 cv
227.324 566.48 228.663 566.239 228.869 569.098 cv
221.558 568.61 211.922 548.382 211.312 543.643 cv
210.917 543.616 210.653 543.599 210.324 543.577 cv
210.855 549.502 213.196 554.091 215.954 560.362 cv
210.157 559.976 207.144 547.6 205.976 544.279 cv
205.704 548.364 209.779 556.709 208.773 559.883 cv
198.747 549.488 198.032 539.383 198.479 526.709 cv
198.976 526.212 199.138 525.759 200.438 526.111 cv
200.284 528.417 200.267 530.665 200.174 533.041 cv
200.71 532.944 201.176 532.909 201.711 532.813 cv
202.52 530.617 203.007 528.268 203.93 526.344 cv
204.325 526.37 204.72 526.396 205.049 526.419 cv
205.335 531.069 205.335 531.069 205.787 533.217 cv
206.125 533.107 206.521 533.134 206.916 533.16 cv
207.619 528.575 206.828 526.537 210.812 526.34 cv
210.899 528 210.144 531.39 213.042 532.576 cv
213.301 530.674 213.499 528.702 213.763 526.734 cv
214.632 526.595 215.493 526.586 216.424 526.516 cv
216.595 538.834 217.434 542.132 224.803 552.682 cv
246.357 566.823 253.942 546.354 257.913 529.48 cv
cp
0 0 0 rgb
s
303.714 532.732 mo
302.117 538.417 301.787 541.429 301.701 543.848 cv
302.342 549.117 303.168 563.267 310.719 565.16 cv
313.603 564.559 312.202 560.759 312.303 559.244 cv
317.719 554.443 323.046 551.954 327.732 546.179 cv
331.878 539.573 335.693 534.203 336.549 532.276 cv
337.713 528.714 340.652 522.559 341.795 519.326 cv
342.489 508.917 345.826 499.083 345.624 488.217 cv
346.046 487.848 346.393 487.606 346.942 487.313 cv
347.254 482.636 343.244 482.236 340.345 481.049 cv
326.749 482.525 314.987 507.083 308.693 517.119 cv
308.036 520.053 304.39 528.792 303.714 532.732 cv
cp
285.497 539.524 mo
285.686 542.647 285.984 549.086 286.168 552.273 cv
285.624 552.502 285.624 552.502 285.375 552.287 cv
283.318 550.362 282.761 543.842 282.897 542.793 cv
282.471 541.241 282.172 537.781 282.207 531.298 cv
280.968 529.033 284.799 517.709 285.129 515.745 cv
288.185 502.65 302.644 474.896 317.76 474.449 cv
311.379 479.846 308.229 481.422 305.572 489.517 cv
308.142 489.688 317.074 472.814 325.836 474.392 cv
325.753 475.644 li
320.14 479.438 317.479 482.635 312.893 487.888 cv
313.183 488.503 313.174 488.633 314.809 488.941 cv
323.916 482.337 326.284 474.62 339.186 473.628 cv
337.759 478.164 318.796 482.723 316.735 492.774 cv
316.921 492.986 317.171 493.201 317.479 493.553 cv
337.311 474.959 351.918 463.294 356.234 498.783 cv
355.902 508.511 356.817 514.342 354.031 517.226 cv
353.899 519.201 348.352 529.688 347.49 532.675 cv
346.305 535.572 341.129 543.962 338.955 546.795 cv
330.22 559.711 322.887 567.229 307.48 569.046 cv
307.469 568.251 307.389 567.452 307.433 566.794 cv
300.139 562.072 297.024 551.211 298.049 543.803 cv
296.99 541.5 296.577 539.072 296.112 537.122 cv
295.839 538.229 295.688 542.719 295.411 543.892 cv
295.728 555.028 297.902 558.879 303.81 568.537 cv
303.581 568.984 303.581 568.984 302.593 568.919 cv
294.042 565.173 293.428 550.574 293.108 543.474 cv
292.717 542.389 291.54 538.207 291.214 537.126 cv
290.952 538.102 290.506 542.042 290.238 543.083 cv
290.777 543.913 293.613 559.718 294.275 563.666 cv
293.73 563.895 293.73 563.895 293.48 563.68 cv
287.824 558.207 288.461 549.647 288.299 543.152 cv
288.36 540.245 287.516 532.564 287.704 529.731 cv
286.629 536.938 286.098 538.44 285.497 539.524 cv
0 0 0 rgb
ef
303.714 532.732 mo
302.117 538.417 301.787 541.429 301.701 543.848 cv
302.342 549.117 303.168 563.267 310.719 565.16 cv
313.603 564.559 312.202 560.759 312.303 559.244 cv
317.719 554.443 323.046 551.954 327.732 546.179 cv
331.878 539.573 335.693 534.203 336.549 532.276 cv
337.713 528.714 340.652 522.559 341.795 519.326 cv
342.489 508.917 345.826 499.083 345.624 488.217 cv
346.046 487.848 346.393 487.606 346.942 487.313 cv
347.254 482.636 343.244 482.236 340.345 481.049 cv
326.749 482.525 314.987 507.083 308.693 517.119 cv
308.036 520.053 304.39 528.792 303.714 532.732 cv
cp
285.497 539.524 mo
285.686 542.647 285.984 549.086 286.168 552.273 cv
285.624 552.502 285.624 552.502 285.375 552.287 cv
283.318 550.362 282.761 543.842 282.897 542.793 cv
282.471 541.241 282.172 537.781 282.207 531.298 cv
280.968 529.033 284.799 517.709 285.129 515.745 cv
288.185 502.65 302.644 474.896 317.76 474.449 cv
311.379 479.846 308.229 481.422 305.572 489.517 cv
308.142 489.688 317.074 472.814 325.836 474.392 cv
325.753 475.644 li
320.14 479.438 317.479 482.635 312.893 487.888 cv
313.183 488.503 313.174 488.633 314.809 488.941 cv
323.916 482.337 326.284 474.62 339.186 473.628 cv
337.759 478.164 318.796 482.723 316.735 492.774 cv
316.921 492.986 317.171 493.201 317.479 493.553 cv
337.311 474.959 351.918 463.294 356.234 498.783 cv
355.902 508.511 356.817 514.342 354.031 517.226 cv
353.899 519.201 348.352 529.688 347.49 532.675 cv
346.305 535.572 341.129 543.962 338.955 546.795 cv
330.22 559.711 322.887 567.229 307.48 569.046 cv
307.469 568.251 307.389 567.452 307.433 566.794 cv
300.139 562.072 297.024 551.211 298.049 543.803 cv
296.99 541.5 296.577 539.072 296.112 537.122 cv
295.839 538.229 295.688 542.719 295.411 543.892 cv
295.728 555.028 297.902 558.879 303.81 568.537 cv
303.581 568.984 303.581 568.984 302.593 568.919 cv
294.042 565.173 293.428 550.574 293.108 543.474 cv
292.717 542.389 291.54 538.207 291.214 537.126 cv
290.952 538.102 290.506 542.042 290.238 543.083 cv
290.777 543.913 293.613 559.718 294.275 563.666 cv
293.73 563.895 293.73 563.895 293.48 563.68 cv
287.824 558.207 288.461 549.647 288.299 543.152 cv
288.36 540.245 287.516 532.564 287.704 529.731 cv
286.629 536.938 286.098 538.44 285.497 539.524 cv
cp
0 0 0 rgb
s
330.331 518.362 mo
326.229 507.436 322.462 511.089 317.996 517.539 cv
316.605 520.756 li
313.251 531.384 326.551 534.124 330.385 521.278 cv
330.331 518.362 li
cp
314.606 517.711 mo
319.53 504.408 327.438 496.003 337.601 486.491 cv
338.194 486.53 338.778 486.701 339.366 486.808 cv
342.366 493.426 339.779 512.376 336.002 518.409 cv
335.817 521.177 331.276 531.196 329.301 534.042 cv
328.721 536.782 323.404 542.846 321.582 545.372 cv
320.009 548.111 312.492 554.426 309.199 554.206 cv
307.867 550.346 307.727 544.778 307.747 541.473 cv
308.117 537.923 308.789 532.807 309.891 530.168 cv
310.897 526.991 313.604 520.82 314.606 517.711 cv
.407843 .0509804 .505882 rgb
ef
323.139 518.28 mo
323.385 517.568 323.595 516.922 323.842 516.21 cv
324.24 516.17 324.702 516.2 325.229 516.235 cv
325.571 517.054 325.571 517.054 325.36 518.23 cv
325.541 520.955 li
325.203 523.049 323.7 525.266 320.934 525.081 cv
320.916 522.366 320.916 522.366 321.53 521.084 cv
323.139 518.28 li
0 0 0 rgb
f
128.303 336.611 mo
129.405 320.079 143.7 307.571 160.232 308.674 cv
176.764 309.776 189.272 324.071 188.17 340.604 cv
187.067 357.135 172.772 369.644 156.24 368.541 cv
139.708 367.438 127.2 353.144 128.303 336.611 cv
/1 
<<
/Name (0c 0m 0y 0k)
/CSA /2 
/TintMethod /Additive
/TintProc null
/MappedCSA null
/NComponents 3 
/ColorLookup [ 
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
[ 1 1 1 ] [ 1 1 1 ]
] 
>>
add_csd
1 /1 get_csd
sepcs
1 sep
ef
184.216 349.805 mo
185.42 331.743 201.039 318.076 219.101 319.28 cv
237.164 320.484 250.83 336.104 249.625 354.167 cv
248.421 372.229 232.803 385.896 214.74 384.69 cv
196.677 383.486 183.011 367.867 184.216 349.805 cv
1 /1 get_csd
sepcs
1 sep
ef
150.315 339.802 mo
150.922 330.71 159.386 323.871 169.222 324.527 cv
179.058 325.184 186.54 333.085 185.933 342.177 cv
185.327 351.27 176.862 358.108 167.026 357.452 cv
157.191 356.797 149.709 348.895 150.315 339.802 cv
0 0 0 rgb
f
225.084 374.596 mo
233.302 375.144 236.667 372.333 241.72 366.265 cv
246.002 353.981 241.22 343.891 230.229 339.41 cv
206.476 337.826 199.649 366.922 225.084 374.596 cv
0 0 0 rgb
ef
166.587 355.82 mo
154.262 350.728 147.887 340.342 159.47 330.253 cv
159.847 330.277 160.272 330.306 160.792 330.341 cv
162.914 333.375 155.799 336.933 158 344.479 cv
157.482 345.821 156.17 345.591 155.701 346.936 cv
155.927 347.092 156.107 347.246 156.328 347.498 cv
157.356 346.998 157.879 346.274 159.202 346.362 cv
161.012 348.38 159.643 347.577 159.913 349.919 cv
161.33 350.014 162.306 349.605 165.146 349.699 cv
164.481 351.125 164.16 351.673 162.926 352.396 cv
162.914 352.586 162.942 352.873 163.017 353.162 cv
165.662 353.339 165.7 350.637 168.326 350.386 cv
168.212 352.086 168.193 353.791 168.124 355.543 cv
167.768 355.898 167.768 355.898 166.587 355.82 cv
.8 .0745098 .0666667 rgb
ef
169.682 355.646 mo
169.478 353.735 169.226 351.821 169.065 349.961 cv
169.484 350.084 169.906 350.159 170.325 350.281 cv
170.781 351.973 171.228 353.805 171.679 355.59 cv
171.282 355.847 171.282 355.847 169.682 355.646 cv
.8 .0745098 .0666667 rgb
ef
173.007 354.872 mo
172.56 353.039 172.113 351.207 171.71 349.426 cv
172.843 349.501 174.921 352.485 174.972 354.576 cv
174.131 355.089 173.567 355.004 173.007 354.872 cv
.8 .0745098 .0666667 rgb
ef
176.442 353.156 mo
175.441 351.097 173.939 349.432 173.788 348.142 cv
174.074 348.112 174.364 348.037 174.647 348.056 cv
175.755 349.221 177.786 350.067 177.959 352.451 cv
177.452 352.938 176.867 353.185 176.442 353.156 cv
.8 .0745098 .0666667 rgb
ef
178.718 350.32 mo
177.342 348.899 175.604 347.218 175.966 346.057 cv
177.185 346.28 179.033 347.02 180.683 347.889 cv
180.62 348.834 180.484 349.441 179.653 350.524 cv
179.278 350.451 179.001 350.339 178.718 350.32 cv
.8 .0745098 .0666667 rgb
ef
181.102 346.588 mo
179.868 345.891 178.636 345.144 177.493 344.498 cv
177.367 344.253 177.339 343.966 177.264 343.676 cv
180.862 343.063 180.862 343.063 182.238 343.06 cv
182.181 343.909 182.229 347.471 181.102 346.588 cv
.8 .0745098 .0666667 rgb
ef
167.834 344.233 mo
167.967 343.674 168.045 343.204 168.175 342.69 cv
169.812 343.037 169.812 343.037 170.025 343.385 cv
169.771 343.651 169.61 343.926 169.45 344.198 cv
168.883 344.16 168.36 344.174 167.834 344.233 cv
.8 .0745098 .0666667 rgb
ef
178.378 341.9 mo
178.359 341.473 178.388 341.048 178.41 340.717 cv
179.628 340.229 180.683 339.35 182.317 339.745 cv
182.232 340.308 182.194 340.874 182.153 341.488 cv
180.862 341.64 179.574 341.743 178.378 341.9 cv
.8 .0745098 .0666667 rgb
ef
165.401 338.759 mo
164.922 338.11 164.922 338.11 164.844 337.155 cv
166.122 335.771 166.002 335.431 168.363 336.3 cv
168.304 338.62 167.771 338.775 165.401 338.759 cv
.8 .0745098 .0666667 rgb
ef
176.867 338.955 mo
176.958 337.585 179.685 335.822 180.913 335.903 cv
181.149 336.631 181.149 336.631 181.055 338.048 cv
179.446 338.699 178.01 338.888 176.867 338.955 cv
.8 .0745098 .0666667 rgb
ef
175.624 336.263 mo
175.919 335.381 177.037 334.27 178.158 332.399 cv
178.586 332.381 179.018 332.314 179.443 332.343 cv
179.606 332.732 179.82 333.08 180.078 333.477 cv
179.6 334.962 176.883 335.872 175.624 336.263 cv
.8 .0745098 .0666667 rgb
ef
174.371 334.423 mo
172.957 332.858 174.326 330.815 174.708 329.371 cv
175.604 329.431 175.724 329.771 177.427 330.549 cv
174.55 334.578 174.55 334.578 174.371 334.423 cv
.8 .0745098 .0666667 rgb
ef
170.781 332.05 mo
170.501 331.983 170.271 331.873 170.083 331.86 cv
170.202 330.066 170.322 328.271 170.873 327.122 cv
172.51 327.47 172.51 327.47 173.244 327.851 cv
172.865 329.96 172.865 329.96 171.962 332.129 cv
171.537 332.101 171.112 332.072 170.781 332.05 cv
.8 .0745098 .0666667 rgb
ef
163.068 331.062 mo
162.162 329.72 162.19 329.295 162.193 328.536 cv
164.482 326.935 165.108 328.208 164.674 331.168 cv
164.107 331.131 163.541 331.093 163.068 331.062 cv
.8 .0745098 .0666667 rgb
ef
167.287 331.104 mo
165.713 330.526 166.497 328.017 166.642 327.268 cv
167.35 327.315 168.055 327.409 168.805 327.554 cv
168.748 328.404 168.987 331.218 167.287 331.104 cv
.8 .0745098 .0666667 rgb
ef
224.503 370.706 mo
212.178 365.614 205.803 355.229 217.385 345.139 cv
217.763 345.164 218.188 345.192 218.708 345.227 cv
220.829 348.262 213.714 351.818 215.915 359.365 cv
215.398 360.707 214.085 360.477 213.617 361.821 cv
213.843 361.979 214.022 362.133 214.243 362.384 cv
215.272 361.884 215.795 361.16 217.118 361.248 cv
218.928 363.266 217.558 362.463 217.829 364.806 cv
219.246 364.9 220.222 364.491 223.062 364.586 cv
222.397 366.012 222.076 366.559 220.842 367.283 cv
220.829 367.472 220.857 367.759 220.933 368.049 cv
223.578 368.225 223.616 365.523 226.241 365.271 cv
226.128 366.972 226.109 368.678 226.04 370.429 cv
225.684 370.785 225.684 370.785 224.503 370.706 cv
.8 .0745098 .0666667 rgb
ef
227.598 370.533 mo
227.394 368.621 227.141 366.708 226.981 364.848 cv
227.399 364.97 227.821 365.045 228.24 365.167 cv
228.697 366.858 229.144 368.691 229.594 370.476 cv
229.197 370.733 229.197 370.733 227.598 370.533 cv
.8 .0745098 .0666667 rgb
ef
230.923 369.758 mo
230.476 367.926 230.028 366.094 229.625 364.313 cv
230.759 364.388 232.837 367.371 232.887 369.463 cv
232.047 369.975 231.483 369.891 230.923 369.758 cv
.8 .0745098 .0666667 rgb
ef
234.357 368.042 mo
233.356 365.983 231.854 364.318 231.704 363.027 cv
231.99 362.999 232.279 362.923 232.563 362.942 cv
233.671 364.107 235.702 364.954 235.875 367.337 cv
235.368 367.825 234.782 368.07 234.357 368.042 cv
.8 .0745098 .0666667 rgb
ef
236.634 365.206 mo
235.258 363.785 233.52 362.104 233.882 360.943 cv
235.101 361.166 236.949 361.906 238.598 362.774 cv
238.535 363.72 238.4 364.327 237.569 365.41 cv
237.194 365.338 236.917 365.225 236.634 365.206 cv
.8 .0745098 .0666667 rgb
ef
239.017 361.475 mo
237.783 360.776 236.552 360.03 235.409 359.384 cv
235.283 359.139 235.255 358.853 235.179 358.563 cv
238.778 357.949 238.778 357.949 240.153 357.945 cv
240.097 358.795 240.144 362.357 239.017 361.475 cv
.8 .0745098 .0666667 rgb
ef
225.75 359.12 mo
225.882 358.561 225.961 358.091 226.09 357.576 cv
227.727 357.924 227.727 357.924 227.941 358.271 cv
227.686 358.537 227.526 358.812 227.365 359.085 cv
226.799 359.047 226.276 359.06 225.75 359.12 cv
.8 .0745098 .0666667 rgb
ef
236.294 356.787 mo
236.275 356.359 236.303 355.935 236.325 355.603 cv
237.543 355.115 238.599 354.236 240.232 354.631 cv
240.147 355.194 240.109 355.76 240.068 356.375 cv
238.778 356.525 237.49 356.63 236.294 356.787 cv
.8 .0745098 .0666667 rgb
ef
223.316 353.646 mo
222.838 352.996 222.838 352.996 222.759 352.042 cv
224.037 350.657 223.918 350.317 226.279 351.187 cv
226.219 353.507 225.688 353.661 223.316 353.646 cv
.8 .0745098 .0666667 rgb
ef
234.782 353.841 mo
234.874 352.471 237.601 350.708 238.828 350.79 cv
239.064 351.518 239.064 351.518 238.97 352.934 cv
237.361 353.585 235.926 353.774 234.782 353.841 cv
.8 .0745098 .0666667 rgb
ef
233.539 351.148 mo
233.835 350.268 234.953 349.155 236.073 347.285 cv
236.502 347.267 236.933 347.201 237.358 347.229 cv
237.522 347.619 237.736 347.966 237.994 348.363 cv
237.516 349.848 234.799 350.758 233.539 351.148 cv
.8 .0745098 .0666667 rgb
ef
232.287 349.31 mo
230.873 347.745 232.242 345.702 232.623 344.257 cv
233.52 344.317 233.64 344.656 235.343 345.435 cv
232.465 349.464 232.465 349.464 232.287 349.31 cv
.8 .0745098 .0666667 rgb
ef
228.697 346.937 mo
228.417 346.87 228.187 346.76 227.998 346.747 cv
228.118 344.953 228.237 343.158 228.788 342.009 cv
230.426 342.355 230.426 342.355 231.159 342.736 cv
230.781 344.846 230.781 344.846 229.877 347.016 cv
229.453 346.986 229.027 346.958 228.697 346.937 cv
.8 .0745098 .0666667 rgb
ef
220.983 345.947 mo
220.077 344.605 220.105 344.181 220.108 343.423 cv
222.397 341.82 223.024 343.095 222.589 346.055 cv
222.023 346.017 221.456 345.979 220.983 345.947 cv
.8 .0745098 .0666667 rgb
ef
225.203 345.991 mo
223.628 345.412 224.413 342.903 224.557 342.154 cv
225.265 342.201 225.971 342.296 226.72 342.44 cv
226.663 343.29 226.903 346.104 225.203 345.991 cv
.8 .0745098 .0666667 rgb
ef
166.587 355.82 mo
154.262 350.728 147.887 340.342 159.47 330.253 cv
159.847 330.277 160.272 330.306 160.792 330.341 cv
162.914 333.375 155.799 336.933 158 344.479 cv
157.482 345.821 156.17 345.591 155.701 346.936 cv
155.927 347.092 156.107 347.246 156.328 347.498 cv
157.356 346.998 157.879 346.274 159.202 346.362 cv
161.012 348.38 159.643 347.577 159.913 349.919 cv
161.33 350.014 162.306 349.605 165.146 349.699 cv
164.481 351.125 164.16 351.673 162.926 352.396 cv
162.914 352.586 162.942 352.873 163.017 353.162 cv
165.662 353.339 165.7 350.637 168.326 350.386 cv
168.212 352.086 168.193 353.791 168.124 355.543 cv
167.768 355.898 167.768 355.898 166.587 355.82 cv
/2 
<<
/Name (18c 97m 88y 1k)
/CSA /2 
/TintMethod /Additive
/TintProc null
/MappedCSA null
/NComponents 3 
/ColorLookup [ 
[ 1 1 1 ] [ .999231 .996263 .996324 ]
[ .998462 .992526 .992649 ] [ .997693 .988789 .988973 ]
[ .996924 .985053 .985297 ] [ .996155 .981316 .981622 ]
[ .995386 .977579 .977946 ] [ .994617 .973842 .97427 ]
[ .993848 .970105 .970594 ] [ .993079 .966368 .966919 ]
[ .99231 .962631 .963243 ] [ .991541 .958894 .959567 ]
[ .990772 .955158 .955892 ] [ .990003 .951421 .952216 ]
[ .989234 .947684 .94854 ] [ .988465 .943947 .944865 ]
[ .987696 .94021 .941189 ] [ .986927 .936473 .937513 ]
[ .986158 .932736 .933838 ] [ .985389 .929 .930162 ]
[ .98462 .925263 .926486 ] [ .983851 .921526 .922811 ]
[ .983082 .917789 .919135 ] [ .982313 .914052 .915459 ]
[ .981543 .910315 .911784 ] [ .980774 .906578 .908108 ]
[ .980005 .902842 .904432 ] [ .979236 .899105 .900756 ]
[ .978467 .895368 .897081 ] [ .977698 .891631 .893405 ]
[ .976929 .887894 .889729 ] [ .97616 .884157 .886054 ]
[ .975391 .88042 .882378 ] [ .974622 .876683 .878702 ]
[ .973853 .872947 .875027 ] [ .973084 .86921 .871351 ]
[ .972315 .865473 .867675 ] [ .971546 .861736 .864 ]
[ .970777 .857999 .860324 ] [ .970008 .854262 .856648 ]
[ .969239 .850525 .852973 ] [ .96847 .846789 .849297 ]
[ .967701 .843052 .845621 ] [ .966932 .839315 .841945 ]
[ .966163 .835578 .83827 ] [ .965394 .831841 .834594 ]
[ .964625 .828104 .830918 ] [ .963856 .824367 .827243 ]
[ .963087 .820631 .823567 ] [ .962318 .816894 .819891 ]
[ .961549 .813157 .816216 ] [ .96078 .80942 .81254 ]
[ .960011 .805683 .808864 ] [ .959242 .801946 .805189 ]
[ .958473 .798209 .801513 ] [ .957704 .794473 .797837 ]
[ .956935 .790736 .794162 ] [ .956166 .786999 .790486 ]
[ .955397 .783262 .78681 ] [ .954628 .779525 .783134 ]
[ .953859 .775788 .779459 ] [ .95309 .772051 .775783 ]
[ .952321 .768314 .772107 ] [ .951552 .764578 .768432 ]
[ .950783 .760841 .764756 ] [ .950014 .757104 .76108 ]
[ .949245 .753367 .757405 ] [ .948476 .74963 .753729 ]
[ .947707 .745893 .750053 ] [ .946938 .742156 .746378 ]
[ .946169 .73842 .742702 ] [ .9454 .734683 .739026 ]
[ .944631 .730946 .735351 ] [ .943862 .727209 .731675 ]
[ .943093 .723472 .727999 ] [ .942324 .719735 .724323 ]
[ .941554 .715998 .720648 ] [ .940785 .712261 .716972 ]
[ .940016 .708525 .713296 ] [ .939247 .704788 .709621 ]
[ .938478 .701051 .705945 ] [ .937709 .697314 .702269 ]
[ .93694 .693577 .698594 ] [ .936171 .68984 .694918 ]
[ .935402 .686103 .691242 ] [ .934633 .682367 .687567 ]
[ .933864 .67863 .683891 ] [ .933095 .674893 .680215 ]
[ .932326 .671156 .67654 ] [ .931557 .667419 .672864 ]
[ .930788 .663682 .669188 ] [ .930019 .659945 .665513 ]
[ .92925 .656209 .661837 ] [ .928481 .652472 .658161 ]
[ .927712 .648735 .654485 ] [ .926943 .644998 .65081 ]
[ .926174 .641261 .647134 ] [ .925405 .637524 .643458 ]
[ .924636 .633787 .639783 ] [ .923867 .630051 .636107 ]
[ .923098 .626314 .632431 ] [ .922329 .622577 .628756 ]
[ .92156 .61884 .62508 ] [ .920791 .615103 .621404 ]
[ .920022 .611366 .617729 ] [ .919253 .607629 .614053 ]
[ .918484 .603893 .610377 ] [ .917715 .600156 .606702 ]
[ .916946 .596419 .603026 ] [ .916177 .592682 .59935 ]
[ .915408 .588945 .595674 ] [ .914639 .585208 .591999 ]
[ .91387 .581471 .588323 ] [ .913101 .577734 .584647 ]
[ .912332 .573998 .580972 ] [ .911563 .570261 .577296 ]
[ .910794 .566524 .57362 ] [ .910025 .562787 .569945 ]
[ .909256 .55905 .566269 ] [ .908487 .555313 .562593 ]
[ .907718 .551576 .558918 ] [ .906949 .54784 .555242 ]
[ .90618 .544103 .551566 ] [ .905411 .540366 .547891 ]
[ .904642 .536629 .544215 ] [ .903873 .532892 .540539 ]
[ .903104 .529155 .536864 ] [ .902335 .525418 .533188 ]
[ .901565 .521681 .529512 ] [ .900796 .517945 .525836 ]
[ .900027 .514208 .522161 ] [ .899258 .510471 .518485 ]
[ .898489 .506734 .514809 ] [ .89772 .502997 .511134 ]
[ .896951 .49926 .507458 ] [ .896182 .495523 .503782 ]
[ .895413 .491787 .500107 ] [ .894644 .48805 .496431 ]
[ .893875 .484313 .492755 ] [ .893106 .480576 .48908 ]
[ .892337 .476839 .485404 ] [ .891568 .473102 .481728 ]
[ .890799 .469365 .478052 ] [ .89003 .465629 .474377 ]
[ .889261 .461892 .470701 ] [ .888492 .458155 .467025 ]
[ .887723 .454418 .46335 ] [ .886954 .450681 .459674 ]
[ .886185 .446944 .455998 ] [ .885416 .443207 .452323 ]
[ .884647 .439471 .448647 ] [ .883878 .435734 .444971 ]
[ .883109 .431997 .441296 ] [ .88234 .42826 .43762 ]
[ .881571 .424523 .433944 ] [ .880802 .420786 .430269 ]
[ .880033 .417049 .426593 ] [ .879264 .413312 .422917 ]
[ .878495 .409576 .419241 ] [ .877726 .405839 .415566 ]
[ .876957 .402102 .41189 ] [ .876188 .398365 .408214 ]
[ .875419 .394628 .404539 ] [ .87465 .390891 .400863 ]
[ .873881 .387154 .397187 ] [ .873112 .383418 .393512 ]
[ .872343 .379681 .389836 ] [ .871574 .375944 .38616 ]
[ .870805 .372207 .382485 ] [ .870036 .36847 .378809 ]
[ .869267 .364733 .375133 ] [ .868498 .360996 .371458 ]
[ .867729 .35726 .367782 ] [ .86696 .353523 .364106 ]
[ .866191 .349786 .360431 ] [ .865422 .346049 .356755 ]
[ .864653 .342312 .353079 ] [ .863883 .338575 .349403 ]
[ .863114 .334838 .345728 ] [ .862345 .331101 .342052 ]
[ .861576 .327365 .338376 ] [ .860807 .323628 .334701 ]
[ .860038 .319891 .331025 ] [ .859269 .316154 .327349 ]
[ .8585 .312417 .323674 ] [ .857731 .30868 .319998 ]
[ .856962 .304943 .316322 ] [ .856193 .301207 .312647 ]
[ .855424 .29747 .308971 ] [ .854655 .293733 .305295 ]
[ .853886 .289996 .30162 ] [ .853117 .286259 .297944 ]
[ .852348 .282522 .294268 ] [ .851579 .278785 .290592 ]
[ .85081 .275049 .286917 ] [ .850041 .271312 .283241 ]
[ .849272 .267575 .279565 ] [ .848503 .263838 .27589 ]
[ .847734 .260101 .272214 ] [ .846965 .256364 .268538 ]
[ .846196 .252627 .264863 ] [ .845427 .248891 .261187 ]
[ .844658 .245154 .257511 ] [ .843889 .241417 .253836 ]
[ .84312 .23768 .25016 ] [ .842351 .233943 .246484 ]
[ .841582 .230206 .242809 ] [ .840813 .226469 .239133 ]
[ .840044 .222732 .235457 ] [ .839275 .218996 .231781 ]
[ .838506 .215259 .228106 ] [ .837737 .211522 .22443 ]
[ .836968 .207785 .220754 ] [ .836199 .204048 .217079 ]
[ .83543 .200311 .213403 ] [ .834661 .196574 .209727 ]
[ .833892 .192838 .206052 ] [ .833123 .189101 .202376 ]
[ .832354 .185364 .1987 ] [ .831585 .181627 .195025 ]
[ .830816 .17789 .191349 ] [ .830047 .174153 .187673 ]
[ .829278 .170416 .183998 ] [ .828509 .16668 .180322 ]
[ .82774 .162943 .176646 ] [ .826971 .159206 .172971 ]
[ .826202 .155469 .169295 ] [ .825433 .151732 .165619 ]
[ .824664 .147995 .161943 ] [ .823895 .144258 .158268 ]
[ .823125 .140521 .154592 ] [ .822356 .136785 .150916 ]
[ .821587 .133048 .147241 ] [ .820818 .129311 .143565 ]
[ .820049 .125574 .139889 ] [ .81928 .121837 .136214 ]
[ .818511 .1181 .132538 ] [ .817742 .114363 .128862 ]
[ .816973 .110627 .125187 ] [ .816204 .10689 .121511 ]
[ .815435 .103153 .117835 ] [ .814666 .099416 .11416 ]
[ .813897 .0956791 .110484 ] [ .813128 .0919423 .106808 ]
[ .812359 .0882054 .103132 ] [ .81159 .0844685 .0994568 ]
[ .810821 .0807317 .0957811 ] [ .810052 .0769948 .0921054 ]
[ .809283 .073258 .0884297 ] [ .808514 .0695211 .084754 ]
[ .807745 .0657842 .0810784 ] [ .806976 .0620474 .0774027 ]
[ .806207 .0583105 .073727 ] [ .805438 .0545737 .0700513 ]
[ .804669 .0508368 .0663756 ] [ .8039 .0471 .0627 ]
] 
>>
add_csd
1 /2 get_csd
sepcs
1 sep
f
169.682 355.646 mo
169.478 353.735 169.226 351.821 169.065 349.961 cv
169.484 350.084 169.906 350.159 170.325 350.281 cv
170.781 351.973 171.228 353.805 171.679 355.59 cv
171.282 355.847 171.282 355.847 169.682 355.646 cv
1 /2 get_csd
sepcs
1 sep
f
173.007 354.872 mo
172.56 353.039 172.113 351.207 171.71 349.426 cv
172.843 349.501 174.921 352.485 174.972 354.576 cv
174.131 355.089 173.567 355.004 173.007 354.872 cv
1 /2 get_csd
sepcs
1 sep
f
176.442 353.156 mo
175.441 351.097 173.939 349.432 173.788 348.142 cv
174.074 348.112 174.364 348.037 174.647 348.056 cv
175.755 349.221 177.786 350.067 177.959 352.451 cv
177.452 352.938 176.867 353.185 176.442 353.156 cv
1 /2 get_csd
sepcs
1 sep
f
178.718 350.32 mo
177.342 348.899 175.604 347.218 175.966 346.057 cv
177.185 346.28 179.033 347.02 180.683 347.889 cv
180.62 348.834 180.484 349.441 179.653 350.524 cv
179.278 350.451 179.001 350.339 178.718 350.32 cv
1 /2 get_csd
sepcs
1 sep
f
181.102 346.588 mo
179.868 345.891 178.636 345.144 177.493 344.498 cv
177.367 344.253 177.339 343.966 177.264 343.676 cv
180.862 343.063 180.862 343.063 182.238 343.06 cv
182.181 343.909 182.229 347.471 181.102 346.588 cv
1 /2 get_csd
sepcs
1 sep
f
167.834 344.233 mo
167.967 343.674 168.045 343.204 168.175 342.69 cv
169.812 343.037 169.812 343.037 170.025 343.385 cv
169.771 343.651 169.61 343.926 169.45 344.198 cv
168.883 344.16 168.36 344.174 167.834 344.233 cv
1 1 1 rgb
f
178.378 341.9 mo
178.359 341.473 178.388 341.048 178.41 340.717 cv
179.628 340.229 180.683 339.35 182.317 339.745 cv
182.232 340.308 182.194 340.874 182.153 341.488 cv
180.862 341.64 179.574 341.743 178.378 341.9 cv
1 /2 get_csd
sepcs
1 sep
f
165.401 338.759 mo
164.922 338.11 164.922 338.11 164.844 337.155 cv
166.122 335.771 166.002 335.431 168.363 336.3 cv
168.304 338.62 167.771 338.775 165.401 338.759 cv
1 1 1 rgb
f
176.867 338.955 mo
176.958 337.585 179.685 335.822 180.913 335.903 cv
181.149 336.631 181.149 336.631 181.055 338.048 cv
179.446 338.699 178.01 338.888 176.867 338.955 cv
1 /2 get_csd
sepcs
1 sep
f
175.624 336.263 mo
175.919 335.381 177.037 334.27 178.158 332.399 cv
178.586 332.381 179.018 332.314 179.443 332.343 cv
179.606 332.732 179.82 333.08 180.078 333.477 cv
179.6 334.962 176.883 335.872 175.624 336.263 cv
1 /2 get_csd
sepcs
1 sep
f
174.371 334.423 mo
172.957 332.858 174.326 330.815 174.708 329.371 cv
175.604 329.431 175.724 329.771 177.427 330.549 cv
174.55 334.578 174.55 334.578 174.371 334.423 cv
1 /2 get_csd
sepcs
1 sep
f
170.781 332.05 mo
170.501 331.983 170.271 331.873 170.083 331.86 cv
170.202 330.066 170.322 328.271 170.873 327.122 cv
172.51 327.47 172.51 327.47 173.244 327.851 cv
172.865 329.96 172.865 329.96 171.962 332.129 cv
171.537 332.101 171.112 332.072 170.781 332.05 cv
1 /2 get_csd
sepcs
1 sep
f
163.068 331.062 mo
162.162 329.72 162.19 329.295 162.193 328.536 cv
164.482 326.935 165.108 328.208 164.674 331.168 cv
164.107 331.131 163.541 331.093 163.068 331.062 cv
1 /2 get_csd
sepcs
1 sep
f
167.287 331.104 mo
165.713 330.526 166.497 328.017 166.642 327.268 cv
167.35 327.315 168.055 327.409 168.805 327.554 cv
168.748 328.404 168.987 331.218 167.287 331.104 cv
1 /2 get_csd
sepcs
1 sep
f
224.503 370.706 mo
212.178 365.614 205.803 355.229 217.385 345.139 cv
217.763 345.164 218.188 345.192 218.708 345.227 cv
220.829 348.262 213.714 351.818 215.915 359.365 cv
215.398 360.707 214.085 360.477 213.617 361.821 cv
213.843 361.979 214.022 362.133 214.243 362.384 cv
215.272 361.884 215.795 361.16 217.118 361.248 cv
218.928 363.266 217.558 362.463 217.829 364.806 cv
219.246 364.9 220.222 364.491 223.062 364.586 cv
222.397 366.012 222.076 366.559 220.842 367.283 cv
220.829 367.472 220.857 367.759 220.933 368.049 cv
223.578 368.225 223.616 365.523 226.241 365.271 cv
226.128 366.972 226.109 368.678 226.04 370.429 cv
225.684 370.785 225.684 370.785 224.503 370.706 cv
1 /2 get_csd
sepcs
1 sep
f
227.598 370.533 mo
227.394 368.621 227.141 366.708 226.981 364.848 cv
227.399 364.97 227.821 365.045 228.24 365.167 cv
228.697 366.858 229.144 368.691 229.594 370.476 cv
229.197 370.733 229.197 370.733 227.598 370.533 cv
1 /2 get_csd
sepcs
1 sep
f
230.923 369.758 mo
230.476 367.926 230.028 366.094 229.625 364.313 cv
230.759 364.388 232.837 367.371 232.887 369.463 cv
232.047 369.975 231.483 369.891 230.923 369.758 cv
1 /2 get_csd
sepcs
1 sep
f
234.357 368.042 mo
233.356 365.983 231.854 364.318 231.704 363.027 cv
231.99 362.999 232.279 362.923 232.563 362.942 cv
233.671 364.107 235.702 364.954 235.875 367.337 cv
235.368 367.825 234.782 368.07 234.357 368.042 cv
1 /2 get_csd
sepcs
1 sep
f
236.634 365.206 mo
235.258 363.785 233.52 362.104 233.882 360.943 cv
235.101 361.166 236.949 361.906 238.598 362.774 cv
238.535 363.72 238.4 364.327 237.569 365.41 cv
237.194 365.338 236.917 365.225 236.634 365.206 cv
1 /2 get_csd
sepcs
1 sep
f
239.017 361.475 mo
237.783 360.776 236.552 360.03 235.409 359.384 cv
235.283 359.139 235.255 358.853 235.179 358.563 cv
238.778 357.949 238.778 357.949 240.153 357.945 cv
240.097 358.795 240.144 362.357 239.017 361.475 cv
1 /2 get_csd
sepcs
1 sep
f
225.75 359.12 mo
225.882 358.561 225.961 358.091 226.09 357.576 cv
227.727 357.924 227.727 357.924 227.941 358.271 cv
227.686 358.537 227.526 358.812 227.365 359.085 cv
226.799 359.047 226.276 359.06 225.75 359.12 cv
1 1 1 rgb
f
236.294 356.787 mo
236.275 356.359 236.303 355.935 236.325 355.603 cv
237.543 355.115 238.599 354.236 240.232 354.631 cv
240.147 355.194 240.109 355.76 240.068 356.375 cv
238.778 356.525 237.49 356.63 236.294 356.787 cv
1 /2 get_csd
sepcs
1 sep
f
223.316 353.646 mo
222.838 352.996 222.838 352.996 222.759 352.042 cv
224.037 350.657 223.918 350.317 226.279 351.187 cv
226.219 353.507 225.688 353.661 223.316 353.646 cv
1 1 1 rgb
f
234.782 353.841 mo
234.874 352.471 237.601 350.708 238.828 350.79 cv
239.064 351.518 239.064 351.518 238.97 352.934 cv
237.361 353.585 235.926 353.774 234.782 353.841 cv
1 /2 get_csd
sepcs
1 sep
f
233.539 351.148 mo
233.835 350.268 234.953 349.155 236.073 347.285 cv
236.502 347.267 236.933 347.201 237.358 347.229 cv
237.522 347.619 237.736 347.966 237.994 348.363 cv
237.516 349.848 234.799 350.758 233.539 351.148 cv
1 /2 get_csd
sepcs
1 sep
f
232.287 349.31 mo
230.873 347.745 232.242 345.702 232.623 344.257 cv
233.52 344.317 233.64 344.656 235.343 345.435 cv
232.465 349.464 232.465 349.464 232.287 349.31 cv
1 /2 get_csd
sepcs
1 sep
f
228.697 346.937 mo
228.417 346.87 228.187 346.76 227.998 346.747 cv
228.118 344.953 228.237 343.158 228.788 342.009 cv
230.426 342.355 230.426 342.355 231.159 342.736 cv
230.781 344.846 230.781 344.846 229.877 347.016 cv
229.453 346.986 229.027 346.958 228.697 346.937 cv
1 /2 get_csd
sepcs
1 sep
f
220.983 345.947 mo
220.077 344.605 220.105 344.181 220.108 343.423 cv
222.397 341.82 223.024 343.095 222.589 346.055 cv
222.023 346.017 221.456 345.979 220.983 345.947 cv
1 /2 get_csd
sepcs
1 sep
f
225.203 345.991 mo
223.628 345.412 224.413 342.903 224.557 342.154 cv
225.265 342.201 225.971 342.296 226.72 342.44 cv
226.663 343.29 226.903 346.104 225.203 345.991 cv
1 /2 get_csd
sepcs
1 sep
f
181.295 301.921 mo
165.361 283.431 153.585 284.723 136.541 295.393 cv
140.434 285.618 150.148 267.773 166.143 270.36 cv
169.375 270.531 178.614 278.792 183.059 293.616 cv
194.096 284.561 219.721 253.183 238.445 312.883 cv
228.555 297.674 217.361 286.933 181.295 301.921 cv
0 0 0 rgb
f
4 lw
4 ml
181.295 301.921 mo
165.361 283.431 153.585 284.723 136.541 295.393 cv
140.434 285.618 150.148 267.773 166.143 270.36 cv
169.375 270.531 178.614 278.792 183.059 293.616 cv
194.096 284.561 219.721 253.183 238.445 312.883 cv
228.555 297.674 217.361 286.933 181.295 301.921 cv
cp
.498039 .498039 .498039 rgb
s
279.529 303.242 mo
279.309 306.545 276.451 309.044 273.148 308.823 cv
269.845 308.604 268.344 305.813 268.564 302.511 cv
268.922 297.142 273.78 299.596 273.436 289.485 cv
275.925 295.604 279.937 297.124 279.529 303.242 cv
1 /1 get_csd
sepcs
1 sep
ef
295.299 313.184 mo
295.13 315.719 292.938 317.637 290.403 317.468 cv
287.869 317.299 286.717 315.157 286.886 312.623 cv
287.161 308.503 290.888 310.386 290.624 302.628 cv
292.534 307.323 295.611 308.489 295.299 313.184 cv
1 /1 get_csd
sepcs
1 sep
ef
287.519 334.186 mo
287.33 337.024 284.875 339.171 282.037 338.982 cv
279.2 338.793 277.909 336.396 278.099 333.558 cv
278.406 328.944 282.58 331.053 282.284 322.367 cv
284.423 327.623 287.87 328.93 287.519 334.186 cv
1 /1 get_csd
sepcs
1 sep
ef
316.25 215.75 mo
312.756 211.848 312.327 204.461 312.501 199.462 cv
312.679 194.355 315.72 188.806 319.312 185.182 cv
320.712 183.77 322.238 182.55 324.043 181.695 cv
325.618 180.949 327.641 180.903 328.505 179.263 cv
331.005 174.519 321.479 172.068 318.745 171.189 cv
307.527 167.583 299.197 175.772 294.013 185.238 cv
290.586 191.497 290.199 201.205 293.801 207.501 cv
296.003 211.35 300.745 214.245 304.556 216.262 cv
309.757 219.015 314.479 217.183 318.25 213 cv
0 0 0 rgb
f
3.8637 ml
316.25 215.75 mo
312.756 211.848 312.327 204.461 312.501 199.462 cv
312.679 194.355 315.72 188.806 319.312 185.182 cv
320.712 183.77 322.238 182.55 324.043 181.695 cv
325.618 180.949 327.641 180.903 328.505 179.263 cv
331.005 174.519 321.479 172.068 318.745 171.189 cv
307.527 167.583 299.197 175.772 294.013 185.238 cv
290.586 191.497 290.199 201.205 293.801 207.501 cv
296.003 211.35 300.745 214.245 304.556 216.262 cv
309.757 219.015 314.479 217.183 318.25 213 cv
1 /0 get_csd
sepcs
1 sep
s
297.689 198.167 mo
304.117 205.885 li
207.205 287.29 li
200.778 279.572 li
297.689 198.167 li
0 0 0 rgb
f
297.689 198.167 mo
304.117 205.885 li
207.205 287.29 li
200.778 279.572 li
297.689 198.167 li
cp
1 /0 get_csd
sepcs
1 sep
s
196.93 286.77 mo
189.667 273.693 211.113 262.314 213.963 284.031 cv
212.636 287.697 210.457 289.025 206.747 291.81 cv
202.647 290.692 199.773 289.455 196.93 286.77 cv
true sop
1 /0 get_csd
sepcs
1 sep
f
200.592 286.509 mo
193.2 274.076 210.747 268.842 210.955 284.33 cv
208.142 288.615 204.621 289.727 200.592 286.509 cv
false sop
0 0 0 rgb
f
200.574 283.516 mo
200.518 282.855 200.518 282.855 201.549 281.934 cv
204.718 282.111 205.879 279.744 207.333 281.367 cv
206.766 283.111 206.663 283.295 204.366 285.082 cv
203.072 284.822 201.586 284.646 200.574 283.516 cv
true sop
1 /0 get_csd
sepcs
1 sep
f
295.797 194.07 mo
308.877 186.807 320.253 208.251 298.538 211.103 cv
294.87 209.775 293.542 207.597 290.757 203.887 cv
291.876 199.788 293.114 196.911 295.797 194.07 cv
false sop
0 0 0 rgb
f
295.797 194.07 mo
308.877 186.807 320.253 208.251 298.538 211.103 cv
294.87 209.775 293.542 207.597 290.757 203.887 cv
291.876 199.788 293.114 196.911 295.797 194.07 cv
cp
1 /0 get_csd
sepcs
1 sep
s
202.649 284.739 mo
210.625 278.634 li
287.989 378.801 li
280.015 384.906 li
202.649 284.739 li
0 0 0 rgb
f
202.649 284.739 mo
210.625 278.634 li
287.989 378.801 li
280.015 384.906 li
202.649 284.739 li
cp
1 /0 get_csd
sepcs
1 sep
s
287.049 389.046 mo
273.684 395.767 263.195 373.874 285.011 371.914 cv
288.619 373.392 289.854 375.623 292.485 379.444 cv
291.201 383.493 289.848 386.314 287.049 389.046 cv
true sop
1 /0 get_csd
sepcs
1 sep
f
286.937 385.376 mo
274.214 392.254 269.701 374.506 285.186 374.933 cv
289.352 377.918 290.318 381.481 286.937 385.376 cv
false sop
0 0 0 rgb
f
283.945 385.272 mo
283.285 385.302 283.285 385.302 282.404 384.232 cv
282.711 381.073 280.396 379.816 282.077 378.431 cv
283.798 379.067 283.977 379.179 285.667 381.547 cv
285.355 382.829 285.117 384.308 283.945 385.272 cv
true sop
1 /0 get_csd
sepcs
1 sep
f
198.478 286.464 mo
191.757 273.098 213.65 262.609 215.609 284.423 cv
214.132 288.032 211.901 289.271 208.08 291.9 cv
204.03 290.615 201.207 289.262 198.478 286.464 cv
false sop
0 0 0 rgb
f
198.478 286.464 mo
191.757 273.098 213.65 262.609 215.609 284.423 cv
214.132 288.032 211.901 289.271 208.08 291.9 cv
204.03 290.615 201.207 289.262 198.478 286.464 cv
cp
1 /0 get_csd
sepcs
1 sep
s
182.171 273.252 mo
182.378 266.206 185.468 260.167 191.795 259.966 cv
191.341 262.114 184.234 266.063 183.206 273.541 cv
182.982 273.681 182.792 273.876 182.525 274.198 cv
182.373 273.826 182.31 273.477 182.171 273.252 cv
true sop
1 /0 get_csd
sepcs
1 sep
f
188.785 278.393 mo
187.027 270.935 197.778 260.215 199.584 264.999 cv
196.576 267.411 193.658 269.846 190.974 273.534 cv
190.879 275.382 191.321 277.594 189.348 279.674 cv
189.181 279.155 188.993 278.729 188.785 278.393 cv
1 /0 get_csd
sepcs
1 sep
f
68.5244 241.422 mo
67.5698 234.436 69.6221 227.973 75.8301 226.733 cv
75.7358 228.927 69.376 233.991 69.5918 241.538 cv
69.394 241.711 69.2402 241.937 69.0288 242.297 cv
68.8169 241.956 68.6982 241.62 68.5244 241.422 cv
false sop
1 /0 get_csd
sepcs
1 sep
f
75.894 245.404 mo
72.9326 238.335 81.7715 225.993 84.3418 230.416 cv
81.7715 233.291 79.293 236.172 77.2534 240.252 cv
77.4639 242.089 78.2622 244.2 76.6597 246.576 cv
76.4106 246.091 76.1548 245.701 75.894 245.404 cv
1 /0 get_csd
sepcs
1 sep
f
6.6662 lw
1 lc
2 lj
145.575 378.186 mo
153.157 414.771 li
174.51 395.148 li
202.381 428.076 li
234.045 404.13 li
1 /0 get_csd
sepcs
1 sep
s
42.4897 749.349 mo
47.4287 749.349 li
47.4287 770.369 li
42.4897 770.369 li
42.4897 749.349 li
1 1 1 rgb
f
59.7437 760.703 mo
59.7437 758.745 58.8711 758.233 57.9072 758.233 cv
56.3716 758.233 55.8296 759.559 55.8296 761.575 cv
55.8296 770.369 li
51.0718 770.369 li
51.0718 757.962 li
51.0718 756.457 51.0405 755.494 50.9512 754.681 cv
55.2871 754.681 li
55.3481 755.373 55.4082 756.247 55.4082 757.3 cv
55.4678 757.3 li
56.1909 755.582 57.3955 754.439 59.894 754.439 cv
63.3569 754.439 64.502 756.968 64.502 760.1 cv
64.502 770.369 li
59.7437 770.369 li
59.7437 760.703 li
1 1 1 rgb
f
66.5791 754.681 mo
69.29 754.681 li
69.29 751.458 li
73.9272 749.982 li
73.9272 754.681 li
76.9985 754.681 li
76.9985 758.023 li
73.9272 758.023 li
73.9272 765.219 li
73.9272 766.755 74.6201 767.177 75.5229 767.177 cv
76.1855 767.177 76.6074 767.055 77.0898 766.846 cv
77.0898 770.188 li
76.6074 770.369 75.3125 770.61 73.7764 770.61 cv
71.3066 770.61 69.1699 769.404 69.1699 765.972 cv
69.1699 758.023 li
66.5791 758.023 li
66.5791 754.681 li
1 1 1 rgb
f
92.8979 763.773 mo
83.6533 763.773 li
83.6533 765.642 84.8574 767.357 87.5381 767.357 cv
89.1636 767.357 90.79 766.755 91.9639 766.122 cv
92.0552 769.706 li
90.5186 770.277 88.7124 770.61 87.0859 770.61 cv
81.5757 770.61 79.1362 767.267 79.1362 762.479 cv
79.1362 758.262 81.6055 754.439 86.0923 754.439 cv
87.5073 754.439 92.8979 754.439 92.8979 762.63 cv
92.8979 763.773 li
cp
88.561 761.185 mo
88.561 759.196 88.0493 757.329 86.0923 757.329 cv
83.6533 757.329 83.6533 760.34 83.6533 761.185 cv
88.561 761.185 li
1 1 1 rgb
f
109.671 768.471 mo
109.671 770.759 109.61 777.053 101.69 777.053 cv
99.4614 777.053 97.5347 776.572 96.0293 776.12 cv
96.1792 772.235 li
96.9927 772.658 98.9502 773.621 101.118 773.621 cv
104.882 773.621 105.033 770.852 105.033 767.598 cv
104.973 767.598 li
104.702 768.441 103.498 770.369 100.847 770.369 cv
98.1069 770.369 95.3062 768.441 95.3062 762.538 cv
95.3062 757.54 97.2939 754.439 100.877 754.439 cv
103.617 754.439 104.672 756.215 105.092 757.179 cv
105.153 757.179 li
105.274 754.681 li
109.791 754.681 li
109.73 755.402 109.671 756.215 109.671 758.203 cv
109.671 768.471 li
cp
102.533 767.026 mo
104.46 767.026 104.912 764.707 104.912 762.509 cv
104.912 760.703 104.491 757.872 102.564 757.872 cv
100.365 757.872 100.245 760.882 100.245 762.509 cv
100.245 763.744 100.425 767.026 102.533 767.026 cv
1 1 1 rgb
f
112.982 757.962 mo
112.982 756.457 112.952 755.494 112.862 754.681 cv
117.198 754.681 li
117.228 755.612 117.288 756.576 117.319 757.51 cv
117.378 757.51 li
118.342 755.824 119.004 754.439 121.746 754.439 cv
122.438 754.439 li
122.438 758.834 li
121.926 758.717 121.504 758.655 120.841 758.655 cv
118.072 758.655 117.74 761.065 117.74 763.352 cv
117.74 770.369 li
112.982 770.369 li
112.982 757.962 li
1 1 1 rgb
f
125.243 755.433 mo
126.478 755.041 128.586 754.439 130.302 754.439 cv
135.813 754.439 137.078 756.728 137.078 760.222 cv
137.078 765.942 li
137.078 768.261 137.107 769.313 137.198 770.369 cv
132.861 770.369 li
132.742 768.201 li
132.681 768.201 li
132.47 769.164 130.633 770.61 128.374 770.61 cv
125.454 770.61 123.526 768.711 123.526 765.853 cv
123.526 760.611 129.64 760.582 131.296 760.582 cv
132.742 760.582 li
132.742 757.569 130.513 757.569 129.82 757.569 cv
128.615 757.569 127.321 757.841 125.454 758.956 cv
125.243 755.433 li
cp
132.742 762.81 mo
130.844 762.81 127.863 762.931 127.863 765.55 cv
127.863 767.598 129.52 767.598 129.911 767.598 cv
130.332 767.598 132.742 767.537 132.742 763.714 cv
132.742 762.81 li
1 1 1 rgb
f
139.095 754.681 mo
141.805 754.681 li
141.805 751.458 li
146.442 749.982 li
146.442 754.681 li
149.514 754.681 li
149.514 758.023 li
146.442 758.023 li
146.442 765.219 li
146.442 766.755 147.134 767.177 148.039 767.177 cv
148.701 767.177 149.121 767.055 149.604 766.846 cv
149.604 770.188 li
149.121 770.369 147.828 770.61 146.292 770.61 cv
143.822 770.61 141.685 769.404 141.685 765.972 cv
141.685 758.023 li
139.095 758.023 li
139.095 754.681 li
1 1 1 rgb
f
165.412 763.773 mo
156.168 763.773 li
156.168 765.642 157.373 767.357 160.052 767.357 cv
161.679 767.357 163.305 766.755 164.479 766.122 cv
164.57 769.706 li
163.033 770.277 161.227 770.61 159.601 770.61 cv
154.09 770.61 151.651 767.267 151.651 762.479 cv
151.651 758.262 154.12 754.439 158.607 754.439 cv
160.023 754.439 165.412 754.439 165.412 762.63 cv
165.412 763.773 li
cp
161.076 761.185 mo
161.076 759.196 160.564 757.329 158.607 757.329 cv
156.168 757.329 156.168 760.34 156.168 761.185 cv
161.076 761.185 li
1 1 1 rgb
f
182.185 766.846 mo
182.185 768.832 182.245 769.646 182.306 770.369 cv
177.789 770.369 li
177.728 769.767 177.668 768.953 177.668 767.869 cv
177.608 767.869 li
177.126 768.832 176.072 770.61 173.332 770.61 cv
169.809 770.61 167.822 767.146 167.822 762.148 cv
167.822 757.931 169.387 754.439 173.332 754.439 cv
175.53 754.439 176.795 755.582 177.367 757 cv
177.427 757 li
177.427 747.784 li
182.185 747.784 li
182.185 766.846 li
cp
175.048 767.177 mo
177.005 767.177 177.427 764.347 177.427 762.538 cv
177.427 760.039 176.976 757.69 175.048 757.69 cv
172.94 757.69 172.76 760.039 172.76 762.538 cv
172.76 764.164 172.88 767.177 175.048 767.177 cv
1 1 1 rgb
f
193.657 749.349 mo
201.125 749.349 li
205.853 749.349 210.521 752.12 210.521 760.039 cv
210.521 767.297 205.793 770.369 200.493 770.369 cv
193.657 770.369 li
193.657 749.349 li
cp
198.596 766.696 mo
200.162 766.696 li
203.745 766.696 205.342 763.863 205.342 760.039 cv
205.342 755.704 203.685 753.024 199.861 753.024 cv
198.596 753.024 li
198.596 766.696 li
1 1 1 rgb
f
226.781 763.773 mo
217.537 763.773 li
217.537 765.642 218.741 767.357 221.42 767.357 cv
223.047 767.357 224.673 766.755 225.847 766.122 cv
225.938 769.706 li
224.401 770.277 222.596 770.61 220.969 770.61 cv
215.459 770.61 213.02 767.267 213.02 762.479 cv
213.02 758.262 215.489 754.439 219.976 754.439 cv
221.391 754.439 226.781 754.439 226.781 762.63 cv
226.781 763.773 li
cp
222.444 761.185 mo
222.444 759.196 221.933 757.329 219.976 757.329 cv
217.537 757.329 217.537 760.34 217.537 761.185 cv
222.444 761.185 li
1 1 1 rgb
f
228.196 754.681 mo
230.936 754.681 li
230.936 752.12 li
230.936 749.619 231.899 747.423 235.845 747.423 cv
237.501 747.423 238.434 747.693 238.946 747.784 cv
238.826 751.096 li
238.494 750.945 238.013 750.854 237.591 750.854 cv
236.176 750.854 235.695 751.367 235.695 752.993 cv
235.695 754.681 li
238.555 754.681 li
238.555 758.023 li
235.695 758.023 li
235.695 770.369 li
230.936 770.369 li
230.936 758.023 li
228.196 758.023 li
228.196 754.681 li
1 1 1 rgb
f
254.093 763.773 mo
244.848 763.773 li
244.848 765.642 246.053 767.357 248.732 767.357 cv
250.359 767.357 251.984 766.755 253.158 766.122 cv
253.249 769.706 li
251.715 770.277 249.906 770.61 248.282 770.61 cv
242.77 770.61 240.331 767.267 240.331 762.479 cv
240.331 758.262 242.8 754.439 247.288 754.439 cv
248.703 754.439 254.093 754.439 254.093 762.63 cv
254.093 763.773 li
cp
249.757 761.185 mo
249.757 759.196 249.244 757.329 247.288 757.329 cv
244.848 757.329 244.848 760.34 244.848 761.185 cv
249.757 761.185 li
1 1 1 rgb
f
265.566 760.703 mo
265.566 758.745 264.691 758.233 263.729 758.233 cv
262.193 758.233 261.65 759.559 261.65 761.575 cv
261.65 770.369 li
256.893 770.369 li
256.893 757.962 li
256.893 756.457 256.863 755.494 256.772 754.681 cv
261.109 754.681 li
261.168 755.373 261.229 756.247 261.229 757.3 cv
261.289 757.3 li
262.012 755.582 263.217 754.439 265.715 754.439 cv
269.179 754.439 270.322 756.968 270.322 760.1 cv
270.322 770.369 li
265.566 770.369 li
265.566 760.703 li
1 1 1 rgb
f
282.971 758.624 mo
281.705 758.112 280.531 757.781 279.146 757.781 cv
277.912 757.781 277.369 758.384 277.369 758.926 cv
277.369 759.89 278.063 760.222 280.65 761.185 cv
282.277 761.786 283.934 762.81 283.934 765.76 cv
283.934 769.254 281.314 770.61 278.152 770.61 cv
276.767 770.61 274.659 770.459 273.002 769.856 cv
273.123 766.183 li
274.268 766.876 275.713 767.267 277.038 767.267 cv
279.267 767.267 279.416 766.484 279.416 765.792 cv
279.416 765.099 278.182 764.797 276.135 763.954 cv
274.478 763.261 272.852 761.938 272.852 759.137 cv
272.852 757.45 274.057 754.439 278.725 754.439 cv
280.682 754.439 282.308 754.801 283.09 755.071 cv
282.971 758.624 li
1 1 1 rgb
f
299.832 763.773 mo
290.59 763.773 li
290.59 765.642 291.793 767.357 294.473 767.357 cv
296.1 767.357 297.725 766.755 298.9 766.122 cv
298.99 769.706 li
297.455 770.277 295.646 770.61 294.021 770.61 cv
288.51 770.61 286.072 767.267 286.072 762.479 cv
286.072 758.262 288.541 754.439 293.027 754.439 cv
294.443 754.439 299.832 754.439 299.832 762.63 cv
299.832 763.773 li
cp
295.496 761.185 mo
295.496 759.196 294.985 757.329 293.027 757.329 cv
290.59 757.329 290.59 760.34 290.59 761.185 cv
295.496 761.185 li
1 1 1 rgb
f
322.236 753.625 mo
321.063 753.024 319.406 752.542 318.081 752.542 cv
316.484 752.542 315.281 753.264 315.281 754.83 cv
315.281 758.655 323.559 756.878 323.559 764.347 cv
323.559 768.321 320.398 770.729 316.213 770.729 cv
313.654 770.729 311.457 770.127 310.555 769.856 cv
310.826 765.76 li
312.299 766.334 313.594 767.055 315.43 767.055 cv
316.998 767.055 318.502 766.272 318.502 764.557 cv
318.502 760.492 310.222 762.479 310.222 754.98 cv
310.222 754.35 310.462 748.989 317.509 748.989 cv
319.436 748.989 320.643 749.318 322.448 749.713 cv
322.236 753.625 li
1 1 1 rgb
f
334.915 771.813 mo
333.74 775.486 332.083 777.053 329.434 777.053 cv
328.59 777.053 327.387 776.903 326.572 776.661 cv
326.723 773.14 li
327.024 773.319 327.536 773.499 328.227 773.499 cv
329.825 773.499 330.577 771.724 330.577 770.369 cv
325.127 754.681 li
330.065 754.681 li
332.987 765.31 li
333.047 765.31 li
335.817 754.681 li
340.454 754.681 li
334.915 771.813 li
1 1 1 rgb
f
351.597 758.624 mo
350.331 758.112 349.156 757.781 347.771 757.781 cv
346.536 757.781 345.993 758.384 345.993 758.926 cv
345.993 759.89 346.687 760.222 349.276 761.185 cv
350.903 761.786 352.559 762.81 352.559 765.76 cv
352.559 769.254 349.939 770.61 346.778 770.61 cv
345.393 770.61 343.284 770.459 341.629 769.856 cv
341.748 766.183 li
342.895 766.876 344.339 767.267 345.663 767.267 cv
347.892 767.267 348.042 766.484 348.042 765.792 cv
348.042 765.099 346.809 764.797 344.759 763.954 cv
343.104 763.261 341.477 761.938 341.477 759.137 cv
341.477 757.45 342.683 754.439 347.351 754.439 cv
349.308 754.439 350.932 754.801 351.716 755.071 cv
351.597 758.624 li
1 1 1 rgb
f
353.855 754.681 mo
356.564 754.681 li
356.564 751.458 li
361.201 749.982 li
361.201 754.681 li
364.273 754.681 li
364.273 758.023 li
361.201 758.023 li
361.201 765.219 li
361.201 766.755 361.895 767.177 362.797 767.177 cv
363.459 767.177 363.881 767.055 364.364 766.846 cv
364.364 770.188 li
363.881 770.369 362.588 770.61 361.052 770.61 cv
358.582 770.61 356.443 769.404 356.443 765.972 cv
356.443 758.023 li
353.855 758.023 li
353.855 754.681 li
1 1 1 rgb
f
380.173 763.773 mo
370.927 763.773 li
370.927 765.642 372.131 767.357 374.812 767.357 cv
376.439 767.357 378.063 766.755 379.237 766.122 cv
379.328 769.706 li
377.794 770.277 375.986 770.61 374.36 770.61 cv
368.85 770.61 366.409 767.267 366.409 762.479 cv
366.409 758.262 368.88 754.439 373.366 754.439 cv
374.783 754.439 380.173 754.439 380.173 762.63 cv
380.173 763.773 li
cp
375.836 761.185 mo
375.836 759.196 375.324 757.329 373.366 757.329 cv
370.927 757.329 370.927 760.34 370.927 761.185 cv
375.836 761.185 li
1 1 1 rgb
f
400.016 760.703 mo
400.016 758.896 399.263 758.233 398.209 758.233 cv
396.792 758.233 396.251 759.258 396.251 760.432 cv
396.251 770.369 li
391.495 770.369 li
391.495 760.703 li
391.495 758.717 390.619 758.233 389.838 758.233 cv
388.272 758.233 387.73 759.587 387.73 761.575 cv
387.73 770.369 li
382.972 770.369 li
382.972 757.962 li
382.972 756.457 382.94 755.494 382.853 754.681 cv
387.188 754.681 li
387.249 755.373 387.308 756.247 387.308 757.3 cv
387.368 757.3 li
388.091 755.582 389.296 754.439 391.794 754.439 cv
394.053 754.439 395.198 755.494 395.86 757.059 cv
396.552 755.582 397.668 754.439 400.166 754.439 cv
403.63 754.439 404.771 756.968 404.771 760.1 cv
404.771 770.369 li
400.016 770.369 li
400.016 760.703 li
1 1 1 rgb
f
417.421 758.624 mo
416.156 758.112 414.982 757.781 413.599 757.781 cv
412.362 757.781 411.819 758.384 411.819 758.926 cv
411.819 759.89 412.512 760.222 415.104 761.185 cv
416.728 761.786 418.385 762.81 418.385 765.76 cv
418.385 769.254 415.763 770.61 412.601 770.61 cv
411.218 770.61 409.109 770.459 407.452 769.856 cv
407.574 766.183 li
408.719 766.876 410.163 767.267 411.489 767.267 cv
413.718 767.267 413.868 766.484 413.868 765.792 cv
413.868 765.099 412.634 764.797 410.586 763.954 cv
408.931 763.261 407.304 761.938 407.304 759.137 cv
407.304 757.45 408.508 754.439 413.176 754.439 cv
415.132 754.439 416.76 754.801 417.541 755.071 cv
417.421 758.624 li
1 1 1 rgb
f
55.168 716.96 mo
52.728 716.96 li
52.728 710.865 li
55.168 710.865 li
55.168 716.96 li
cp
153.042 733.46 mo
153.042 717.069 li
153.042 715.385 152.395 713.986 151.139 712.838 cv
149.885 711.727 148.376 711.153 146.621 711.153 cv
145.365 711.153 144.111 711.367 142.854 711.799 cv
141.598 712.228 140.667 712.767 140.058 713.375 cv
140.058 705.522 li
129.371 705.522 li
129.371 733.46 li
140.058 733.46 li
140.058 718.11 li
142.28 718.11 li
142.28 733.46 li
153.042 733.46 li
cp
66.394 712.982 mo
66.4644 710.902 65.7822 709.145 64.4912 707.71 cv
63.1646 706.239 61.4067 705.522 59.1465 705.522 cv
41.4668 705.522 li
41.4668 733.46 li
52.6577 733.46 li
52.6577 723.059 li
55.1309 723.059 li
55.1309 733.46 li
66.3569 733.46 li
66.3569 724.639 li
66.3569 723.059 66.0693 721.912 65.46 721.159 cv
64.6006 720.084 63.7041 719.401 62.8057 719.079 cv
64.0239 718.362 64.8857 717.644 65.3525 716.926 cv
65.9619 715.995 66.3193 714.667 66.394 712.982 cv
cp
203.069 722.233 mo
203.069 717.466 201.85 714.271 199.413 712.551 cv
197.727 711.367 194.892 710.722 190.911 710.722 cv
186.93 710.722 184.098 711.332 182.412 712.516 cv
180.01 714.236 178.791 717.466 178.791 722.233 cv
178.791 727.076 180.01 730.303 182.412 731.988 cv
184.098 733.173 186.93 733.782 190.911 733.782 cv
194.857 733.782 197.689 733.208 199.413 731.988 cv
201.85 730.27 203.069 727.004 203.069 722.233 cv
cp
178.072 722.233 mo
178.001 718.539 177.213 715.815 175.742 714.094 cv
173.841 711.834 170.579 710.722 165.917 710.722 cv
161.97 710.722 159.136 711.297 157.415 712.478 cv
154.94 714.165 153.721 717.43 153.721 722.233 cv
153.721 726.932 155.012 730.16 157.595 731.919 cv
159.353 733.137 162.113 733.747 165.879 733.782 cv
169.502 733.818 172.263 733.245 174.166 731.988 cv
175.849 730.879 177.033 729.121 177.68 726.754 cv
177.787 726.287 177.856 725.892 177.894 725.535 cv
167.028 725.535 li
167.028 728.654 li
164.768 728.654 li
164.768 723.526 li
178.001 723.526 li
178.04 723.059 178.072 722.629 178.072 722.233 cv
cp
90.6348 733.46 mo
90.6348 719.329 li
90.6348 716.533 89.5254 714.381 87.373 712.838 cv
85.3647 711.403 82.7827 710.685 79.5908 710.722 cv
75.8594 710.757 72.9551 711.512 70.8394 712.946 cv
69.0093 714.165 68.1128 715.636 68.1128 717.393 cv
68.1128 718.362 li
78.0825 718.362 li
78.0825 715.742 li
80.3076 715.742 li
80.3076 719.831 li
75.2153 719.94 li
69.9805 720.046 67.3232 722.126 67.2905 726.145 cv
67.2158 731.236 69.5483 733.782 74.2461 733.782 cv
77.0781 733.782 79.231 732.742 80.7021 730.628 cv
80.7393 733.46 li
90.6348 733.46 li
cp
227.817 733.46 mo
227.817 717.573 li
227.817 715.78 227.065 714.236 225.559 712.946 cv
224.123 711.727 222.544 711.117 220.789 711.153 cv
217.882 711.189 215.731 711.977 214.333 713.483 cv
214.295 711.474 li
204.148 711.474 li
204.148 733.46 li
214.692 733.46 li
214.692 718.11 li
216.878 718.11 li
216.878 733.46 li
227.817 733.46 li
cp
128.367 718.11 mo
128.367 711.941 li
124.78 711.941 li
124.78 705.522 li
114.163 705.522 li
114.163 711.941 li
105.807 711.941 li
102.615 723.239 li
99.5308 711.941 li
89.2734 711.941 li
97.4155 733.353 li
94.4385 741.387 li
104.838 741.387 li
114.129 717.069 li
114.129 733.46 li
124.78 733.46 li
124.78 718.11 li
128.367 718.11 li
cp
166.993 719.903 mo
164.768 719.903 li
164.768 715.742 li
166.993 715.742 li
166.993 719.903 li
cp
192.025 728.654 mo
189.802 728.654 li
189.802 715.742 li
192.025 715.742 li
192.025 728.654 li
cp
80.3076 728.009 mo
77.9756 728.009 li
77.9756 723.167 li
80.3076 723.167 li
80.3076 728.009 li
1 .2431 0 rgb
f
103.721 27.1201 mo
91.9961 15 li
53 15 li
53 109.459 li
91.9961 109.459 li
105.96 96.2852 li
105.96 70.5957 li
93.8398 61.2417 li
103.721 51.6245 li
103.721 27.1201 li
cp
81.7197 52.6787 mo
77.1089 52.6787 li
77.1089 32.917 li
81.7197 32.917 li
81.7197 52.6787 li
cp
81.8516 91.5425 mo
77.1089 91.5425 li
77.1089 70.5957 li
81.8516 70.5957 li
81.8516 91.5425 li
1 /1 get_csd
sepcs
1 sep
ef
156.654 15 mo
124.245 15 li
111.861 109.459 li
134.653 109.459 li
135.97 92.333 li
145.192 92.333 li
146.641 109.459 li
169.433 109.459 li
156.654 15 li
cp
143.875 74.416 mo
137.156 74.416 li
139.527 37.6597 li
140.976 37.6597 li
143.875 74.416 li
1 /1 get_csd
sepcs
1 sep
ef
214.588 15 mo
167.951 15 li
167.951 32.917 li
179.544 32.917 li
179.544 109.459 li
203.653 109.459 li
203.653 32.917 li
214.588 32.917 li
214.588 15 li
1 /1 get_csd
sepcs
1 sep
ef
263.811 15 mo
217.174 15 li
217.174 32.917 li
228.768 32.917 li
228.768 109.459 li
252.876 109.459 li
252.876 32.917 li
263.811 32.917 li
263.811 15 li
1 /1 get_csd
sepcs
1 sep
ef
296.699 15 mo
272.59 15 li
272.59 109.459 li
313.693 109.459 li
313.693 91.5425 li
296.699 91.5425 li
296.699 15 li
1 /1 get_csd
sepcs
1 sep
ef
362.008 15 mo
322.484 15 li
322.484 109.459 li
362.93 109.459 li
362.93 91.5425 li
345.935 91.5425 li
345.935 68.4873 li
359.373 68.4873 li
359.373 50.5703 li
345.935 50.5703 li
345.935 32.917 li
362.008 32.917 li
362.008 15 li
1 /1 get_csd
sepcs
1 sep
ef
425.073 28.3062 mo
411.504 15 li
386.209 15 li
372.641 28.3062 li
372.641 96.2852 li
388.713 109.459 li
410.582 109.459 li
425.073 96.2852 li
425.073 69.1465 li
401.623 69.1465 li
401.623 91.5425 li
396.749 91.5425 li
396.749 32.917 li
401.623 32.917 li
401.623 51.6245 li
425.073 51.6245 li
425.073 28.3062 li
1 /1 get_csd
sepcs
1 sep
ef
488.814 28.3062 mo
475.113 15 li
437.831 15 li
437.831 109.459 li
461.281 109.459 li
461.281 71.5176 li
466.023 71.5176 li
466.023 109.459 li
488.814 109.459 li
488.814 71.5176 li
478.671 62.4272 li
488.814 53.6006 li
488.814 28.3062 li
cp
466.023 53.6006 mo
461.281 53.6006 li
461.281 32.917 li
466.023 32.917 li
466.023 53.6006 li
1 /1 get_csd
sepcs
1 sep
ef
532.79 15 mo
524.886 49.6484 li
524.622 49.6484 li
516.586 15 li
493.136 15 li
512.896 70.5957 li
512.896 109.459 li
537.006 109.459 li
537.006 70.5957 li
556.108 15 li
532.79 15 li
1 /1 get_csd
sepcs
1 sep
ef
100.427 50.2344 mo
88.8223 61.5293 li
102.667 72.2139 li
102.667 94.8643 li
90.6875 106.166 li
56.2935 106.166 li
56.2935 18.2935 li
90.5996 18.2935 li
100.427 28.4531 li
100.427 50.2344 li
cp
85.0137 29.6235 mo
73.8154 29.6235 li
73.8154 55.9717 li
85.0137 55.9717 li
85.0137 29.6235 li
cp
85.145 67.3018 mo
73.8154 67.3018 li
73.8154 94.8359 li
85.145 94.8359 li
85.145 67.3018 li
0 0 0 rgb
ef
165.664 106.166 mo
149.668 106.166 li
148.219 89.0396 li
132.92 89.0396 li
131.603 106.166 li
115.615 106.166 li
127.135 18.2935 li
153.776 18.2935 li
165.664 106.166 li
cp
144.021 34.3662 mo
136.439 34.3662 li
133.643 77.7095 li
147.438 77.7095 li
144.021 34.3662 li
0 0 0 rgb
ef
211.294 29.6235 mo
200.36 29.6235 li
200.36 106.166 li
182.838 106.166 li
182.838 29.6235 li
171.245 29.6235 li
171.245 18.2935 li
211.294 18.2935 li
211.294 29.6235 li
0 0 0 rgb
ef
260.518 29.6235 mo
249.583 29.6235 li
249.583 106.166 li
232.062 106.166 li
232.061 29.6235 li
220.468 29.6235 li
220.468 18.2935 li
260.518 18.2935 li
260.518 29.6235 li
0 0 0 rgb
ef
293.405 94.8359 mo
310.4 94.8359 li
310.4 106.166 li
275.883 106.166 li
275.883 18.2935 li
293.405 18.2935 li
293.405 94.8359 li
0 0 0 rgb
ef
358.714 29.6235 mo
342.641 29.6235 li
342.641 53.8643 li
356.079 53.8638 li
356.079 65.1938 li
342.641 65.1938 li
342.641 94.8359 li
359.636 94.8359 li
359.636 106.166 li
325.777 106.166 li
325.777 18.2935 li
358.714 18.2935 li
358.714 29.6235 li
0 0 0 rgb
ef
421.779 48.3311 mo
404.917 48.3311 li
404.917 29.6235 li
393.455 29.6235 li
393.455 94.8359 li
404.917 94.8359 li
404.917 72.4395 li
421.779 72.4395 li
421.779 94.8281 li
409.309 106.166 li
389.891 106.166 li
375.934 94.7261 li
375.934 29.6895 li
387.555 18.2935 li
410.158 18.2935 li
421.779 29.6895 li
421.779 48.3311 li
0 0 0 rgb
ef
485.521 52.1006 mo
473.695 62.3911 li
485.521 72.9883 li
485.521 106.166 li
469.317 106.166 li
469.317 68.2241 li
457.987 68.2241 li
457.987 106.166 li
441.124 106.166 li
441.124 18.2935 li
473.777 18.2935 li
485.521 29.6982 li
485.521 52.1006 li
cp
469.317 29.6235 mo
457.987 29.6235 li
457.987 56.894 li
469.317 56.894 li
469.317 29.6235 li
0 0 0 rgb
ef
551.494 18.2935 mo
533.713 70.0454 li
533.713 106.166 li
516.19 106.166 li
516.19 70.0273 li
497.802 18.2935 li
513.969 18.2935 li
522.005 52.9419 li
527.512 52.9419 li
535.416 18.2935 li
551.494 18.2935 li
0 0 0 rgb
ef
57.8779 22.3491 mo
57.8779 20.9849 58.9839 19.8789 60.3481 19.8789 cv
61.7124 19.8789 62.8184 20.9849 62.8184 22.3491 cv
62.8184 23.7134 61.7124 24.8193 60.3481 24.8193 cv
58.9839 24.8193 57.8779 23.7134 57.8779 22.3491 cv
1 /0 get_csd
sepcs
1 sep
ef
57.8779 102.01 mo
57.8779 100.646 58.9839 99.54 60.3481 99.54 cv
61.7124 99.54 62.8184 100.646 62.8184 102.01 cv
62.8184 103.375 61.7124 104.48 60.3481 104.48 cv
58.9839 104.48 57.8779 103.375 57.8779 102.01 cv
1 /0 get_csd
sepcs
1 sep
ef
85.873 101.805 mo
85.873 100.44 86.9785 99.334 88.3428 99.334 cv
89.707 99.334 90.813 100.44 90.813 101.805 cv
90.813 103.169 89.707 104.274 88.3428 104.274 cv
86.9785 104.274 85.873 103.169 85.873 101.805 cv
1 /0 get_csd
sepcs
1 sep
ef
85.873 22.5547 mo
85.873 21.1904 86.9785 20.085 88.3428 20.085 cv
89.707 20.085 90.813 21.1904 90.813 22.5547 cv
90.813 23.9189 89.707 25.0249 88.3428 25.0249 cv
86.9785 25.0249 85.873 23.9189 85.873 22.5547 cv
1 /0 get_csd
sepcs
1 sep
ef
148.603 22.5547 mo
148.603 21.1904 149.708 20.085 151.072 20.085 cv
152.437 20.085 153.542 21.1904 153.542 22.5547 cv
153.542 23.9189 152.437 25.0249 151.072 25.0249 cv
149.708 25.0249 148.603 23.9189 148.603 22.5547 cv
1 /0 get_csd
sepcs
1 sep
ef
127.4 22.5547 mo
127.4 21.1904 128.506 20.085 129.871 20.085 cv
131.235 20.085 132.341 21.1904 132.341 22.5547 cv
132.341 23.9189 131.235 25.0249 129.871 25.0249 cv
128.506 25.0249 127.4 23.9189 127.4 22.5547 cv
1 /0 get_csd
sepcs
1 sep
ef
117.367 102.01 mo
117.367 100.646 118.473 99.54 119.837 99.54 cv
121.201 99.54 122.307 100.646 122.307 102.01 cv
122.307 103.375 121.201 104.48 119.837 104.48 cv
118.473 104.48 117.367 103.375 117.367 102.01 cv
1 /0 get_csd
sepcs
1 sep
ef
158.535 101.805 mo
158.535 100.44 159.641 99.334 161.005 99.334 cv
162.37 99.334 163.476 100.44 163.476 101.805 cv
163.476 103.169 162.37 104.274 161.005 104.274 cv
159.641 104.274 158.535 103.169 158.535 101.805 cv
1 /0 get_csd
sepcs
1 sep
ef
204.386 22.5547 mo
204.386 21.1904 205.492 20.085 206.856 20.085 cv
208.22 20.085 209.326 21.1904 209.326 22.5547 cv
209.326 23.9189 208.22 25.0249 206.856 25.0249 cv
205.492 25.0249 204.386 23.9189 204.386 22.5547 cv
1 /0 get_csd
sepcs
1 sep
ef
172.738 22.3491 mo
172.738 20.9849 173.844 19.8789 175.208 19.8789 cv
176.573 19.8789 177.679 20.9849 177.679 22.3491 cv
177.679 23.7134 176.573 24.8193 175.208 24.8193 cv
173.844 24.8193 172.738 23.7134 172.738 22.3491 cv
1 /0 get_csd
sepcs
1 sep
ef
188.588 102.01 mo
188.588 100.646 189.694 99.54 191.059 99.54 cv
192.423 99.54 193.528 100.646 193.528 102.01 cv
193.528 103.375 192.423 104.48 191.059 104.48 cv
189.694 104.48 188.588 103.375 188.588 102.01 cv
1 /0 get_csd
sepcs
1 sep
ef
253.788 22.5547 mo
253.788 21.1904 254.894 20.085 256.258 20.085 cv
257.622 20.085 258.729 21.1904 258.729 22.5547 cv
258.729 23.9189 257.622 25.0249 256.258 25.0249 cv
254.894 25.0249 253.788 23.9189 253.788 22.5547 cv
1 /0 get_csd
sepcs
1 sep
ef
222.141 22.3491 mo
222.141 20.9849 223.247 19.8789 224.611 19.8789 cv
225.975 19.8789 227.081 20.9849 227.081 22.3491 cv
227.081 23.7134 225.975 24.8193 224.611 24.8193 cv
223.247 24.8193 222.141 23.7134 222.141 22.3491 cv
1 /0 get_csd
sepcs
1 sep
ef
237.991 102.01 mo
237.991 100.646 239.097 99.54 240.461 99.54 cv
241.825 99.54 242.931 100.646 242.931 102.01 cv
242.931 103.375 241.825 104.48 240.461 104.48 cv
239.097 104.48 237.991 103.375 237.991 102.01 cv
1 /0 get_csd
sepcs
1 sep
ef
277.513 22.3491 mo
277.513 20.9849 278.618 19.8789 279.982 19.8789 cv
281.347 19.8789 282.453 20.9849 282.453 22.3491 cv
282.453 23.7134 281.347 24.8193 279.982 24.8193 cv
278.618 24.8193 277.513 23.7134 277.513 22.3491 cv
1 /0 get_csd
sepcs
1 sep
ef
277.513 102.01 mo
277.513 100.646 278.618 99.54 279.982 99.54 cv
281.347 99.54 282.453 100.646 282.453 102.01 cv
282.453 103.375 281.347 104.48 279.982 104.48 cv
278.618 104.48 277.513 103.375 277.513 102.01 cv
1 /0 get_csd
sepcs
1 sep
ef
303.654 101.805 mo
303.654 100.44 304.76 99.334 306.125 99.334 cv
307.488 99.334 308.595 100.44 308.595 101.805 cv
308.595 103.169 307.488 104.274 306.125 104.274 cv
304.76 104.274 303.654 103.169 303.654 101.805 cv
1 /0 get_csd
sepcs
1 sep
ef
327.121 22.3491 mo
327.121 20.9849 328.227 19.8789 329.591 19.8789 cv
330.955 19.8789 332.061 20.9849 332.061 22.3491 cv
332.061 23.7134 330.955 24.8193 329.591 24.8193 cv
328.227 24.8193 327.121 23.7134 327.121 22.3491 cv
1 /0 get_csd
sepcs
1 sep
ef
327.121 102.01 mo
327.121 100.646 328.227 99.54 329.591 99.54 cv
330.955 99.54 332.061 100.646 332.061 102.01 cv
332.061 103.375 330.955 104.48 329.591 104.48 cv
328.227 104.48 327.121 103.375 327.121 102.01 cv
1 /0 get_csd
sepcs
1 sep
ef
353.263 101.805 mo
353.263 100.44 354.369 99.334 355.732 99.334 cv
357.098 99.334 358.203 100.44 358.203 101.805 cv
358.203 103.169 357.098 104.274 355.732 104.274 cv
354.369 104.274 353.263 103.169 353.263 101.805 cv
1 /0 get_csd
sepcs
1 sep
ef
351.975 22.5547 mo
351.975 21.1904 353.081 20.085 354.445 20.085 cv
355.81 20.085 356.916 21.1904 356.916 22.5547 cv
356.916 23.9189 355.81 25.0249 354.445 25.0249 cv
353.081 25.0249 351.975 23.9189 351.975 22.5547 cv
1 /0 get_csd
sepcs
1 sep
ef
387.433 22.3491 mo
387.433 20.9849 388.539 19.8789 389.902 19.8789 cv
391.268 19.8789 392.373 20.9849 392.373 22.3491 cv
392.373 23.7134 391.268 24.8193 389.902 24.8193 cv
388.539 24.8193 387.433 23.7134 387.433 22.3491 cv
1 /0 get_csd
sepcs
1 sep
ef
405.082 22.5547 mo
405.082 21.1904 406.188 20.085 407.553 20.085 cv
408.917 20.085 410.023 21.1904 410.023 22.5547 cv
410.023 23.9189 408.917 25.0249 407.553 25.0249 cv
406.188 25.0249 405.082 23.9189 405.082 22.5547 cv
1 /0 get_csd
sepcs
1 sep
ef
387.433 101.599 mo
387.433 100.234 388.539 99.1284 389.902 99.1284 cv
391.268 99.1284 392.373 100.234 392.373 101.599 cv
392.373 102.963 391.268 104.069 389.902 104.069 cv
388.539 104.069 387.433 102.963 387.433 101.599 cv
1 /0 get_csd
sepcs
1 sep
ef
405.082 101.805 mo
405.082 100.44 406.188 99.334 407.553 99.334 cv
408.917 99.334 410.023 100.44 410.023 101.805 cv
410.023 103.169 408.917 104.274 407.553 104.274 cv
406.188 104.274 405.082 103.169 405.082 101.805 cv
1 /0 get_csd
sepcs
1 sep
ef
443.01 22.3491 mo
443.01 20.9849 444.116 19.8789 445.48 19.8789 cv
446.845 19.8789 447.95 20.9849 447.95 22.3491 cv
447.95 23.7134 446.845 24.8193 445.48 24.8193 cv
444.116 24.8193 443.01 23.7134 443.01 22.3491 cv
1 /0 get_csd
sepcs
1 sep
ef
468.688 22.5547 mo
468.688 21.1904 469.794 20.085 471.158 20.085 cv
472.522 20.085 473.629 21.1904 473.629 22.5547 cv
473.629 23.9189 472.522 25.0249 471.158 25.0249 cv
469.794 25.0249 468.688 23.9189 468.688 22.5547 cv
1 /0 get_csd
sepcs
1 sep
ef
443.01 101.599 mo
443.01 100.234 444.116 99.1284 445.48 99.1284 cv
446.845 99.1284 447.95 100.234 447.95 101.599 cv
447.95 102.963 446.845 104.069 445.48 104.069 cv
444.116 104.069 443.01 102.963 443.01 101.599 cv
1 /0 get_csd
sepcs
1 sep
ef
478.363 101.805 mo
478.363 100.44 479.469 99.334 480.833 99.334 cv
482.197 99.334 483.303 100.44 483.303 101.805 cv
483.303 103.169 482.197 104.274 480.833 104.274 cv
479.469 104.274 478.363 103.169 478.363 101.805 cv
1 /0 get_csd
sepcs
1 sep
ef
503.939 22.3491 mo
503.939 20.9849 505.045 19.8789 506.41 19.8789 cv
507.773 19.8789 508.88 20.9849 508.88 22.3491 cv
508.88 23.7134 507.773 24.8193 506.41 24.8193 cv
505.045 24.8193 503.939 23.7134 503.939 22.3491 cv
1 /0 get_csd
sepcs
1 sep
ef
539.91 22.5547 mo
539.91 21.1904 541.016 20.085 542.38 20.085 cv
543.744 20.085 544.85 21.1904 544.85 22.5547 cv
544.85 23.9189 543.744 25.0249 542.38 25.0249 cv
541.016 25.0249 539.91 23.9189 539.91 22.5547 cv
1 /0 get_csd
sepcs
1 sep
ef
522.054 101.599 mo
522.054 100.234 523.16 99.1284 524.523 99.1284 cv
525.889 99.1284 526.994 100.234 526.994 101.599 cv
526.994 102.963 525.889 104.069 524.523 104.069 cv
523.16 104.069 522.054 102.963 522.054 101.599 cv
1 /0 get_csd
sepcs
1 sep
ef
402.047 158.845 mo
398.688 162.006 394.736 164.113 390.126 164.113 cv
379.26 164.113 370.764 156.737 370.764 145.08 cv
370.764 134.016 378.403 125.981 389.139 125.981 cv
398.951 125.981 405.998 132.172 405.998 142.643 cv
405.998 145.409 405.142 148.9 403.561 151.205 cv
402.705 152.39 400.861 154.037 399.412 154.037 cv
398.951 154.037 398.49 153.642 398.49 153.115 cv
398.49 152.786 398.621 152.127 398.688 151.732 cv
401.651 133.555 li
395.922 133.555 li
395.329 136.782 li
393.551 134.147 390.982 133.094 387.953 133.094 cv
380.445 133.094 375.637 140.075 375.637 147.385 cv
375.637 153.51 379.26 158.449 385.45 158.449 cv
387.82 158.449 390.061 157.264 391.51 155.486 cv
391.641 155.617 li
391.51 157.659 393.156 158.713 395.131 158.713 cv
398.557 158.713 403.232 155.815 405.537 153.378 cv
408.896 149.822 410.213 145.475 410.213 140.602 cv
410.213 134.938 407.578 130.196 403.495 126.705 cv
399.479 123.083 394.604 121.437 389.336 121.437 cv
376.428 121.437 366.285 131.645 366.285 145.08 cv
366.285 158.713 376.691 168.657 389.665 168.657 cv
397.107 168.657 403.298 165.035 407.645 158.845 cv
402.047 158.845 li
cp
382.881 146.463 mo
382.881 143.17 385.318 139.614 388.743 139.614 cv
391.707 139.614 393.617 141.919 393.617 144.948 cv
393.617 148.57 391.18 151.863 387.492 151.863 cv
384.462 151.863 382.881 149.295 382.881 146.463 cv
1 /0 get_csd
sepcs
1 sep
ef
500.324 115.354 mo
482.84 176.299 li
463.188 176.299 li
459.576 154.37 li
457.986 154.37 li
454.086 176.299 li
434.722 176.299 li
417.092 115.354 li
441.225 115.354 li
448.016 144.424 li
449.027 144.424 li
452.639 115.354 li
464.199 115.354 li
468.533 144.424 li
469.546 144.424 li
476.193 115.354 li
500.324 115.354 li
.803922 .0470588 .0627451 rgb
ef
560.518 123.939 mo
560.518 147.229 li
544.045 155.559 li
530.028 155.559 li
530.028 176.299 li
504.307 176.299 li
504.307 115.354 li
544.045 115.354 li
560.518 123.939 li
cp
534.795 143.999 mo
534.795 126.915 li
530.028 126.915 li
530.028 143.999 li
534.795 143.999 li
.803922 .0470588 .0627451 rgb
ef
566.557 115.354 mo
593 115.354 li
593 176.299 li
566.557 176.299 li
566.557 115.354 li
.803922 .0470588 .0627451 rgb
ef
309.309 666.71 mo
316.652 673.981 li
316.652 688.886 li
301.389 703.357 li
301.389 708.541 li
316.58 708.541 li
316.58 718.333 li
288.573 718.333 li
288.573 700.045 li
303.836 685.429 li
303.836 676.501 li
301.172 676.501 li
301.172 683.413 li
288.862 683.413 li
288.862 673.981 li
295.845 666.71 li
309.309 666.71 li
1 /0 get_csd
sepcs
1 sep
ef
350.619 673.981 mo
350.619 711.132 li
343.49 718.333 li
329.234 718.333 li
321.602 711.132 li
321.602 673.981 li
329.234 666.71 li
342.844 666.71 li
350.619 673.981 li
cp
337.441 708.541 mo
337.441 676.501 li
334.779 676.501 li
334.779 708.541 li
337.441 708.541 li
1 /0 get_csd
sepcs
1 sep
ef
385.586 673.981 mo
385.586 711.132 li
378.457 718.333 li
364.201 718.333 li
356.57 711.132 li
356.57 673.981 li
364.201 666.71 li
377.811 666.71 li
385.586 673.981 li
cp
372.41 708.541 mo
372.41 676.501 li
369.746 676.501 li
369.746 708.541 li
372.41 708.541 li
1 /0 get_csd
sepcs
1 sep
ef
417.67 666.71 mo
417.67 699.036 li
422.492 699.036 li
422.492 708.181 li
417.67 708.181 li
417.67 718.333 li
405.213 718.333 li
405.213 708.181 li
392.686 708.181 li
389.229 698.533 li
407.229 666.71 li
417.67 666.71 li
cp
398.516 699.036 mo
405.213 699.036 li
405.213 685.717 li
405.068 685.717 li
398.516 699.036 li
1 /0 get_csd
sepcs
1 sep
ef
243.247 606.71 mo
243.247 658.333 li
230.071 658.333 li
230.071 616.501 li
226.471 616.501 li
226.471 609.518 li
236.407 606.71 li
243.247 606.71 li
1 /0 get_csd
sepcs
1 sep
ef
325.279 606.71 mo
325.279 651.132 li
317.432 658.333 li
306.127 658.333 li
298.279 651.132 li
298.279 637.956 li
309.582 637.956 li
309.582 648.541 li
312.104 648.541 li
312.104 606.71 li
325.279 606.71 li
1 /0 get_csd
sepcs
1 sep
ef
359.461 606.71 mo
359.461 651.132 li
351.9 658.333 li
338.221 658.333 li
330.66 651.132 li
330.66 606.71 li
343.836 606.71 li
343.836 648.541 li
346.285 648.541 li
346.285 606.71 li
359.461 606.71 li
1 /0 get_csd
sepcs
1 sep
ef
393.645 606.71 mo
393.645 658.333 li
383.709 658.333 li
377.875 637.524 li
377.443 637.524 li
377.443 658.333 li
365.42 658.333 li
365.42 606.71 li
374.709 606.71 li
381.117 628.741 li
381.619 628.741 li
381.619 606.71 li
393.645 606.71 li
1 /0 get_csd
sepcs
1 sep
ef
421.986 606.71 mo
421.986 616.501 li
413.203 616.501 li
413.203 626.148 li
420.547 626.148 li
420.547 635.94 li
413.203 635.94 li
413.203 648.541 li
422.492 648.541 li
422.492 658.333 li
400.389 658.333 li
400.389 606.71 li
421.986 606.71 li
1 /0 get_csd
sepcs
1 sep
ef
277.699 651.133 mo
270.139 658.333 li
256.314 658.333 li
249.115 651.133 li
249.115 641.772 li
262.002 641.772 li
262.002 648.541 li
264.523 648.541 li
264.523 638.028 li
255.596 638.028 li
249.115 632.413 li
249.115 613.98 li
256.314 606.708 li
270.139 606.708 li
277.699 613.98 li
277.699 651.133 li
cp
264.523 616.501 mo
262.002 616.501 li
262.002 628.237 li
264.523 628.237 li
264.523 616.501 li
1 /0 get_csd
sepcs
1 sep
ef
195.426 627.085 mo
190.098 631.837 li
196.291 636.876 li
196.291 651.132 li
189.162 658.333 li
175.482 658.333 li
168.066 651.132 li
168.066 636.876 li
174.114 631.837 li
168.929 627.085 li
168.929 613.979 li
175.841 606.708 li
187.794 606.708 li
195.426 613.979 li
195.426 627.085 li
cp
183.474 637.309 mo
180.882 637.309 li
180.882 648.54 li
183.474 648.54 li
183.474 637.309 li
cp
183.402 616.5 mo
180.955 616.5 li
180.955 627.517 li
183.402 627.517 li
183.402 616.5 li
1 /0 get_csd
sepcs
1 sep
ef
160.388 606.71 mo
160.388 658.333 li
147.212 658.333 li
147.212 616.501 li
143.613 616.501 li
143.613 609.518 li
153.548 606.71 li
160.388 606.71 li
1 /0 get_csd
sepcs
1 sep
ef
201.284 627.198 mo
222.034 627.198 li
222.034 638.323 li
201.284 638.323 li
201.284 627.198 li
.498039 .498039 .498039 rgb
f
288.137 55.9463 mo
292.412 55.9463 315.17 47.5464 320.974 47.5464 cv
323.266 48.7676 324.027 50.4478 324.027 52.1274 cv
324.027 54.8774 321.736 57.4731 321.736 57.4731 cv
321.736 57.4731 273.475 139.183 237.891 140.404 cv
237.891 140.404 276.226 131.395 312.574 56.71 cv
312.574 56.4043 312.421 56.4043 312.27 56.4043 cv
309.061 56.4043 285.846 65.1094 278.973 65.1094 cv
277.599 64.9575 276.988 63.4297 276.988 61.7495 cv
276.988 59.6118 277.752 57.0151 279.126 55.1821 cv
281.417 52.1274 304.021 13.4883 307.992 11.6548 cv
309.061 11.0435 310.13 10.8916 311.048 10.8916 cv
313.643 10.8916 315.17 12.7236 315.17 15.3203 cv
315.17 16.5425 314.865 17.917 314.101 19.2915 cv
312.726 21.7344 288.137 53.8076 288.137 55.9463 cv
cp
318.529 23.4146 mo
315.63 23.4146 314.561 21.7344 314.561 19.749 cv
314.561 17.3057 316.085 14.709 317.461 14.5566 cv
354.88 11.1968 359.767 10.1279 389.242 5.39258 cv
389.242 5.39258 351.214 15.9312 347.396 16.6948 cv
343.578 17.459 323.418 23.4146 318.529 23.4146 cv
.407843 .0509804 .505882 rgb
f
4 lw
0 lc
0 lj
4 ml
288.137 55.9463 mo
292.412 55.9463 315.17 47.5464 320.974 47.5464 cv
323.266 48.7676 324.027 50.4478 324.027 52.1274 cv
324.027 54.8774 321.736 57.4731 321.736 57.4731 cv
321.736 57.4731 273.475 139.183 237.891 140.404 cv
237.891 140.404 276.226 131.395 312.574 56.71 cv
312.574 56.4043 312.421 56.4043 312.27 56.4043 cv
309.061 56.4043 285.846 65.1094 278.973 65.1094 cv
277.599 64.9575 276.988 63.4297 276.988 61.7495 cv
276.988 59.6118 277.752 57.0151 279.126 55.1821 cv
281.417 52.1274 304.021 13.4883 307.992 11.6548 cv
309.061 11.0435 310.13 10.8916 311.048 10.8916 cv
313.643 10.8916 315.17 12.7236 315.17 15.3203 cv
315.17 16.5425 314.865 17.917 314.101 19.2915 cv
312.726 21.7344 288.137 53.8076 288.137 55.9463 cv
cp
318.529 23.4146 mo
315.63 23.4146 314.561 21.7344 314.561 19.749 cv
314.561 17.3057 316.085 14.709 317.461 14.5566 cv
354.88 11.1968 359.767 10.1279 389.242 5.39258 cv
389.242 5.39258 351.214 15.9312 347.396 16.6948 cv
343.578 17.459 323.418 23.4146 318.529 23.4146 cv
cp
.407843 .0509804 .505882 rgb
s
grestore % PSGState
%ADOBeginClientInjection: EndPageContent "AI10"
%ADOEndClientInjection: EndPageContent "AI10"
% page clip
grestore
grestore % PSGState
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI10"
%ADOEndClientInjection: PageTrailer Start "AI10"
Adobe_AGM_Image/page_trailer get exec
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
currentdict Adobe_AGM_Utils eq {end} if
%ADOBeginClientInjection: PageTrailer End "AI10"
%ADOEndClientInjection: PageTrailer End "AI10"
%%Trailer
%ADOBeginClientInjection: DocumentTrailer Start "AI10"
%ADOEndClientInjection: DocumentTrailer Start "AI10"
Adobe_AGM_Image/doc_trailer get exec
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%ADOBeginClientInjection: DocumentTrailer End "AI10"
%ADOEndClientInjection: DocumentTrailer End "AI10"
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 10.0
%%For: (Aether X Doombringer) (Digital Evolutions)
%%Title: (scene-2004-020-outlines.eps)
%%CreationDate: 5/19/2004 4:39 PM
%AI9_DataStream
%Gb"-6CQfdZOf%q[B(unWClN40:CG=TAO`U_O\i)K1MDV79&45tCP*?0,nct&'FcIH@fQ;tkOlnheN!dK%M(tq/k4;8b>1T>>Wr#U
%])+u>I<tkSjms9A^\[U!Dnk!8p:i?#h:1GZT7-@Zs*XA4`TsurnE]E32cgeKDa&MjI=C__oon^blW:9>[<qK#fur3dSpb1bSF-=9
%ipu[:gYJcoBBOcL2P9oU4T!B]bDY7_^UcJ<fo;$t&^rNnro7d0AM;uV48lWAcS+0<^\H%,?TeAUQ2U\c^J)uG`toON2qC(fC=r7D
%ad^m@f2m$K4s&!n_prZ"DE%LTk</H&FruKc^2)3JY1E&b@A0"G,O_W<TE!*4Rhsa*oY1KH)]mTS2>c!eVng'e38O1_iGic.ej&VN
%oRAR<O6m,(r\[D[fmWeO-boPrmsk)X]0=P)_,('tan!U*,+l!o.#`<(II%V3O(5di^J]uP(1R\dOc,4bpTMkKIWa%Fb-*NIqj2a2
%m,cLbbDY2kT=qhiI=C_A^AZa==.]35cS*"YnbVCug!,H@QiEo>55FU0Mu(E32eW,B/XB2la7eQ]f,&p#HZOJmX1_`0ZN%T5q9E@I
%qer.?<iaV3'`.k*s*Qsr>mU'%IM)ATlXThl`IGp6g1C<0B:o-kDa](_*-SmFc`oD7HQUV-eOfJu+"j_1\NIL7cl#Em\4^\/s#iSU
%HbLSq?W`*,2"%62qiC&'](kTLMf4*Qqk"[;cS&Vtj7:<mRkJ+G[iLD"j?`eCc/lpF5JDMbA$b3NW;1i@lh0k-90Ws#q/7n33$I$:
%cp.C@IlMfJe]!N=p$9d[9K-IKJ,A&kX/BUf?#Y[1s2aZD\Tmq*l[Mi'J!"2d>]qtmqkn;/EL_39F`WM`f-OO[mH;3&qKIEFYMgf!
%l_h[!HtI$fpTInNp#>):1fM,Pd^.9F^:AL]q8N0SYF*&'VHmn]pPUs0ri\3aCLb-X+uE#6lYPQf?G1TtEf%mR4naC!c1EtRs+_);
%L/IeDD;oGN/m`_`o$8t]5InL;TjU/.I;3!cV4F[1l`^/glQ>uJ^A?u]5$APirU/AX]Qd"T*rYGLo5E3#qo^XAn\&e.s2N?oq<elU
%pri^9o(q+-qJ5i+7mHnG5Ps^AYFk94q7Eu6MqpVO1LIf!I<r.\2!f\;5IP4h:M3KfT?6]Es3i>lQG:/oYQ&26om_qom4Rl,Fn_O.
%2=-o!ZJVac?M*$epXtu-HhU<sI^]-MFbfunheg#qSq$bSI!0[IlZ_<YqWuD;S\*'mo[BH3Rn:-]_e8.Va*W`2Hc*U$_cp*J18[+J
%YZkotbW8c'AP><PN;9[G^AEPt50&MNQU7.nN-.guAcLCe/r]J2)k+N]k\p*B=(h/Xp[g&mhqr*Kog7lG$c^Y_L-4^C-0_"IbK[Be
%D'o%IRZDG:[;+,f=??06Mf4%<rK#2$/pqLcUBVd:EBa&6]A1t?3;bT$rp8*Vo.F8>h%&jOgRYe`li%4\7ulXDp"<uEDsYMoH$0)J
%S):sXo<j#5PNUP)?L0k.Z+YJZHTPIk?gg1,p#br!]0BP-?iGFsqgna1^P3h;h0>F0B.q!pq=f8IH2,_km)L4?nh8;=_aCWArR:?6
%r>#q>Nq`SEioTd`b6Rskp!$9>r,j>MjHWNd/h^RZp$1n5Y@!eAlMlFmQVZGdp?eJ`%"E`rdU\6k(N3X8>c_;D^A8$7J+pq6G/=0*
%V^Hu#H1E,rZ/'3Dr+6g8rTBMs]st`Sk$k/?PV`30SYpBI[*7E5I<g8:iq:j5\f8f_h[b!th<(n!h9hkd^Xr2RS[3ceB3FWRB/b!8
%Ie;un1P$L15@9q%gRPtRXqUg,Y>9X\&t/dmnc/9p5Ap5d(H;&AYBD#fmHX8=4n/pZn^?jjT6".bo^)&LIm(Dk1I'91^\k3^pt"mm
%hgI<\r6%lB]fJ71NN7u,Zfa5u;tM7Rh2Bm7rq8kM^uYs92#bdKpo!eao<2M+5(@_FEdm<Ak1Mk3XR"Dp0AkR3h1,(Srpd]7I<#5J
%ebOnUpRgs5me$EqhqumkpWLl9c7\SSB`&HCJW:gUM=:H$3hGdMO6>76cYpPsr\:+BrY.lQ]74L)?XLJ@lK\[/ACJ5AP!b`9IqWY*
%?JjOC?Tl*to8RP9h`j^pm%9_3nIll%r]'oIqchm)jRhg4Y@k%FS:,[>)=m7@C%(N4:ST.!iLB"dFoKqW1MeF0I6YSPs+">(RQ[=Q
%+914O?U$W=Xo"aYH2:$D!IZAOQ:F1<lE:^<VsVj_5OD<'PkVuNp.q^Ujkjcq^3ASNHm(FFpo2QnFte][aQ<*j?S7p7@%]0V?f!^`
%5PcMc6+m62nLf4LVgk:e/8='b_q<TN>g+fHPs1h4r3l"<?JU!SIJ2t%mTeVUY^<eEPOEqlX&g*1^V9I$0A#kJ0unV?ZZ4HLmsT<4
%L[TZdbPb(Us1(4\NX'H.S\9FLc'b]Nq02PO(XI</?i9Xf)0<?T-bmLRAA;Ha\Wl]Y5EggjA`KcI^Ua1&c->\JZe%,PY?q.9HS8Gb
%g>'YfX3n[g]`.bSS+*!*m4do+lu"6;d4;X%`Et:DDepc74M*_&H%'-$\(Y*%\[d+XnmZfan[Ftm55P-<eb*:8m<@I:kEdj9Z+3=V
%qO=V[=*SJpVo^m$/m_ntqWl,gqQC^=^;7VYqS!&oq[D+dc>,GbMu!:?(Q\$6l0Ru[hUesV?N4SC\oD&0DpFqm=Qh-Ih0nkVk'C0m
%4Z2FVTD\DhZWG0;m-!"#I.cU?o1ptlIrfHis5+XM^%L>;hL,.qi^SuXH6EO7]"$U^q]>d-IBgM8h@09eq<ZZ)T3ki0I*\Sfrq23@
%YP0)$h!*.6r>U^4eq#J]>e[^nqnkO1/,FSJ\bl-DD6ElW`T@+^]D;-mq:"[$ZV.Ief6ZBE*O%YCA%HpXgL&iaG5M.YcoCgmnsdnn
%q=UfO(XEWaC\Q$0?/OH:4`!pobNj;#mU!QU*l!.U]D;Bu]bbLTRs.QEG_Yrt_=DoaX)rL+LKuG7L\ZTVX?_10jeJGrr8h!Eh`ZD@
%kND!Sc2G]?rn<+'#QMmV*I`L5rd=+h1Hm0Vm[q5TT:b=clP3[lP?56k_2GAglsYq3+NH.DT4)s*06t^T0UY&r+#a.u+929&l,J:O
%q7,h>g.Y@GVMOujZ_T#W5"0H.nh4=A?QcsDBW@[&D&?/u[V>HDM&Y$&4)te$'g8L2rogtqj*Ot(Y93`?UR.l]VEPBkY.qW`H1n)i
%e.7uUDd[?\IaacLE1$oID;Wc+fXlTZIY5m`@"-#RB)g1h3BafP:3WQred3^OZJjEU_peb:*a<qq,4Lk+HCTaOm:)!7j#D`u$.IpS
%X>Y"!4YDqT5U@+kAt4$?B\4Ae/Mn^7a3tTP5;pqB4WXilg<pNRgXFh(nStn]dk2*sE@o^sd7-<b]M%sh.FEi/=^PXmV)UX[C>"l:
%+,AF[?,?ndO-e?;\!hOkgI0cU-"hS$I>;uk.\fkpj.'qrBkVE*PB@dQMpo%c;Te3a9n4KeCldV<Jg`A-)q;)T:,ZNMXH2,'ZQ@:W
%9VU1,8#PDd77m1[n#B)IRV4ZE:=EV>:DLqMW31k5=Qab2T.6Cmf%%mSR`j_G%WoT(,?6lARdH,5Code,IbZ9IVGqmdNH6n>P,!gZ
%(Z%>>%\Ypp$9#@i-@d48Ci`Q5/@IeufpnB!\7N6O7U'q<9G>%S;T)iZUTGm/AIhQV72h1;W4`=CX21ZF9TN[k0hQg5EYq6e;]\Aa
%H.1+ueZOkM=2e5)nQ>#?B[`NG9[PdgZ%m,#3MKri$-9r>2Rh8f2VFPH<VrcL"D6E)_7$6RD#9/_;jr=Z1Rf%&7U'Zo7CH\=q)d6P
%'?t@8D,nEfg"Js`2LCG^2tK-H+2oC\ojhGL)'r&&f=lsZA&u)fe&5m8?e`$6oK-0iD5*nDh$ttF>KtHOVM1#NXM>ckH>I17%uEYe
%bsn>N!p1kfd\bDnhWB&^6X/)\ZjiNpgD?V5#qS_H_o-.r;sEB9FXSK8C;d(hRn:RG.Rgbg`WL%t<9mmAg3Y_0hGN-,3DAe#9M^XG
%Eb_>-eh%.VL*T)XU!2mZgPO0/1_-3V@ULSEn2M,jODRk`H=ARWlAapgb@lTn`"ADrPsDQVRRFE5cpTSmk2T*X!#k7km8LGj*2(s;
%[41T4=[VK0K)'2Gc=Ihp5s*=KM"+TVR[k3r;4U#bIkkp#1D?m#3i_mh(^fWU2MqsY"QKR*No4;8,V`6a\A:u!ODXa0>)aomf"BPO
%/qbC/K`ToQX)53[nPbj'T@n^L<bQ1$@17,>qH*uM!6`mMa"W',m;di)N#LUQ,p:Uun@eSd05N$ggD`*&PYXOBjP8h<c`_8qRV9J*
%:3eeuq8L>7o*8UFrRi8:19DQh?!O+"gCBX_ro3MA"+)jhr*]'Qo61oXp-FcG!mq.%F?n3)bn]'&KmQ&=_(on,r:V/K`'3tU&NgM+
%lqaHc2iD[0B[#$[h<[o`gM6*)Tg-M=D>S#`-gd8MT.9]sf\_r$aP>;/JH%gu/`YK5TCcjPTC_NkTj<K<^Y:?LMqd.b:O;0<[m@ca
%q0/#g,Xl7hiF!Ymb1SR@3j'"H>Gl;hJh_fZ7[g5)I7ed1'fSbIRPSBghIX`&*LcV"S"DaOq;4;\o4XHd*2GST!cek)dJfnST-8]7
%#W)aV\sfrrc&XVh"rPHq[mpL6XD.,kVPr`KZJ2lij!H=`*m55C8AaVUo1)#tZ\2^+H6JS65;p8kTe'QHiBfr$Yj6PC]IN>t0lF_8
%FDQAA):AA^r@sn]R3Zhtjk7a0)9Ned%=KOkoH8u<,E@N#G,gCSe&Z'!gPf^b/&gB>Rn%sUe3M1Vl/,X4_:jPON-6V0rL@uLr*N2T
%hV5Cgs$'hIH[saf*KKinG+<g)^=Y'l+!1qiGJrH$^frsIDMmHOcpuF=4MpgaH^UP`I?CeLnD]M#*F/"Aq-=g7UM!(M3JQ`B(Yq-"
%m';-5m*D-CceY%6GO_*#^#c_p*ngTuniL`?O.Lc.DuJ]ZElrEn*lV_5C8r+s(dV8Ifl:K>QY3KCC-L\"#7D+;(sCc=Y1PNir9:pu
%b58%?5EK&j2NmI=_Dc?)5J:.>1rZC'dkj3ea:-mhE[su)-DGHXg0QDD0[6>KrZ"GWR_u(>g8'[U$8&dYrC:f)D]#)@70:^,^&RWd
%B4!ikpmB/hVBLWgA,`B_o?4b(BiTpZd^VtH)B5^MYe9)Ti9YQf[G<LAQ=Ke(I@4MEl*-rUG;P;5O*A`;BL/a^P>fJgGG?`Ti!GUd
%)#!kT(P-:@e$tQ=^%I!VkPU$TU`rZ0gFe-CD0(%;kdFics0MuO+(eF>ir"Bi@lS+;UQ#^82bK,a2X.0q\if>o)p2)5rA;,pn0$-8
%(P8V\UTp2&/F>V>jp$(cBH;$1pqLrqWl7G<^VjY$eR,GP.<r].do9*.2"PJ1?E!RZEN(ct-Z)HKBM\SU^-.:MN:3>_?o(ZTBu:HE
%!Gjsd!#%8rES1FMagc/F_$smk*1Y4K,2)+a8RMI_#\)TDjPlGllZh_QoAB/+fK>^(VJ]V*?Xg>5XY28Uo;/uZlU/A'bA6O)8UKHi
%=FH.&RDk$oBUW:7h`R,JoAjVmb\7l0K_,4\]5r8fkF6*sYHAr!-U$l5Bf.qGpXUJ<[:<QN?iO]Xk8r83Sq#nK+(6JqM;2[i3,_GE
%m)D<_eg(\ZRbZGt"HRMn_*e\[,n3])A%U$<-t?9HBuVD:fZk%D1:CgS6CI1[?CrSYON*OO*fNq^/Ci.8NZA4c>+40!Ci;0scT9,Z
%0kOj([eCV?p9.o,YDlT&NcM8YWgRO)m,`M3F&@mL#I[KoQpr>k]B-75NMc0)V+tbBPB!]2@X1(1OUiAr*%1%PN5&*Pk0WbgC@-uU
%C3VXmYsr"Lihc`,<6j&n48jim"Y?J&6o9Xb0k=J";!f9e>mb'KNsA\qMJ;#B]uU@cnfSAtApBLU+59MkGmOpA3j6$\e<K=!a].qq
%FYL?M17s2)BoEQ1aHV("VY2B3-N^[J.b]qO8Xn)jDMAuPk"K)$=^caGe"`F/pp>.a>nY*5h@J*XY.rY<o'0t6If7N8%m3eA`"(2F
%1R^E6cQ7J>YX?X#M!o>_c=S>,!Fre2>Qh[ijlKm$nmKY7F2;a+cNd.==a+;Dgi60CEmp\^d+2+/)#P^@O"qU?^[XMI]`q,nA`@Ab
%rkY=>6)_VTcs05V_FAL=Qes\YS;MSDm-;uZ\H8tlk6cV,*`h4M@_=F\mNdfp9TV[q6C;GXAk<ufLJocA8%/S=$ls?3P`Aq*nYdV#
%`iWj0.n'pNSdO]\`kUnJ`[0]r_Wqb;9fqC1D3QEd3&1VPe*s6nFA"SlVRgQoqqB3Z67KO[%R)o3l++.:&$cu*B%ht(!<+BYaG,bj
%9O>sZQm%jam+*.3;e5Vme<[Ksjs[DCB'2'@NNUte[VMaQ%aeQ<6aAT)qq?B8m]DVDBJ4A=7<tI[P(ZS^BThFrpR%>Q:GD/mb0rHu
%?XB4d;=8=laX2/_i?.P.lJ=/*L8,YY*?Xh8?D3+3]Hho/hCjiQ>`0/0"?t;C$sJ[r]&22D?B\Hbmp^s"l\kXDEGe:Y3qe=#hKId\
%Y-sP`?0$s\#&d2^Y/OMLo31c#UkTSO>8PI\748Lq4(R<A2O,nDAG<\@4/Sk\A]Z>f)T`lGr(nWXaJg0Gj@6%d[ZeA^#XssU_g5`1
%*PXeAdOL7hLOJ<;GC02IXd\E%cG8R,Io6?rO!br*X=>[`]ThF-Rd&G4fV>33n3D'*i^>O3]urZA\q_krFr,1/A33>e:8-Rs\)2E@
%mG@F<rk[[eo\c3!!\;*"01@4KD\\;hp$M3P3;W.\i*Ogp,R\RpD"IfFi;L_dQrGHFC3DTpLX'-ZZWQKdN6-q"_J\R6XQP6+^hhFa
%Yff.&g"d4M!1_C>A[7<o(B'pbTFFYnY[PJrV;Fh;7Zt9?[V.!/ZoC+e,T2OiHMD\7pKir6KV]-<E8'dDgMWu4\Bb[@(`AqnofP:b
%UX)mA_e*A:8V/ko!+H6%T5g]gUJFm^41dD&6]d\92OKkrJb2prPRQ5U"aeJ]r+^QHDZ>X`C!?$5:^Rj?&tDJ5L80+U_ZV6%9MP_,
%GaMr<;Uhsh[J&hd`arG\D<['.:4Ja2cpgXKR/p60Wfrgg<(lk<fK)Lb*!)_.3gOVgTFAdBK)d`%?7d-&@IRKKatCj"N'"+??UoX&
%l<$OTh&GC$gQ_/2FK2*'"Aq?/p7hY=OW(P_!'s#8pFA7iUa-E%M+gJZlI<D.j>2R_+LkCf>f2sph+\@a$OAhk-B6HJChek13>%Bh
%k[rpg*!Th%-eBRIL:,XP[u!eV3=Xjn17_I+qY^3K2X^S2"!siYS`p@uA_e.12J6j'Z/e_@Znd%8YetmW6O(Lj$?o]7U.GtVDQO&c
%fbsq&*:03@BL0[@<r>?2j%FQ!9lU2h)=`]af^4j[Q"g[:^C1S3@1d`^/G^CpbQ5N>R"kT+lW:#fi5O+Gm^Bs]KP>P<+i%L%Mm*bF
%s-#a8L;k!^;&(JjCb1!plDb<I57O@0pqBV@$bGI#(^nP2h._,V;DGRu"F_?r[g[dt&gEOE[T#>-ZT/)Ga/0-V'*KZg_A"[Dfl7)H
%<AQ'N:&D3-\]kCY)4C`e!WaE9"^t`B=[Oo\?Wc0@mqnSB;XN&E2)$6"+=u$XP\i(7[]NDeZ=?''E`PYgarLk*N)G2GR!;a8k?V>e
%MimT_YaaJI"l"0B)"eP4^^JSEKc:$n#arKa0c%kQd8hHMBQm->D-Dd02lNT8l:S!@:ktum!6kV]H+=H,F\47=)fg4:dBkV<&<+eD
%&G9_oI9K=8IN2pTO4eFa0GO(2@/?4H4XNkn=L1@2)/)"^VFGg;I:M:VRnVlpnckbe[LT6p[L8:*R9T7JNHr>p&T*:0cVHVR$P@>5
%63Ps'b)ES19Bhe4iWAVWfguQb^tci95E#Y6kFQ33fQF5<=53s9e0/@f_#Y(6o%DD1j#Gb5gLM-)4&H"4MW3@dV(dGCXTH.-IM9^9
%kUqTK,XR]N`g#0T=HskBD[1/PTQpW@M9R(An]HTG'<V<[(i)tg6d"ggi%@lQ6AH5,8%)49RKDql+Ts`/'nR8:Q/LqO^eeDI78+i^
%k<QJB(PLgZG7p..1YDejLeP^">RD8YYjjd,!=jX@7lZ6/CKY"tA&&F+0N>NG"hXb3!u,YuQ9,5l0MGa`B"nM8_o/6SSgJA(7uYP:
%[5j1k!iI):JO!f$q3o*OCO6gF&]q"j:ReFTp^",G@s-T789-=jmP-b2)1l]3#B&GjXH-a``G/+bZ:u%(H.\-PaJf^id1J;:eh=U!
%cI3K.2D9_lN6\P'o^E#`LP^NkZ$(AB!3b)jWO]DdKAOnffi&r>LHnOh++fb:gQ#*bg9MsSfj9!%#FCg2.'F`XN-5sFZaCEf1ZaH*
%!jRNa6E*=k7W/)l]*%&[KX\^CV>^)SaR!=lZ1,S-aM)m(^QL1r"B<iZ]DKCrg+^t_\1G"^&tPaN%bRIlX3mPR^/6%32D*.hfK%]^
%K([8Q"_SF9^Y8Hg%XrSr[^GX?L_FCCVbY`Fdo'6P?.H4=m95eRcG*(;IcoCA;QRar<t:8;/"a$Ob7KfTK2PWfMQ'fD>oC,/-lgQ^
%=,[=.C&HL!T2D&VogYpOX`MV6">`INorn`D1NBm]=Ae2P73'(tNi)Ue^NQi,6O>n8CTmWmKCXNDfobm;C)@r(/#Td(p^CPlA@[o,
%$OA.V;---Lc&f9M3,BRoa(e*cR1sQU3Nd@,6>RbXcZSUgRV"5<nRmJi@``]n$1T.S`rIb6-?1TAJ)Gb]6FMl$a4XBK'35]U*c8L%
%dT@hZ+"#QV`2Pj+iBB,c]V*6$+>a?])YK=k70L?8?o*Bo+$F(.]0HgBL!f:tSoPa?JIYWJOd\Q#7j;q[ZO=^AT(mL#o.moRWh[W=
%c@==tp_g]O&19UD$JN<^+*2WZffK0$A?QN![8(6g^HbM.MaR357jR$V,+TPO(J-/@$?-up>/Dg/_chgJ'S6l@8.<<p,V;(j\#hQ^
%%RK&9Lrfpbn8LD2HC3]JL727hh'>)nUG5Uc]Pr!Z0e!6GE+PS?;qr+f/Ns1<Gm76C+AmCWC`5\4BYIrBZQq&,]Zp*V!coV\"hZ7k
%73Q+d-6j^k>H7/6""JHl&*O>-mqdgd'0"K1An3beAlk35_-l[Yir+&k\9Xg(/g7jkcK?6KN#Cgg8IZa)(gMY-,"</DP?[-fHUs0,
%c(lZPYMr-_js_!>l&hKX[$6@j(>Qj.OHl>(PE;2kZdo,[7<[[d6W&4PPg]K*-TH>0hO6ka-j@GP=1N3[PW4^%K<_N*GXA*7r0XQ3
%<Y,t`=9]S/d->-ZOq^&k(I+^e$>=2sRXgKhW%9BT1TS$Wr?7bu8I/3sqOlNW=&'1/e$-R?*GKj6)*N1((5`/>TkN#Qqk<Mpb>Ice
%KBSW024Mo7]Jq@c0F&[qR?^8:6Z=`k,(G`L)m7Cus5BD.=03$0:kgs1`@b8#L$$Z/GWoc3=4Mr8"$GiGEUHPUN^@=mP@e@LXL%=0
%R4^S)fWf;$UNAET=WTjY[1V(@G1UI_+e0BJ\7M69>%N)A72iCp*'W!,aen*f%-F"F=:_(134R(5:MJ#b2eJ>Ed<M5rioiLfVaa!N
%+^-[?BC`IJb_2>=+5U^EcYi>>F>D!U6YX2RpSu_3'R4o%EMhGoD$`MC:%1$qk%lQp(,-85]XA(3Ti>85O=(d=1):%MD.;9aT@7hH
%6F3iq4jtYY.@,SQNtmu`!h.I]MXak[g"p[g4=img*MH#5JPt%dmeBQ#7dok;!!u8XQ$$DSjXMRup5rIr=JVE!6S*3`HVP,OO#&pF
%Qf+^W,#o6$0kJ>a6'/>VJq@&*0e&m9(dpU?ZpR^k2%mZ_.09$>M\>fSh($#jU6a78Z"rp_Hb:\*,$aX4H>F&>e4"&R6@M2-1p*2K
%jR/jakU9&^>6$"fC`\5bAm>N:PB'id"#%u^U\ZG4kfS`r-J!e*Et9S-oI1:e=1!%&,U288EgWZ/,sR,=9ceKh7Ik85-7agmM6+0.
%U(#Z^ks6</r]O3[)f'1V'>UWZ<<:#7GeBZX#C(8aJ0u,'Z,Q,E,/U\s^=2F\N#9SumKh3E;E8V!Xfp/SF>GF8h(]Q=jBNZ)<)Gu;
%fN=/I5g'/SMVs=gZ*tBIR&?`D$i<A;]V<0!OA>?uTggH7?d29+SFd@d1:]JWT/&)9A_"T=h&DB[q$ssITE)D)!p)eaETr[7/Q-i!
%gF\#9ZE8oYZFf@]hEH394;nY-'4rAJDFAAQ8uP08V/!f>T#W0E,S6a0H:1M@hF:j^imL>8Umi*':p0e0?2R.to45=Jpu4_Y461?`
%0850#ARs(-Y/XEVlrTRO;k'[?3YDiF209]!i9"f:n^Zg-@3(EIRH=6[.2>nuA^Z;D=3[K5U"i7Lm2iM#pB>qO;a%@sN/nu'KLqm;
%a>bg=2<c2[[Rg3";+L^\8IlsVKj\eNgYpOi]n:4WkM"3YNM\bI?U@4S@*cC[\6CoNg8Ca=a=`Nf]YT.VXPh2GYT^G;\iSAq0Vb&=
%(Yr+^65LjTUP:Z&WG)(lMHf[u_M(IFOJ/08WXjNX3QaukOUX--\]M;n]*m0cUPoK*AC_?g9X0`-jZ0JO;O_>PWZrfU4iZIlNFY'&
%-eS)JQ/E^6ARF(k-@JLa+9WNpF>q<tHQbeBIqa?[\eZ>d:l9+g80^MR'^^_O-/Uc'$2G9=p9WBTZ.NG?53a=:pr(j:bn(1.QZ=.<
%+GM)*/;(1OaoX:!s25+JRsJ5nMIM2QhoATY#Ig6K\4@K4h0f\TaPE+9Wb[J=b3D6j_p#6o=$%i77uNgeP$=)L\fu$d3>U_;6(]*e
%46GPb#HXdX#qJJ_be4*`r.#>fU'FOH_2X*kH;oH=D3ao)G_Z,o>k=>t.\!M^`P/k#K-=Co-uUV<Mr4Z)ZklQY3)>Xg#`bRL"U*".
%N]i?9@Ws(nOa:DE[!WI_`*lG;l9XY"#B:psOGL/+VJX4RC05JK-mK$FL-4X=RHC#/9d`;BEQV7gm=L9qA4;;H-C!=`+u;Z20!EJ%
%r's029B*@h!D1+X]fVng+Ck_$/>+*GJ;])N2fKEYZG0mdPIuS/cG_B*B$$$1Oe>>bkGk$$'Gm9NLFY!0&Hh#^.?g?9E/ERE8o&`H
%\W)D"YoYiPY_))T+4\ft#/?8Uh#ai^'S-TV4cR'@PX_quIsIN8G;XK8O+rJGV5P1#q`p9E/JH;]pbUKh4F^4BOa*?2&W0\O$uZcM
%^hZOpWmUEHW$.=]4FmgakJ8e`^bul;OiG@&ThHB$`R_X>N!Ul@%,'k`(#9NoA#@@D-r:#KOO;>4`d[iD6VjEY0lg%`.=2-ABuNk/
%MKOj//"OtN'<U<_OXpN[18Z/X1"at-G9LXp,@Q_8F["s_CukS[AQh9k8T*Bc:u+KZoJ2Y/4iL@d&NiqdT2=E)'fK-f\:Kof@!Uj$
%8COkLZJY5?)d!VIlr=]Lc`D=,[<_j?>"%`l)iaARcX`1nEUD)qBr0D0TI1Fs'pHs_k#/g3U?UU8]:gs5i#sX&#UX^T<[<>D57q=E
%PRW\]ObS#BhAKJGfp6*+*::Emr]Lro`LMc&io$2eUTdlX=jN=fX)FL^ajJJj%Jh.f6!#Bm,k8GJ-F,ll2.p1"pT\R_#84[2mk2>M
%9ErtY-2&d3]63,>a^)q.XPG7Njh!^:`Sh.jJfLWnK)p1[Wnrep/&W1g1M9d&J`=dmh"*kr04G#j"<K`c<04MD8MH%g0KN'AotB,/
%TAjQNQ]%&,5.`_9V@sKRM6kU[.oQ%3j/[]dL?rm-0F*+PpWE5b0GIKqYY&Gi;_SW<l86!]!K-=V5.Kg6[JTYoOFhSn6^1e<I1M,"
%h6Wm#a]FRK6^NedCp>\Q`2(IOJ-@s]ES=,3e"MR%N.X[666+*[keSMU;aW:JL.0dkd"?;$OVoXi<,qYbV`eVpDRJK-QgI<'E<E/8
%4WTN]H(WPBj,F$Q#>'Tr7=$u_9U#kI,kuMWMdt1K+A@TE*(j;H5XUtGmI&?CbpLYodR,^`ne`Y.;A`7(3dTM*(q[m*Lg2/[OEghX
%1M+nX.)?k?SE.fq&k^b(.2;o`)0&:nm*%*KA[03Q8E<2V([lRI@df4&hWK+OOY*a*Od$G(jMAU"h:J92Y`ocd3<65JlPXDKC9D;e
%.S-(.@Wu6gAI69gPgKAkLFIHgZBAdB?Of=eFucM]Omls/CW"6sO;ksF16TZVVDKMh+ta:s.qJ792$Us79kl#C9KH;*,?XD=cZCQL
%EqR3QZ49IjeseA$Np:;!Ih^Q!a`[<QY_Yl^L&WcI4XcHTpd4_<)Pr(3:joPf$@V=kP.Jr)Pt,t?3!qN1PZm9,OoSPiXrXaA<**$j
%O@hFV7SYo3SC&B5M@C$:6k-II\ablD@E:U`@j5W"lIN1Ah56fJS'?.L"&$?NB^T\GAP!Ue$E-$8N[0QV14F@f,t*7,##oU#.1>4p
%'VW(1cp%egS"8%ZnH<YnTm/eSp6HolMJKk6(JmH]/g:Xg8lVbIS5?la_Ws14YV?EoA)1&j0'0@=I?0M5JB0VFLP^7M'<3L9+D?tm
%9etNP&%M80UeButjQ+S<aU-]pG80XhJQn:I/:A/NL2dO@iP:0Kp4gZjM@B)P4D1ih=%OMn_-Q,:QK+V0`:D);O[l$s!c;1S<(I1K
%c>HSG\1_;Y#FRiYU%^iUU8DLT6FGB^E+J]'^]`h_ZKd#`+#!a'm$?)48Te6(P`n'-4dYQAQMuWg1$qej5Zbk_55\Bl=UiMAFLH'Z
%H&LdA@[Y"Oe?R8V-ucN?"BStXAF77c2H2UnaNXl70:OP9-j9$Dhe^Cd/:+p4*7I#:7,-Ac+;^B#e5<?!P1ud-;=Yhk^C!kl,+eSJ
%d<Nf?%+/]-M@MD*29ln(D()s<!oe:t(#h24MP(Lh+Gu0mnW!Yoe/h$*a4M_]($6hQ.e@M?_I)-a1,Pgh9'bJH1XWJ+WS:jU;uqKm
%G9TU2,Gm2S!bko&^A=hHI%]kJJ<E#`1mB/*>fpjc<K^"6)WHo[EuMt=7'Orr1u.JG>$*D-KQrWS,LqLaj*Gj>NAFH/HlCW/afosD
%NZos$12/s`$\fjPr8'S]>+gD5lfbN*9]20lc<+I9J=I7L\cWYD8?%fT?dlB$13loaY]\qjFslEInP,36L[L8WH(#nN^thq=9^?..
%ZWkNnlO!IVG4id05tE\2!A`W\+VXHYT;FWV+;C04>/+=985?2@HJ/+MghAmJ9YcE3=9kV99&+C"--=`\ercY5Roc=F:sFGmDYNeq
%qA^<:/<HB_&Yni\'*heRi.OT,>C2S[=Hj)L!>`uA/1nHL?F!AOINZHpm!nKr8ejE`M:K0''b>cD[qoJ7U<Gnc7-Rf^Ul.[;7)l2G
%G0JmYZU_Kjqtll?<\EXDBh`31J:U`;3RC"L[a''NbUrO7qGYnrl(q3D=[?JucLVpQ)ZW`D)2BYmmZRd`;T>\o,m0H7Ur\Q&cN;B_
%XIKep%D`!u23L;4Ss9',;_3_I:c^%[8R3t%JumpVkkQ+m#q`9in0oqm^)I+5)38>%]b16,ltOPib1`ITp!?U]C\*phN3JVX":nDq
%-kLf/r(4Oqi'.fhYAtb?,mpA/Ykfn:?^09NaqohBA0R'K;KS"p`:%ejlM2!9s&=i)%7G)R=_=6%:4NrC%IkgV_7A3\2mTS-2f)*,
%^pFGgMUKi];,!4t8t-Q.R:J^'J0l.I<*jgrX^eK)pYIDDU^c?X4X(PK<!(-h$4XCb_\-<.feX(+6pWC!I`5-d5*!=;[g.-:lSNqO
%>Y[H;VsEdaQkd>4,hjB7\@r?(Aus2J"mt9rd=lU$ih+J=[Ta]@Mae7S=^3.&TdS8/+XT2iTn"pu!-]AC"cK]N=Rr2A.pUC&9o=;8
%`?lF`_QifiGiBS\gd/^eV0u]n,(`podR)N4Z*i!Q;sf]m=?nX!G%q)+p@63tSFI("IKTIr;c947fj>n3$VKfQN\gd"WG%lEl&rAC
%^fP?)j)2W,-_CVIl4A#"eR]X].qVO^;$A:s;!:d;k\F!["Xo4TYN<WE;g]4^dFA#Diekb@d5B>4IYo[)CIatoDC*H9.iMT>74]%P
%:Q_'YNrE<:$RH-"ghJ-0pSnlAVljbVbu#u9HND9RjQW82kEY#"[J?=-CmP_).&?W%Ab+hKC7'=p)JfN82unN?)>4A\4*oUd6H+UL
%]dg1G>WGXrE?I/r!`6tq$ee]+^0F5n%AS]4b*p=I_LA>cf2?rX,3CX/ngk'51;BhaD.s:&Rh'gmm/bAcT)KGm51i<$aoO\n,1*(2
%ih"U7gfLQOnpkKLHr_9q23si;@A#"N(kua,TSrl"WZsg1b6U5]\3,HJ%0H$1`RSY9;YS=-DS1Nk?9/ZfF\)`jpfgQ2-tVZd+gOXJ
%f758B!b64("Cj`/h]LZg(BZoh`$8Wd7?g_`;frYKp)a"EThTEY=1/j6>"R\rBo,T<W3CIso*tU;'VE"bO^fOcZPbm'LtX0L\+74p
%h&LAP(3QZ*?%C@,FC>)Q'hjZ_fmBp(U/9oeK+aW!H?Y#iS\T`"o><_#^!N3W6%e@-='g`DV'nad-r_Dq&*,>FkS!A<5Y-i`GjqgX
%5!@n-60Ct8Q0Nf$AQ<q.6ZGp8YiS":L2lj158mFh$]UM"nHks=Z'E7kPZE*$3a\4RSfi.Z`X48E\,Vo\Yktg1IA9:5pVKmgNOpeF
%Q6)fBDLhE_q%a7aBG3IZH:gR7HZ39_Cq-98b4mncX>iiKO)Zp8ci=IOrWguAJ,&&PR4R3Cj[k!nl[s)LcC%^?;,7L'B!@^*GFAb%
%(,21sm,@ipO1kjr/%]Zj+;SF[#[`p3XS"/_V,H9c:jgP.j/miblB+V?TodN-2go%Dc>B%<CQqO*0>-)\$KkKIYu.3W@;p4Co86&%
%G)f*3S$QlMOrgkt*fN.)W,H\-6'S]N@%8;2s3umc-("lq\*tJA0BF3rE5eJP8mqO=F;L)o:$NP6jl@C%HIU@E];JRf3oc2?HUaYT
%Ou8_rG<U/<!\qcEd#,tK.,!#3d4C.T_U:%n<p[)g:HY@*.OG9H>`#%8+V-^\Z888/LK7hC5%eW^ZV(kaU&9edK&AWiTU-u;MPn95
%<[[W0)OuqkGu&i!OGT`W"H#$9J_1V$5h3Wt&c#&);<KW\O!aL@%M0V%6!^tZK^'J`BGk\T?6"oO)O,iROY?5*dS189Vek?4OA5:u
%fS?B,c*3GS:sWW+LEbj;K2Ob"P0h07a5eQrE&l&_:WEU]Kp"QYNg6-cBYlHH,&/;9Abgo:agJ,-VdAKM"[mZ(+*WrciLhsO%giHb
%6,?Y1^d;9QWQ4%NkYa+CJg.P!mLBTPlf_QY6d(I^+M-u?KK'F_-f3f8_n>kFcQ&\?d;7hW4cp.S)_OFqs5jfcK463H'&.T"LVe\2
%m*X_?gNb0diX&)+'(d\bA*foab'rEGO8s;s499E&f`O=C_1t&3:n]O2"Oh^]6?u`F>:%c:jTM0K#adT)%\eQ,G6j)nDguARb/U-]
%5eUG<AuN=!9Ki(PfbTH!P4WfbcUU7k0m=gF!>MA^&7n[63@e?j7Ob`8dgnSnb;aU2kokZ*nVU?3\/CHP$A_Q*G.8sdT0K+s5nKL;
%96H6]M'Ffnms9(M`eVi<10i3S^[0U/g=GnC*9+7cS!^2D?gTPc,0_m!1"N97..2se<9d76jP]9$Toc9LZ0,Sn+aFeum?>rH>7$1U
%\j.f"X,pN;%7CNU"*F2V;<eRO73^!J,p7;)P#Dj+?5ASd9J-Z'TOZ-5EdHacN?)".1AD%9W:mnTo#*$C4f,*kIIuK=rbslI\=>cg
%c6"\%&!umCbPC+`o=\jrht_<lShb_`e>(Z$K'V9K"498'a,o*:V^li\$9X2"<T1aQ-OJ^ShcJmU#bBs(bc4$ESp3=-:r\kT1a8#H
%k"-+F-%m-uH4Jdnn$Sskp<c8-PmN-m5ntLYe)nS9;'<M&-p8`FN3IV4l=K/KCCCP:`_%FcRCm4\o7SLlZ9&*jeWFu%c>^"R4L^n;
%!@\Hu6-D$e`=ALQL`lDn=d=STE1\73[s&m#D9G)qi7(Ke0Pe-^,p>h@L=Kl``%lSs7@De2Ouhc$)uD%>1_sPW4kMf;hAnP#lu$(f
%BBrgjId/q@.)%Ls>1#L%4m^dA39J$jf!$R)oIBEBRE==2OfMp9(^BDdILa%l[h=YMSop6[f4jk*('PVWJ%?,Tji@,4mB-*#/"^;I
%!bg/2P(3u4^N/=94m/RJ.UW@Z0!+8.Q\e;_rh>uq*1(bm&fF8*_=`'2Dj<1XUX8JZRN,ZTF2'FA$N8Q-%YlDS-8s2O38]_RbblLu
%fe[I'pl(g"5aG@t$L>Mb54ldUFm*7!,D_i:o2W=uNeelfdn?$&6!0Bn<`K``MBg`:nq$q\'jcu@8u5MJ:cMd+EaOf$9$c2KdIZ^[
%U">rMoudJ-9D+b,A&P3FpEfE5:]a].[kO3C>"@g,+Y3=g\YU&$D3r9#bYis=ALSf5OJogiZcB9B:k'`uROEN<Dq*bo^!8]%baqU@
%*01q.*CpB'GXp<'!qRIF-n#mOpZ)[iW9uU2k*.^EUSgiGRt,OUGoWNhq/egao#rV+:4k>DVU,<XbR:mNGcFZkJRFLL8W2[J5QNV"
%qFG[%/bB^YnM9;f,FJ?E;s7f1&X:D^.d%SkP@P6ch=2%>dtS!7IH('Q,`=.$Z8PL!=b?b\HQEMlppeJA+=b,0Q!1V1K>l]L4R3mF
%][il-__9?('g02d--mH1H9sg9NcXA6aV&q,F$#X/?-=`+&Aj(]dK28fU)6$]<gic>aj%,^,@_NcDC)#Nh>hE3SSYGC[>:M@:JMM%
%QFhE;SO&L%>Vih9]cn*sU!(/pd$8!=R.9H.pQBP/m'i$[Q-\4K.A3CjMX!@"mnJ(tVE+Z^l+pf<B0dJ(&PEncOR^#,"LC;DcO*'O
%\5Z'3Joap+?E9N@+=3N2"3tlANue62lD[DK8f^HMJ.d4e-'VPu6jZ<miu3s#TSJm^I4I;>="<quq4c1!Kqt+Ajl'r[f;@mr7p:O_
%:5BPZ1c;t7DA\_M9KH\lG9;mq<dg"&H'>F!$Yps'8RJN>p:oZKIXDMl%pW";\CAmT5F3?MUVLbVljct"9-u)K'OLl-d^E$qMQpBH
%\]]!,JuV<ocm*+TlWcG!E1>!t77#Kf`'A@G1><XWP57hWiN`*WC<i$A]Jm[EY*D=@U6gJWpTDN"4)$UIi^)&>#9iViOSE;mM6B,L
%M'%Dh%mo7\+n:2Hpd%IK+='-M8:5h`+n;7la#eIbG6`Krp/:fc$BCY*9mbu"LPc4R%JITO3FJGZ;K8BsL.]DJkqY</<Mg5d%Z*,?
%rNZEVkbdUlo.,0.KL271&!opUDrKc8@@Glum@HIHXB=708kPfC)879dC@bP7/[r(OWFn8/b3\>#ZV$FYgND`QBP%cU;?VrQZDqD0
%Tm-ugC0i8<.41o^^TnA]f2n7CDD?e]mFB>-^3aC-o_Kt!__&`B^C^ZGm4,X<1qNKha_DMQ3qPFIF'r\KH#%qQL7XK"Ts6)Z+uqtd
%jsWLMfX&O)H9:>TUn7BB6r1lT8R3>a73SXPTubR6)8-Z]8ITYpAa68"<C]CHkL?%uJctejF/ZFf67u4a*ljN_4J!R)/0C;c'KGfl
%LZK%0M(b88L48#11HIV?K?Er>ro@hJ!SI0am$n,X]c'/>Z.("(qCX,2DWl'lEds0190sXr,e97,Qrf%gSirp'0W7enRefC'UR-EP
%TldcXT]T/h,F!0,0I;^2kF.j*U^?`sG3)!>URjNk0`kj-mDD;n#PSCF#X$rsr0-2a$[(--EbSBf;GgHkK[A',jM*f;1k@$VmBBZ$
%CtOshj1hQFB%(\uJ(U$_^t@sk?eh0$rP/bMo>BHi@P"IrfT06MD"9]nK^?XK/4c&3ZH).<m&u#8<M<<^$p^g.`EW[QSK*`L(b?/0
%A*B(8W,b<9(ct^jKb86;&!\S,0S[8!LBAtON3`3lGEb)fWZBQ7XH'<&Fno;qHUZ-^a8`.B)7]cB%I0VjE$sGQPY@QHXF"`qSgoo!
%ErrY9@'O)R1JF7UP@IO>d%RAG`JhW]W0e[+;e&Vh86jMH)OVTA8k5)1oT;QcEBD;"Eb)OFfC"(WaXN:r_306<(-YG-lJ;K/pEa$7
%\PXb^l$:UcTmJ=clS7fuiV<,'-.5QeO1/)M4eb24FHJA#_k;6\\Pf7P6!L0_U-\3.%oGG="`_scS@28R5C[nIqLMnq++7Ob`:)s;
%I;JT2Y@$'i4Kq'Kf`u\6%<ko649,2&38Y0H]A^BXE'2SpbI1*7`#X[<?$RkT!?g#GZ7Ab%7+YtH9S!PXP#>NkL2*n7J)9JsO4e<'
%`McDDfI`giIsGI(X@X[s<FR4g\'^3kE9*!$YYs[C-/g-\7&G!mf0C9\K#ihND/+hK3]N<OW%q=al[bS6QVQ9Si;%`)GE\gb'Yb[j
%[DB".\$,j@RE6X!DcB2FiWDca0-Eh_\qV?q+;s,XE89N"[TS-`dg[of0at6mO"q[iE]GQd-g_'&,-k55=]%=R,G<utgQ@:`:;d:1
%_4H3ucU:ZhF^gn4C^8:]BSCRZC2Obd\Ne#rcf?ehikG$ZV=W^PS]C`rK.G;5W;?ErcCWpn!Vg5&'P6p44',/kg<UI1AOXWF7dAel
%<k!9Mo2nVAlK_;njP4N2Wm#&rHTD;8?->^#6)S]\Y[f-38oCenSbG/jEL],o(h3_^fY3^MG".W(PjOC(T2$9<BW,%:_#pJZ;cE?t
%)S?WnX<%2u4$VgI^+%5U"2UPL0#46IZio#Ed2l;`+aGh$UaiVSN*kY$i4u8mRM$j$bEO:`4DO$&<!G#T'7+W($u2g01:UnbYqC`#
%8^!.e6p\*1NI`.2fq.C"dZsP'q>LPg,>ZgI="bV@iVK;[5#4gRQh6"tI1_\lgWl&(ap;GYKbs-[ST;;u_Kt$fm.tn8IG9b(:$%N;
%d^+)UEmG?5WcI9U4Lp054%dM/:8)JNSB<kN'#^5]\ZojX^D(g+!=hVo$7]WHO,TnOnJSqdM3Edl(Pqm(eK^6j`]!OP`cfMC<I;#e
%LarBqG.p4n%IQX!9N?n6[.(_C:^$f%q?19V/Y"Vn5GL.WaKRp$-[^)69Mum".?;+&K=ZF&1*T;$b%a\5ntJJFK-mcQcsR3i=<G2#
%qacH&*ZK[(o6(.qTa9;lD),=OQ\mFI78kd;]E3^8\&VejM-+5PBod-n;EH@\E:6X]Lg9kBRKPn`5uEr:FHr4hbsAVX8s!g"593B@
%$4'=$PJE?%%n`n(?D1*\8hXM>Wi$"7V)@-uVY/;WN4d+Y.\HCPbFHMt?f1d6eLa5<O:\h<kC&96q.Gu-;gB`[8)PJ`gtg[3jWe"k
%@u[2FbXc&Q#k'P]UZsoF)o%m#G^8LWP_>`&'u2lVPo==<8^sG;]\ZD[#F&hP$l4D=#@PeQVB/&4;'d`;]lF*NRt60>=k:jW"A_5A
%7>cL<o2P*k5QXNT%T)jgGhNIo3gr,\CZD3)]L]SeH6%*7l(Xi(TH"`)"AqZ:5:&'n54M\(DJ'Qt2$XOuEU[81-k9+Oi7U&$?o18I
%pc2C_$E@ap2i[1ZqqXC)/<It*Gbu*BgLq?n'I_(3n77ONU1ns.59suEY`-(j>"^`R"BBV'UBCWa`Ij=d!,;5/TI<%7.(Ps:m#._/
%8[%8FVI*m^@RI/+'if:2^=Jh"`J-o.Y,"5a?q]I?[)>t,HE,!`+eEo_af/8<Ul=m[B)OIo5BYY;!\)'W,OUK+j0O?c7NF5\O.>c'
%+Sk`Md#hue8@i(WHdk(Km$(cpMR!`?&7T=e+CO%L#S=0s_\''Bi[&p9R+[<!;/*=!_[L,>pg@b1c:[h#GhNIo$U-9**'=6dSZiKO
%nuELV/uT>l/tO[FC@Rd*Am0(C-@VJT-FlC+e3%lt5RqHUWg!cX8TO_+WAZ_(Q-DK\M=-oK-$u="LnP%!4fiT84f2]?gt]hmm18a*
%G6&%`G2YjN=Ke5C:l17]-B=!XW<SSJ(_D>&[Q/-.<6p"0.-a0pe=#-j&.KHQX-?_[2jB?'09R)L/::4I,L2s?-L4j,es%%^FekC\
%i5'M:O)!;t4RJ4"jJQ+&@S-/RODsWf'<,6%B.$WF9>5XSl0*mikp)Fd\iZ-udc0=G'huerAhh^`o1B0mJ](XL!q#Lu(;-?Hh.h9[
%\3_?*;?ZDXFXi(/p?kAgA)c^(mO.+u`mh7X`"R&UJoh4CAgFb?Q-4_1.Rak,6M&?Pq\6<sXQ2"I_!\/>kaomDHCZ>GI%K`'N3*J0
%A*PLhH<!iT<Tf^E8g&I+RXlqca.e6]]3RSqSa':<l5Ab;=c@C".RB9d.ARn"]oj1+?Db)`3;0FD@p`>qQ;p^S,R;=tMQ.$S^"2M+
%nG\sN_;o&cl`Vk4:]t"Un*#Vk!R)Re(=jjYZ7"ISU%pIDjEOMWDP_*?Ar?m8+J#h#Ie+q9)!r*^:@s:ce(fb2$/Gh,h24Gj85me*
%i(jZ!W4PKqG8XlB,34DGq1k[i`k@q@Sg8Iq4Hno#I#9fAI.%U9`%sqZ[)'?slqs*H<J2<X2P</q'h?ki^#5MtfHXoU%bY-bWs#/S
%@hQ(D)UWn_UZdeZV8fZ(kDfc.D8gR0nS<(eDP(s]V^J'l=jJKZWR@%FbJ:q8#L<kh,u1!TAW_>>`_K)'K&\:"h,tK;db&[]fI)fP
%>hr6A`*jWeBU?(.SY.^LDtsqJQ3.(Pj2J;\.gT8)R:n><]71(3S]^Hee9,\'c$h:6A+ZDs:Cl'>D#<gE@\01(p.\QjC@+Wjl3iWd
%CIm)28sNPmkKap?E=dsZm3OHu;#k'F'i_&_TmEP[X>2m^YV[Gl0@MY"e&XLnGW+A-H14gN,V@d>kfF"0=NPAN(L$(p:`MKsZU4M2
%XsbSG?oXbJN8.)epbi`b]iu![jmO=P3j2(d7Je5i?:Q1On4G+>Qh>kWBoVX5d2/a<3r3s/;R+j&P>6eoh82-<9h@0.V<<_bKAe@^
%*b=8ph8qr+!"L7d\Fu+f]26bf-Q^L8W*^-Vl?a-DM9_loiJ6Eo%,Ya%&#DmEZ$@6Z:F&4+EQE$:Z3t[=FdTC+V<Be9ogQJK5ou3I
%(!.HYb><O$=K`bOoI!1\lkYd4*l@7^51M-IJW,=\riju$8c_<hl3N6RkF+4AQBD8(og1O9+k;6r(gP^))GH1_0D8!]$sP)A.qh8'
%\H$YOcX/3:TNhc2fYU$I7T;bE'uc#mnl0d;mKlcX%NRebAJpB,Cem0SK=k$coYOR<-;stT.Y/5]TP4X#KF;P[d,T7#fGh)ASb#Gj
%[3-4lkB@2-OK3=118#G,;iDnq%c1a]Mf5Cbbt=(sH34j9Ai8qaYAEq37?g2N,/@#03b=DZ"W5V9pD]MP<66BicQ[XjEd*;2p](=-
%e@Gi[RrQu";mbUA+b2`j>F2!+H6l23AHuT-12!JWR=#g7Q^Wat2K0]+\<,=NICbVcPZ(KILtrW,UUUF-1-4L,"0+K&-<$@9jtHG<
%H6*a8KXjtBK`dRO"$GuK-+n4O?&B%f`Snsrmad6N!#9WM0j1`M4nm(bSW2)2+;7ZafFUnNDVVRiJN7pRDGi76W%[GkWF>GSit/$m
%';M@B#q1]:l?66)4;6D3(&42sM`XZ)0Y0M;YA22NW.S$5m/tAVVV#t0"@p&@>Hn&3=RC(.jqoWt,e+DZGh`e$;^EE7ZBTYZakPde
%`^?t0b<.lC9!K1IfTSeJQTZdK@^h5/1nN(acM1-sH_\I]`E;8\%*rXeN]_B#TF*[(j5o=A"^?>*E)eLTUQLP^3P,)A>HZ8u#:2u7
%eDBT:HO^Z#1$SA]"f\G2c-7Wc'.\W,&cbI&>e1k1FaaiuD@\BXmu5^ul/)214FPI5(aCT:f6[V;>BT6:#Fe+-!a"siYbit7?VIs"
%HqDWY^oSF^+A&sR*@@^'2k"8;ma@t[W;tBajQ=,9#:Ki\ZBpC,joknm2I5mq,?+4OnjDc(Z2Gi;p`dN7m3A3KrBDL)C3T;sED3mo
%3;>=Tjr[>VR;a%gP$j"-`]3WJkZler.B4u=X-=X(2^A_r+&p5rAW?,&8I8k;A>H5%Ah5JLYe*E!'r=_F^"TS:=@Vb>n)UBJGI+L`
%aP^-j3+XIt'MX4C#48IrBAZTi[,Md2g[3%\A<ckrUiY(+omH%r'J%Mn.KZtHpR:oLl+-.0j<+N:+,Zho4dg*Z:;siWG0\m4HA%QH
%gT*+%h?ZoiqhT>6h8uX4qE5Rq*3+%VOLG0C`R`_U[[eon1:[Dj=)74i7]L`b_a(3]Zp1#V$0S\q,)556%SuC(H_cn;V')eONh6.]
%okOeV-#eAb-e9_h:Qr/=3IX>OK]^t.PUf=YI]).UEWnk(J-1Ji9[K>14dJ_;W>>cS0F4FPNGA9.\LR;7H/^hTF,Kn3Z,'_/W([6;
%?3O).-Zmk'809?6>?$l-jO*6Qfu<K::.t1akTHc`[ZqGkWC%]'@6K7jgEj^nFdXM+gTnG.Pl7[0#NUnZc?@fLXFu.'"Es(fdF)Po
%S(o%BM<?O8PrjW5*qCkF])=$i^WH+MNpa[QUfUfPYnr5?4df@f3.s2NT)Hu[R2:'@8r3b1aE!T*T(B_?UNnEYJQC='_j&pS4>BL.
%*ITQ59Bn()H@8kN.USjq]B\l"kE)t3qM.mn+Ejhl,L2Lrg!XAnhHkOW$]8r+Nh1$gl]c&a3]qpIQ)jHU-28q[;OqN*1][h:9HMW(
%J:\Ip+d'n\]BVdVd]R#6jC+p;6AVB*b.BHNie\c4fYiM@V6VU!8oE7p!N#rf-pTF!g/=hJpWh#AgMR3Dne)8;,&9K/oAB>0d]c/+
%l>lW(pWE0WKMZk88dn/k/Fqb\h.X+GeW\0UEJRpQ<H28FIatt^0)%D_gfIX=QJ>^PPgWp9Nl:9,+2)MB:3=d83(BRU.#R%Q&ouc9
%o17,TY=[3*T@G$hbMBY;WtB\!4m>(FJ=(6rXmeK7Q)IX+)u(J@3_;(R`GK(Cq`**s?(8!?[=5Rm[ufqu+F>1QHQOAWa4G_7?b<iF
%5<HB-Xi@4p_?VdP#;G$?0]**hhZkjm#;G'&QpPBTr;c<`_391#+nu.9n9o-B&(&/An'_di`"+!/%j8e$+N+d5`"+!/%j8e$+N+d5
%`"+!/%j8e$+N+d5`"+!/%j8e$+N/o0Qk-F>T7ln""2OFim-G7Ea&?p)&)bP?i5lMfaUd=O&)bP?i5u!0Jg^TnkYCQ_8'5Q@r6`j1
%q2p`0.7^-2lX\W48'_Z3/<,$.aHEF@_(=ioEBm12GpLn&VT46>rM.EK/K*c7J4jg,%-3S;a+5l+Fa82`,qY/\?IJH_kU#VV"CHWM
%m"En,T%spmUl,I#QqfgPK\;h9!Q2:17fkDZGpF*q`"RP)NX>Lu5c2"P#*MR$,=.`qSrWuh9ZY7?1OWLuJM[8"8&6uqH6bcIe?aE#
%V!5QS$E!&^Nrj'"dj(QTI.TD&k(tJW&7EsKG78#g0>fN;9qTV(@%/u9'"E5@g"\MJq;o'jhfSEd!)C:3Ne24re"]0uIeb&hj#liG
%T2O$""Qo(3A)Nl+DN4d?qA)7!d^_M"mg/4VHYiZ`cq]pSNrjO:Ec`#.ds(:Y!7.;.%R'maFRg#/c[HlS"82;gIh^Q,eC)/6^o*BW
%Jp]U@3"#<2fte9):N(LmnFP/9Gl[d,')=9Ocb;N^!'n4N7mTC94XC>@TM@ZT#jO"&JqA0*l523g=/t*l%dFtp;1R",0>\l/W*;]N
%JqYhSR!/^gHGcMNTr4KE"7T.%J<'bfqAYKIM#'hm$qU#t;fWEtC?/luU,5"G/4sQ8KT#EOirGj]4;'F7+$Bfb9$8GfUGP+H36M.?
%#9DX'bWCDHBmM%PPbpqP883AqK_3d7lMumna[Z>&kD&F8-)K^c?rEF7#q%n+>TSK]3r(1#WAcsI<_CgcJYf99PC7C!eDoJ`Zoe\'
%lCU0G@S5,05c1HNaTFe,n(\LO;f?mhfT_[l_G+`j*8pJ=;gA@blCC!DG1p$V(uVC>k#'K(CO.9$o_k8<%R<j]GSCG6YEbkjW8@.P
%+KAf:7mKq$\oss'JCI=X#*S7!jsX'+n(f3rWOL0r])bk1*kVCO4Op:^@fWO3r#>f9p!%gt8G/mnI1JSCSc%n`eU@h;4'^;pr@riQ
%;r;!g5c[XD#.Ef5i#(Bek5n.==*r,#^oOB)b6%`FQbJN3YkH%]G7^hLj<tl2WO9SF:f\qc!G;"Z8&8??p2g_9[;/RY5[%Hg49j;]
%l=DpTCj#;Gd+61Oo'YF:DgE,1p!e&'!939Fmnk4Zrl/GUY("P8!H^KdN4eoUhR\605PeNOiN`]hT>,Y.MaRHFq?G47!qGNn.2q,L
%Bnn3-nc4-2m6CXCaePKih7&GkRaT@WNJY"sJemKb$&R&u@aprE`ON%,nR\(]'Z/>F<@6IKZh:Ss1[0I+4kX#)!K44&SA6#`G")fS
%_Do,04eO\JgY-.@PAMVCYK1``h'Zq=J9<$.GC`\t6Ng*(`aJ9'aTS)=Ib;p0Q`E3a[ZcQC]-='$j<@(ULukVP+aZ>`%87Q6efAe:
%AG_a,]^FY+=Mldf#b_1RC@i>">s/#=0U1HWqsr;1\)1,O^:e[\M"'ZJ="dm;7$^RIhn5`RP9TqYJMP(Bq<=6,IeN<0B:"rLh`ZCe
%Y._N\roi,53:&h+Ib\l)6Zl&=s*-N\%9L1#]A7EVSaO=(KHmrG3(jj=E(%::`\5Kqq#%,%FYd)tBOi4hItrI+`)%-(\FV'c&WFEV
%:9u`_GN[Ng^^q,!7,+fO_#Qt2DGb6qf1lpB\cQEM_kM>,p<grtIgM/QKht2'DC03/gkugqHJq[h7q]+^-OI@Uk:2>%=l3FM,2cH\
%:A./%IS+#JRn'pOD<(5=M)-u7YYj`W8@FqE>js*6]8nR+V@ncWJ+/k&8hqQMWMl#mqm&??3!nm6D?X?HV/fRX>J'tfPR0(X>nAF"
%VEQq@^V.?^N.eU6XeE7;^XB7iaYfkR5WoiHUj\$4O$F;&<=*j7ljrW^F*K4A1]o1I&0j1,J4cT5.+eTO>kFGQKkq"\,VMflEQ290
%7o>fR7Lk$C"1qta5Yu#C.ig;T6'KAP:geZ*HTPV;=D[N3(2O!dk\tUX@`ud>Ti`u;>+3g)U;ttffnbe2Q`Nkf:3VU+':-bPj*P-3
%Gmn2P`7=#M)sjZNN:#/RYJ._rG4t4dJ_\MBGBU&g%qKe>e%rVbRGcf,YHP/0ZIAOhfJa^2lOD^As8G97io;eA[/9Ldm!NF!J%C\T
%k=mKnBA+tlUgQ=((u_9?>sZ8,;qeBRbd+[hTIA0^Yh`,VU#:)I3q%M]TF('og>n,a$6?-/%Z(aUC)#\CJ3]+)+<iX"1pM?NAA^e8
%e!`t78N:PU5EA1PGpZ3R`c]:/1P7Jjm9hNcPDm9/_(m'q0SX&r';_,0OUsDTdqqTEKgnO!49\KM4LQOZqb/?SMuerW>'RnQDR\,5
%`6i>RLDgYdK.TSbhcrFKHf@Ml&U'%6"HnKO:4tsM!fU3L#fd2UGBlM0An&&D)r+pDRk5/4[)0(dc.`O_kY!Ws9_O([KPapHe&YD?
%D)Ms'Ct^6[XK$Ko6npB\"V_Ygp_<(s'4RbC"VT)tTb^t,qXi0LAX>VdJ$]%5_$Abe[R5-//3\FM+aWa9s4r$d[V+OTTUK'i+gPrZ
%X0EsBo%S1#L?rqr6/o\QqpZZT&B>f")[j&E,[2%7ng;q,JGm$j0>*'`0>f[cGVG0VnG(':.#$IfL$Ju>WX[oGVgA7-Oq">K<=="s
%oV9\2lh<I??bD0i^U4bo9`"be%pf\8Yo:*6[hgnqHl.:]UcUXq2IQVs1=#4t4<UZBN[t@NdmiA4W.Jlf4bXmN+R+Y.]ms@F`k-:0
%?0H0HD87ANO-]ljkdJ3=^FCYQ/f8@0,.09u.7m\JP.TW%-RV#HGBWgK%`=;W\16].DET.^6S]Wt]@t6PE:5Mn)_!8G?%I[D68?`.
%e7=Q6Hdtg57Pe[$9\5E)B`J,FK#ScJr;IMie!P%_s$V3,S[[?FAdu^#?$.@>FW#_H+@%$AoZ/9+*S.#)3qs\=Hd(!&%Z_ih('Y>4
%?JlGFEPYeq7ASM249fr'2s`FT-j!cHEmsh2=]/Gem1?d;d\7&8Vg`W^6W&[!rXduASp\_pG7q?CMIu]VP:5%Gj+e:H2Bg]eO/GEa
%P7cSLMT:oK(m#Cg86i-8Afn"taGPju@Y,QOe*)D/+INNUO9nd\@S#t@pKBiD/s7q6n[c(8Z:e?pL5Ln-YFf_h':n8Vr'7+B`"LO[
%-n^?N2eVu,*'>eVB.[RdZn!<IqPc"#%HC+lab=%5JY7W?*@?R%4?`>^qhY!</#<(dO6)oFggt<WJB;#DX2sq907WF7duV'EpW?4.
%=G(t>VB<#Hmmh2'C'SXTN*'#!E3!VlZthEg--G+--BF)2^p3Eu<d\hq@;pI2Q,r)d4ar0a7Qar'">Ik+RYE7A&4T>:X&6`,:M/&5
%DV.p.)[mS?Wq'lVl\Ep-[(VL6m=P1cHi:1q<6&lPjjnSM31<$G!i.9N89l(g0EIgb$gN#T5@mb.(]kC3#W,Q+/m^jG">u7O7SKdm
%@ZVc6eDC/\HQ)C#OdKm(pEY0ZGhJ>qD).grW%mK<P]#RE<)7""6#+=e!(B9QN7oA+)nFWkJZUE&V];l`\a/L:IrPMs^gi87=3!Rc
%6P8sYj\`sd"T4k&e7biNH6bM4WEM]33VoT1dJY6&[gi/I-)P(EO-4H)S.!@[FWbe:L2_bgH9?oJ39X,:KqO6U&O\dPF\1!qa9a#0
%'?t9l;S&=eC8h;%s.M1VF`?/NNg<+W'eEY%PNrfH`bMp!Upf10\&h=A3>C?u1E@]2'hM5H_Bhb/2(i6AHfs8=^-"?%YZu=Fo6ubR
%p2SA<ga@_'fQq".":o+UEa"pmp+6b.%QN=t6j4Dg.6Q7LfGk8IqW*/>Ll%'DCeZpCN0SF+28)Rt'M#AV9L7RZAL[6"^lul*&<t*U
%&rYm!K@#7h9B:G.;fYJ.oWo-c=S%pO_-a@$TtTEuNBR2kgdn:X^I'"q&32%/:6HQ%ZY((J7&,R3LY0#V!L_0'T#VgZ\dKSN8KdsZ
%DEB9\8g>_mF;&Hkb'-jA7f\J]m!`\Jm^"j<mRA"/OLZ7bR]V:Zm9VL"i]+dZP;7HL%.Rg\+P&ZG"@W&W),LDC.DNP$p>6nM8S@Mt
%W^?HOi6.$C^Z,>qM^-R:n351eD9.R+>("m(pCoA.&6<ZFDBtghhHYjC*qKk#@)O*CB&AYJZ(oM$(lLo^fLj<EDqh53*G@L1TH%iu
%'GtJ!h-so%b$G#*RH>SM@<:KI6/*Lfk=)C!>hhd3TVsN'o$fRIa>hUcX=e<S:n!!L6+qE=&`e]0s.MN6dF2gV:Ml=V@d;rD.CQY+
%H<#U<72Fug0F>eP<s!\\hsp;Q?!8:!=F1t@:Z70XWL,5HF%=rNJuOmn(s[.-od0m0$#*hPB?7CoD=C.]@^k_]P)dft5?V3b7g`!`
%H8UT2L-"jdZ%8o@aT$[4:a_g=pN8BtY2A#^rP2@bT7*qFoKB]K^X&5)^m/;C<$n7b"J^.1!4]'pRY8VN+=QepYON<CajKDWfBq:3
%!g\rS=,pRI-?'&kFi%pT!UT&T[+]_Z$GLre`d-t>Y+M<BV=MDJeDnl"r.1mcNa9gmII];Joj&UWZDf6139-<RD--]N;:GG^1%Ud]
%&a%PNs*m,@2]$sj-u?[@4UmG1I[f>tZgVeG^3I.-]KH2Og[cND*5n%('SP_O8^=uK^hDc'6%W2c>=Mmi:KN^pMl'<7>oOh-bmc>b
%WrMS/7mEcH"VZN*7KocPM@`r^a[,EmH7B5qXLMob*(k[5q<rB?Jft>W_#+I^LFHV=fnn'ZroO>o3TOi$VPA=N$kp_OI1iU`48P7B
%#Y!J;-dYXX1W]IOU#(GT"NS7l@eEEUS4QLFP5L-,/Pbpk@k]&m<;-4bn*HHur$>5YB$sV;g4\"b;`7.-"`?M#,ijKD?FSVcVnHS>
%'PpuEUF/@8Y7BL>k!)^Z#9fp)ANM&`E=S)m-+pY",j5@_3fj53nkO#Ua`'QfjFa\Oa_.PG0%$A!)q(Sufnrrb#>*_mZ>I*I!b0Cp
%YpBu^:r85DLh(QaeY,Hrhb>dQ5gec0ch/k-^m7JOo%3l,"bf?1KV9#`c9=7Tf]"/TqEcaHa53glVgTu`;oDdG]+^^q2!3n<h@aG(
%YENerPTL\U4m:ebn'PXZcS`N_D'i[oQNO$ITsrUX7Jo[.N#]BElW@#^!'5;Odg_-ZTr.>]j"!;BM@LA)WJ9MQlPiIFLom_AKYCS)
%U(IU!oX>IcS?"#0-NYIuA_K?&B'WpP;iHkcs&>U7<62)P)p9e`i7d-FdFJa>'uh;R[/A`B4#%E+8ZAWI!-^G>c<DTX1oBYkA%Z=Y
%SOrE(hYeDJe)Yi@h20]4K\`j!AKYaj4A8=&Y?"7@Z;&4XZ7T>(*dPJAW;h:[0$s11r&;_BmA)CbpQ%Giqs:Fj1!m*X1k-Bg/Y\m-
%PnlKCKa;2t%+tZI@3D5)>ZRE2dZTAHXNr`3$[Qo7#RTE>-"SVKrCW:$A"5irUN8O4WAQFY2:j`iomB).6dY/pEfaVb$0Us4G,d7m
%b<o`rg*"9!Y6=Yle(grt.4hj(:/dBAZ_:'a6]sDd+)qqu9QM%P(<S&*B*4SoX`u2Vq&RZ9RNQOs8VA[Vb`iUT]Wq)@S$C4EU`X)c
%*nm5p'7_D\h2K2^qhC4N=fpUhYqED]:5`&^`PYj9W=<F"QMTE..Z@q?XC%J(akas4%W&'9"9d'u,Zp%pG;#^S0EFOIBNc)_F[jWt
%k3qFTNHsKUc$,K1_N-TK:QrerN:G2CX3oj&gZpXB63I0Zo7i\?[lu[uWl#r%A3fNtL[U2eI/f"VDUP$9OK0tX"VL]=Cu`d'#_Y6"
%6^gH+5k:J#(pR5@+Dm!Z8lr",$&g+c);PTc,1/5oXgpD8)Fhu>VAE6.VQ47_Kn_u7k>_]mE+i/BD"jb\Eb-VcBhu2pc]9SSn=Wk$
%68BWJ-j91*gI'OMcd\-o_RXm4V7$+BOti*iLK#OUoMdVtn2_&*+.Ue\.;,(:6aV,ADDB2)9.]pkN89r%"@&*1KT``pL?3/RAgd\X
%%JA9\OX;?Lbqg#NTofNLPl;%639X+s3Xn*B\.l@!\AC3EUrSSp&]n26D[Q&<Xir4F.4-qt2qjLeb:/+Hdmi\rGA)8"S>N3u@XQ&l
%bSMogOJZ4p%MNJ!e@9c.<e)%*g64()+cN#Y6EN:#d>AY(b"4>OOE1p8*HpT!s$#<KUQ`,2@q2EF;NH`5=$l9<(h\Fah@o%S%o$pt
%L05';\dU'N`3Ru0^:Q`jXDXHaju>I]%sN!<EM;n745o+?*Y4-%>6kB(oTQl5qBZk%e(jdu7^VR%`\'rSB9qCbcY9WsaN3?nX1^,-
%&/>Ie\#XqX%KmF!%ia6O%;f)P!p(L0i7M]H$ggtnZFd%!0Q!(uf<tot)qA>mFchpb)1d/iZfE3mTt67gm/WTSC")2fl77OlkQ_Yu
%R:2j5XL(tp=<#QVKCU?bS'rPPA\</;aRH?C@*:@BZgl:D_Fdq\KS?k*P%DTBd10jt8qsDDG#]9iL^0>D<aB.1F_*jM32X&r!n7u'
%M"BM;$WPAI8Ak:#o'h9CH,qEoh9m,_'a<d%.YEm7C5XaQ9nIS+R53lFond&<[:IT!ZT])YW%mTI.q)Et(>>iMn="lV\SuZUUqhbp
%>bBuq\@EO?M;9Cme;(`jhlmfPQ&rLfUHtugY!_^/6;<_J6Wgt/C(\Y;XUi[0Y",RH<KYr2rW3"kN9ooRIOMA-1h;0/UHL-0S&7AM
%VNc28\[,8,T\_HmLkbk,Yq4"<d?!"4acck/KO+\R^WFLQ(0Z3O!(4Fie$p6THrl]hSl-uG[LU-;6f%)^d[oc`U*MOTL!\V:X]D!I
%K]-(6D69eoZYY6h>MH94]`QQsqU"I*j_cR=I/CRQb[XW?gf3FpGq**M5fKqGGngh:k1/2P[>C[_2(eapb$R4=-*KFNrXM4\??]p,
%XEr1G[kO0K(d1EO$tr$"M@KF59Mhd]0PPr+q/5K[24\^P>;L-]d`U)2/?N3l1Tghc]%kMI^7&o:?p91?gKTW7!_AZfdXVXe(d#/)
%c2$hbj)[^'6A!r#kad>;"j8M'nXNgrV->SNfcGjZIGCnDOC<$_=?Q%tLP5sZ:[>Bc%_u-#dnHMid^R?36,o1DYT:MG)dO6>2+fW!
%mMf1A?bW>\R;fn)dnG+7TV),:,gP$:jsEu,d56m<RqSYkRn247Q,0fa1<M]kHlpR6;4P2:qG?UjkfV,BMAOXngdOj.O?+'?GEFXN
%%,(`2(WH39Sp?%\>S+o[@4:&uEbR%f!Qm6P<gL@2-*2=<6;'s<=aNlFX270N!'ag@6Xfnl%4c:`g-*=80%ufpFdFi"9R3&N?*r&V
%?,Th+;4atZ[;5)6Zn1)1cqNYId7RO0U:p";g-$pT<4B05&m2#N.pFX%IVLeeWciZ6U>T1X.4X<p,>/QCmtC:==&Tu`k%C]lO!)Q,
%m(I4aV986HptUei<gDGaB6<P^WfGKN4l\^/"[HZn=\@%#Gp;C=E:/Nhj/ctd&G<_-a#kkg1I3J.H:EF=[[du88_fWp=5#,mY&+]r
%2S<drblabYb@S'kd149t;6l_Om8r_;W>\XO/afjiB'qA9RTU+a_S1%tD7B[%%*F,P&!c)KIMV?Jk4k\\G>S6oG)J?\HO)e]c5^l.
%#e$9#>eO=mQ8tm=e)h873S-Hb2(XCiCRAfDCZ$M3^R%<ZYma@9=bAQ%\7#j<]^?B?XPrU.DcfBpOg83BYg@"55iO)/Gg!'n]!c#V
%o?+0Gc%MKB/;+IJ\GQ4,XMKSV1:jGnp0+W+m^A'"5]9rn=%;+.0E9%3)3n8eD''*kn7?cKY(Y>L\^7ct_Ba"p1OFY\EF5k*2]M%#
%nl<nG6O4?+V2a/i%k:Z?p.Rgmlg2KId[q@^pL14XeVP^n#+UYhP:7?#gFX^8fJH%1Ght[-7\=Ue`'C+KA,5\WWZN?3GA$&1=P]AQ
%D*(8Z\fILcFD6?L<jj>kMNdW@:eZPBV-[:6/9aZO124[KWa$9a/.4c"RCX,ZH)PAW9Z_@hD@+JHgfldu13dU:Ea4^/Ejku;nTi;k
%#G6@@Q)hu>!r!)f:#1WY>-eif3m@1*Go&(+8,sTB!fjU+(6q,;=;o],Z#AddU$U;q1"g0b/i1"7;#.QG4Zl+-VMiL35OEFrT]K$(
%i3$"^9!C"SWE2*J$$oD5q6u]G.!;MU..c?epS^bX]h,+-d&eH?,rAKDaj]8Q''mU'H(3-nF#)f+>s0AkWWH@.)LODC6M(AW<\pl0
%+Q51MOhC,B8n!q</6:;o_WE"U]Zu9I3lF)$[>\6KH6WC$g[t1\7`raIZ+9ar&u!i[GMb`Vmlgc;<uVURKR);,Kle+iS^R!\%o#6b
%jm'`0a-k^hIF-\ebHFQ+:J`n*IH7Qi'J2D)j::^gVG5!hWgPCKi<YuZe+Pr0&2q#T9NuC!?B\H+$c.iqaL>FmL/17Roc]sZ]74b&
%^,o9.\bR.P`4'$b.rE#r>4222k"BRUfB24bf55qL-HnF+6J1(@GJCnBo6DC=;;,1D#aclB2XI=lB;?4R8t$s1872."W-d;!55,a=
%$HQKo.@s"c>e>=\6C8b(TLL`>qf:-O*[T2kf\D07)\ctnd#qTC$'J:s$s_7hZB]>sI&.MK/JR992@ftVVSt=6>bd*J\6`;T1_mBe
%)<b!p_'3PAR8KcD,VLQ"Rt6cNgML+"I<H16en;##E/NDRQG4g)HtlPllqSF;mtG'KA)?/P!>c=D?gmJXoD=,Y+dMLf*XJ*!YFdN_
%e>dekY2u?:oTI8"ZRI>)b$XVQV^M?\kLS3VjG`13&"Z1J?,\O/&oB84l(71^Bu(!!lo(kj[,M=T>D>kc4uBgX//1n%R)fc`.Ao4!
%W]f+]fM0/Y9]8QTh$>8+4\a:1eK?6#c-\oaV6TP)If?h5K3tRqjUiJ&;WT=k,ft!PXO`f8bO(V$P]VPBI%,kgE>#QH.9N5='Y+6R
%9C)?8[Om=A4""7iGC.>J08HMH7C0B-32s!jJHVKr>Crj[Zg<iG8?7r[$9/>723YI4<'2:4(3$^8=hn0S?,5DVnkRI3%NkE_>m23o
%W,fDSJ<NSYV)euD.q'03<a$;YG]cXuX%H8USpF&FTnfVjgAR`+ftt=NPOPBH=N6(YAB1ll,b.8[AE?a4#q)G4.oUW+W;)Hp+`&DD
%-G!(nH@;`<K%M^7/:T;ccA!ML-`QH/>pZ#:!pTBDKTf@I2m!]f;C1%:Q#Kd@.cIJ90&\'qKoLOPs)##Y8N9;<8iMX(<\oG0_F[XX
%b:O%`mQS=jM5bo.<]*@YGjN_8bt4::X/dt7F6N&WC0YH,VP`<$&]d8lC55pG*h[@TN@V-S8J$9!FDGrl*a'G#!>0mmX-h!!$qF:N
%DSJA+<]<Y$><IlqD=o`g%6JprCS'7'hWCT]HJL>D-7TSXebdF8l;j?jQn)V<1bQ0&N%>?[Lj$jkP=UHUKBk#+RZo["dk4Pb9']Ak
%U4RV.<mtn`$Ed46@Vd5p,djq'W-USOZ97=hnlW&(/@7h1pPg"_\:W`>Ahc3+f<T9f3(Z[dLKc0_7#4WV)^[o]2V"mr&,nmt`Rol&
%Mm7R;L<8Oj9g&g!pAC&4E\"UO;nGQP8@!U6^P]<gd8=:'<`+%:F\rp+$9?F1lIrXGP[,&CI:ssL;0F7eU?pb2pI3b/PcjfCC;a7h
%n3.[X6_01b@\5BsnT!oG[;Nl*n769Ro*C3M,dC/+DI<AQ?CnhhM'ZtT%`pQ.h!Ul\?+`Vl32k=2:Je9CT0*2iHeA&>PSlc@eq\SM
%;X@)..psO%G,Bu%m??&B0HHs+lqAqSm7d@\*k?0$Jft*F`m2L-6_/*NBVS"??"tNR(-4GM8TptrYhGL5)`IcnV`k86o%i\,9U!AF
%jt6#4D7apEcnA%^2@gN-81h_5Jttj].L^KKGu_jsr`#(gH$MuI5OI#2R.5gJbq[K$8-t6E%9b8j2/"SKD7IQtLC_cB)RPaZTl93K
%muc>@`OdbkOj[Zm\k/,b8cgcKDWEtO&#:qWbsT=r_p@o1Q8$L//$7!A8tut<PpOg.LXM7D.dtbPf7plL7t(pYYj_/>8m(2gQ.G%[
%?EN4G1RI4`.d"!E`UqOLV"NSC$3aEdF*WfL$<`DB<Sknk+5h1m/F\c0A.#IL,4L_e+`-7%^8/-X)hBZCjPs2u%hUU!=,CiA/0`u;
%,ahHg&o=PjI*0PS<;\6;dD#m5D3ju7KY4@lbdS3cR;\qHQ$&A_AD1jEEnj@MQ3gWNR_nclZ+K53bf@G^1qecoGIQkCO#PIOip^c.
%6JNpI?049BKKi>BOsm8i5<F4;F8bZ=p[;auY'-FE4Pr<t\'KBIia3C;K+2#PIK_$[jC/&bl1-cUY-AC!?!?Sn]ZnI6XtnR]]OG9;
%!uj\6CKT&8\YY:G/@>F%^5#fl'o2ii'G=iUc(4Ih%MhuGUcQ""$4\YMZ`A8r3FK*Hg@h*Ek8nGR_VheHLa8%6?6e?75Z&]d%IY;u
%YW2qAei#D[(Qe,mM$YIDl/RC`:J"p^jcgNYm5S2kH^g@/5",!&HFdh$:RQP!GL:^Cha=cYjm<f0dYsrqYid4d=,MdTA'V1>!.#YE
%">t@ED\Y]:$04fY#+Zh+#q>9[Q=?mcn_CsXEunEI/qEb9m:WU3\Jb6;>'aDgB\<(R#c(JH%OPVb_<VVnQ=c);e$)=ZH[VU2%B7*t
%aDG<T.RItr"mE7S^M7pUK9H[\8Y.>/f5P_,^Oh'c>Rk99@U$WfU'l(#T/V3n4smQ_;4F$8(5Ta5ZmSS-m1t^V^ELVV<MdN7.800o
%dK,pN@mP=):66IW#GgOY/fM?UH_r584.LR%/n,2+7M0Va:dB3'14/V@hKn.ijY2c\YM"K%,f3N-)Mo#+!j.^NLkqMqTo-msqJ/-N
%9gCj*Kdfu\CmqV6:VE&3Kc_"/1&#o9bek'.Br5I&F^AC,RugUjbI:G^gbU'+r?8h:i@R2FeM"OG=>N7,!EdT*;1E7Shcd_KofRkr
%:G($XL+Z4RMdnoii4QO&>!iK@>hs!$7AF<Qo`?,R27`B\!I<AW@"KOP)>r^!!B\BJd,lhDMKN-(LFl!lkj9!\=af!V+U=A;WqI4E
%Y<]1H7AG@ONqJ'ZRiF?n6Ddp0.`!i^%-g13Y2DVs?@XXB16E03)8'W<?Re<YR9".gC=W6XY_$-!.T3E3Ygq2f1+H(2Z<9Ik:^gli
%l!>trDGkIV5oeKEe6C+:CU]s4jf0U@)HgH3_P&sJ$CClB8V%u3@3A^DcR;KA>B;rI#ZZY-oP-Z92#V:(f(6)(QsQo$1[XFmL?ZHH
%:<T5&lQE<Uh=@J5*Ac.s4,n821S<E>[5;TFGP7VO,cVWHqf6c(KIOKQHFY2acJ"c>_.8!ke#K152n*s9Y@!^(aOW^];#+:Q(n9GE
%S%ZpaJ1cC@'eoD5Nj;8+\LN&6B:`4gQB3XAK/64[k#d&8fWgP^B_a_CH"e$lkL;DXbY!lV+:4<VdW1Jk%#sTb.3]Es.@DTL8>Id;
%SPAEZI;BXA(H`]Z2\S)$Yd;n.WkXJ>'u,=GQ)6uX-n<0Q1"kC@1Zod>&"27`3<AL%WNIM'.qHs"cK]Ad/&P7Q!ts&OEc^*o#Eg0.
%Fuh2+X70qrJu]ac`9!;^Ef$"FQORGB$d/bt=@rtUV#qirF*s;=KF]?m$NaO4Pt(%t[BPq]<%XZ&`nJo'Wt]p/1P;$Dcal;W!DDq[
%2(Io%:7/.S/Bq,>@&?gULM4kicuNs]&7m)D72,3&.6Bq%>MbrDQ^e?q!jOks]^h^7d23HbHjPhd/'Ap.D$3NF\tOBiUi"h;dKP)D
%M\]SD[f\DYe=1!A8q+V#O'uC'[5OhXqa)9,$+1og0Vi/UP^$@u87fTidc_VkKipjsdT42-*pGk".hLU/9?j\nQcC.0bFsS*?#>to
%9\V>Vbn4=;*hr>9^6liXA(-iKG>E"W9Oq@N51?rYSD,*Zc#*-=RH9M3VPaMd,eui3PFcY_Fj<1c[+hMNArG5cidAWsDD!R`RVg]L
%IAa.hdQW^C2+?5j5dCsl_4#Ui?eui#iFFm;&F4ZhAqKf?ng;+*PT4-2YOVWAmX0=4a,MU`2pgHU2r5Gc-'H\3kTm26,RErE-84CD
%^c^?gO2o>NO++"J@e!cI1:J8HMo"_+L8;m'=XoS7VdQ7R/aB[/M\tdKjEResbmQ(S'u0+tpT!idfZof#^9+3f*IJfAc84,Mpu_/i
%5;(IVV=(N?capMUZbct3fNZ.oYJt%tnu=WFW-QY2eU2lscMH4a.(m6R`FjiiHJLY6e.(A=G2rWFeojUR+/Td3kb9t0ZC98@,^N5@
%$2pI3CdrD):Jm(bg%iIAVOoOZK\)!G=h(eNEtH1?\+(dZ_F><Rask]b![,UZH%#'Ap1D-SaoHM9Y0\J4rFk,j9XtIWB[Pq[Vb.b2
%>s+HR+VL+o*reC[m>=o`2u!l@j&:U5c7$/0W',HHLNVQ(V8^%>Y4@jm%!GuUj*,0idl])F)f4dSl*`Q'\clU2hME2m4*le`[X(_b
%1?XVQe,DEm9R\qq_qoubL6(J8_;5Rf0Gf`n>;,',_KNPVnDD[s9<r(D[pXTVHkj*'Hj.I_#k&6gG&'e#4,bs;R[u"dJj\I+A9V,t
%s.6MB?bVIlKQu/6ILD_869'iT[JE[B1F-i.3Y@=.GVc4^EtX]X/>jBOh2&I/hhVcg(4<R.$^.rF/..eL\,Et[L.&]>%2?M_UFWf]
%OMc"WVj*Euihi2U>I.m7BYl#&rNV?9iP-c1a=mBUs#PCQX=QZI^gbml/N?c!]t4HGlC?2+H`^NuF0%Ni`++_hQ++@;%u!/megl-d
%0uR*4$noS8hdN4aBl&$7LVAN&[@JHf@j$7W:lLqYLcZK@*rTr;_1Eo&DNV`&6"\=8JTWY=12i%^4R^+cH>\KYDY88324h#55(-+9
%g8WmL$+#UfUaBf792V$F%A^L2XJ*>9r;uj3b^RWR#hfek3NEJGc$$R$_NogIF?</C>]76..NDG]afT/=Fe1XudChl4&\H#2mdo2k
%3GKG9CIr\nnKEK:?2Q_V(9jo$QFqp_G?Cej=^h+b[LRK@9oT\J=EoY_Eu?g:6*72#.+WbS$S?D\.PARK]<:+K-qKU2)dT"8;?A[n
%7$n_7KY9Hun5!n"AZ3eoaVD'[m6YQ6-QG*H/V=$ep2IYW/qb!&9PU_RM^WAB3QO1Y?>YugU?X/#R<T8H@c:&6A!8N$Mm;6dp"]:U
%)A%^NI5K:7>rifmbp<g'kW:=r?L)@u4SN4pcfi_-3)-PT>1TLKo<;&12Ac8IYgCXJUMF$(%5q9VK>Rt>&&q@jDf3D%kEeNjaia%X
%qnjD-pLTao_#Qhe3L;k:m1u1_hB-eH`lD=2*!asJn4-p0XjCmKdJX)`LMJ\nc'5Hd5g-ks^k=4K"24OO3/nqrLb75^J7J)YpK#.K
%m]\\E1!!R<H:L&GA6&A+0J+BkFU=,c3j?)D72[7ZNf%bk31aIR%c\5NadP\CmQf<WAPBL9k349'c?KUHNYqb8pi]S=9OeZ6a4Fpf
%_m"n<IMA9a.^2/cd!HY15>0EV4Ha4;Ul2,!U3C2(@J8p/qQqL[Dm:R0='V+\0FWk=_Af'hG8U2YWFS7B:62hdGQMAlU34q6#>J\E
%NTA!9)r3t+bBhB?+8,C7N37nX34^$*df>6K=NWbQ4)CACrXFDK>G99tDi?hafQ?)=<m07l(;OUVXMl01mP%YDW>U7=#so>%<XQh+
%!DLUQTFoM5)^-c+!PJ+4KKO+B<UTHt?F9b3ISP9r;X=6$3r?Q,hepIakm"FG7a=B$.+r1hor/L,XTMh@XN%M*$=.#j<E=!Q`e"+?
%C,mWt.(^*m1Bl+>V2f22i2YlZlIZqCCZ]>9n#o<kf=t8b=h/:39-O7$hH_[dFAKk;g3s6goE&m2]tXO7cNs(iLKnAqbG//\nN7lA
%JKPKD7e^+C:ZH^t*ip2XNKPJu*J6D[E^(jgSWi]bN0Xk"6f``Ps*iQ/#[<@MOB?!%/bnf.OEYOaC`@cS-FpU9,APB[+W]Ji]d$j^
%p!aq+(sKJ2JuQ0HP:S38X@nXDPoEEjDYDsT(*.)kobRDmrfA92k.%SlHOE:?2sY]Z#D+KrU#,V%aMVClPQfg*ZKS`@87R0u1oiB3
%N:F(qc"9$u"G/km:(Eaj86I?N1QI.V#-a)$[+%T/SekqtSaoZg0YO<\iOp]_@e)41-i#ac"&fj)1?9TR62]Q5J8j)qp2^qZFob2@
%1tlpp$>=s<=Pf2Oh4GJejLlJNHoSg=VZFL]Ts[`n79)FbVCUWm<*XFlV(d`I><.>EL&Wq\b:&Mf'YTMb*!f.jJ5'%(G.KRP%gtFB
%oOns1On>NB`qHEO\@:;(=Up<JJ5($@RSK2"9s]^\D97-(^3B`cK.*G?A`W0We(Yb]:lPSDqK'$n2=,Qod)2V[?Hdca9g&sT70tCZ
%Y`ARs!ZPNS(s+Ng%t.)Oi?M.aMgTBnIQ<*;>gpsBF<o*(!4G<N>3ZL9*uC6pkgLsAKCP6KL\L'BW\(8V[.":PD)66hgX@k6nF4$/
%OXD@aXu.4*LLSfNW'aK($+<n8RtWbhl:0QR@PIIEa$qd*OZ2qm``Ij^B`AZ=Z(A5]#kj]"Xe3*m2$J'(k/\-V&H@?Wd>Pe+HYfGd
%#GM\H?rn?)N[koq=O]Xn,;1rEd[PP$gT)i`Zb]!EGZ\AaqU3Hs4SO6nE#tO1kn?iN(d!?D6AJFrKP!7X=4dNM]'u#5mJ-;4''l),
%V0juRdc9h'Q&fB:o][>GCk-q:5S'4&1[dt,r,CtB9IieaE&Fi(=LF`TVE,@PHN;g+(es\"1S,Faf]^s9js0Go*ln&UOL>Lca8D2E
%?s=XC7'acri@n*MWHYGJ";>b.6]kpY:Ypg.@D2uN/W8"O?TR4U@>0[^H*K)ehUL$,?565;Fp1"Q+:%kQF"OjB5tAglUEHXP#2pnd
%ceg.*]6@"i1--%\ciErYpSN=Qp_2ZrnrA]=5,-o`dhoi"8CIufYeU.nPs.?WJ&;][KBbo%Ye:JNiX?`5J*l*Q:CVeUS3c#,;9VPY
%RsH"-Mo+/57SaZa_uM^mDBh8?G=9[Ygb,pD9m_nDi^W:gEPt16o/.WW3&7SD!I!L@[+#Q#n[r6WNa@]S^#u/i`rWn(+g/LVe<qDu
%l="(-(f',MM[(".H!A<H"so'&X%+o#a=K>.j[bd/!Gi-R1t<DgG[acbULU'dO/P#11raGK;I!]6D!T!NdM@r=GH<M@<%l[Tm;4fo
%ApaU5_AM\4`A8PNf%B36.-;c=9g+L'<T1a4=Ak^AfDtg&^r$RA2IAX.)]N<mA!d"#0k=VSYUI`BN[%tl3Tpjg>Oobnc\lS_HSp]R
%Sr]`i#PbTX3()THA18"mRs7'9%@U3-c+=]$VBVd3ku"B-U+A.MJ7,hqXA_f<1Yi*P%h!R?kgCmAA+?E;8,'$.Nb[F2P6u?Wo`bWt
%G"1<)N*UO/(0&X<;8e2JMOg':H*l(PW.5lR9#KD'`Sur:qT!q?MYV4;;bmLC;*m>NLL`o6q;YS,n"c\m2DsNb:k@.WeMqsk\/_sS
%>QL;ZO>l2jGb"kODquAt'4X-Vbb*:\;61;I)gW@U\'?$qVq@^'lp5L0D8tHHRcR?U`;Ve<M6gh/CD13bj?S&uQp'Z[AKuo&[r_6'
%gu,R0a)rZQSkuN_gm`U.i&ArQW1O=Ge>g9_Y'Kto#5-bY\sM[1@Pfm&TdpB#<N8"-[I/9C:sPh3UKHjUB]rl@YK@&i2FWc5h(ujL
%0m3_HQa"H]8XQRjXIso`pnIJq`a[J]WeI<2&sPZ^S'DjFFhKQ%(t?mqfI5l,ntmJKpo9FsR>murUjjA+bs;Wn\W(\*rVG:H$\e`"
%RlR=<V/R/G^lGna8CTm,m#&\bEo#a$M^lepji,5YH;dTAr75QrPu%IMlL;:Eg;RE6<'pTP6a8O66;rmQXY@Pn4@W7T_2K`G4Z#2X
%MY58UVB3eQWfS^h<85&'$Xd$Z"F?DE>`e@Vk&&kKLrcN7eh*+0]hPjm!tmGQK<@JP-.amMED[BpT=gE_gKStBhQ(kdb@ZubPLG)8
%mWF'&g\9WLO;DJE:QmER$Ts'r*fDn1X3ag9Jn>9rG8ftJgonMc(qgHmA##EPaI@Jqj/YN#P_En]Ka-1P8D[Dmo''m9j4rDphfR8R
%D^I?^)@Gl&kJ5j:8C.bGC^O^[e<S7&?I2-9='f\OV`49*^fMh8mnM[(Ul,<,'M)8&SgESE*5St0]8&#]Yk!l%/efO0EF33SNXX/d
%^ofpl;dIM(-O*j53];lgcB"hDa7tgZ/ChAC*%U:N-$jhB*VS[M8`D/*&GgBtgf,p$/OPG[bI,I#,iM[*n5$7iB*a:YOtF3+_jHiJ
%T4dq9Ppu5c>2J;I=u\H'a42A?(/+1uZQB>_TCQf^+h90TA&mgh2br:B26J^F@<QtCKod#b+\<\tEC&QqQRll[:ZO69P,1+Ul+QF!
%]+)7^#$o?fU%Fn;:$@Fq>7l,+M3M+8i#(d%S_VdJ"@\,1'mAQ4OVV7R6B$hmGDY6j=8^"n:X^kFJ?UK-'luCV2S2;W?_Fe>U+P#,
%rbq0`Xb"T7H@UfARlEhg*?%ue<OnQBA&75_Bt'q9#Y:N1Bs$h/CnF>E.V4-7(ff-[k/Uq8cFdVFMtJQf2nrHo2PS+2h+X7.4L8&#
%/D#%#=tqb\eX!b7VI2oIMYQ7TnA*J81Vs`of#=_aats55ZP`N]B`g\b)b=&WZ`.fk_/a;Fd-\2<U=ueid9*uIhDY9JA2U)*0b3cL
%=8I1*)sN\/BQ@UXVsid-fCK*YgCP=VN_lB^<kYU]&k4]ec"-sQdV4iS<]MuU/SPZ)B_$K<2`9TVQDLY[9l5RL@_q+.4;l,@'&Y7^
%Z#NS/647<9>$Pk:F'BqAPukYtnMEO3&WR_W<r$j"/A!N&GjY4C,rL,^U?+:(5d.#1Sn8.2+1S,sC`25@MqG'NM;u^I#QcG/#*<=\
%fpAB=b%K&*96_8HT\&gC>/Gk!9<cn36m`s)UO7ne][NT`-dW3u%&F=pH``RY(%I$9GqrU<qa._hC`BdpZQ"T0U!p&0.m]dUKhJTd
%dn(`i?sPjY&'=Cr(U9F^/IFmq=!^uH2K@;dQe(3l:^M+M=Q/]s8pJd"--N&`\;_2N!sbLgDjE`LcXM_(cnu^6>cW'#/uY*H$c*(i
%G-709@R>=qcc,6'3=3EhMnJ&9o^5+G#Cuk)!<oI8"&Jbsh[gFuLf!u#4A(FqY$A8$m^?Y,]D8[_S4"!OaX6OMon9H\dp1*FX=.$D
%:&LpAq^Q<VPqWII[,Xp"I^^[0&1%b^5Gi@*TqC'k9l%FS\_+qo1&qC]5UQKuMb38?#T*W])Iq]*bFX$-:RR7?egdP6OP8%?:o(o7
%dB\<pGlhu54r%Qu^*T0'Z$U$k/T:m%/5<Mu69uHWN/UtGG6i$0jE8a%GUV.JfOm`6P1A45b.1aE^qK8S@W!Si8eQL5f'EZEC$7`1
%7Kb)hag4Pb3tkZ;VPIq=(nt7t?S&uO-/7T.'X"`]D=V'$Uk;L'eAEgY3@951Y*!g>J$IZjPRHMLF<T#Ze:NL=OPn=1T1@JiC&sa1
%Ej#ZJnY(KdCMG987VZY[H20>*'KA/4k<^5DWV"$f_cDj"Yu%[a'$YPk7qN,JCKInIMTSQJ@5YeYqH,r7WO/HdM%;[)Gj@C'(9+(=
%A'7FDcL7$8Eo)agS2m3Mal-HD6=nIKo-tq^^>m@if<T_nqcLr_"%P54ahICimBmqXNBT_f->l(<7a?Oc%!/eA/SPrJ3&YabCd^fN
%#D^:(LgscP6Xr6<]8Y^)UJJF_&/H;)>NC^])-n>9C7pqEG76BIFu-3s8dNZ"("2)N@'p]fWX,:.rS#ir^rpcB2K%NWkZ"YkL$*66
%9Z>C"$h?D`=p,IEeRAR&fB:R;6P\aE&/Z\-Qtj_Y(j7B[45M)qAa)RO!p`\"dgWN]*k6(,<^^gKGnV?!N+i8DI'Tlk)?=_o)ISYc
%G^d.iJ6-"rb]$g\Tp4`@j^]"S#`&O`HTgAP!OpRMLKOm*IQi9eGn\Ch"Ou]c/Q=SKGH4g<:3XFQ7mdXR?@1-MmoIiON$V74>1u46
%;OaXEHHH@sbh=;ile:u6`DX>G%ZT.a<d12adX4i^NU2=W'[)8O.&g?QCrpC`67t)&<.U4SqK]3[4`(rEA6Gq*<nA;(/=!9.Vc(sF
%B$`*KfV/Poh9EMgA*#P,\A:q#"t:DfW5HL;5Ul#N\EQO?<S7@#2&cD;3r$;9[&).gaC<`9HW.*61sk(1f<=Ir]AgC3gUoXu2SUXe
%NBELS@?*>D*QAZuBMPs.Bo/)-+ik+Q+XuqEc@\$NCs'-<j6]Lm!h$;?[:lS-Q=N`+UEi5CgX]7t&91YqZICNoFl@'[fB.nm.+bon
%&>F7gmhUOf`*q*PE2(5j>8i^AL,oENhfqI^Ng@_<@]QaV.$dM#aWP57#Q$;Q>W'Ke`MhSb`+rB'dgQt$S0m+tJQO$=/nBp8RFH1Z
%N^6&V4'\Y;jfhmH(15OBaD*Mm;$cOL8u#j>F*QAt,"1Rt>ek>F30a/S\!U\t4r[)Xo?6g2V#PEVrkB$EXCD*9FP#sXF*?90^]!s=
%^QA(X-%@*"cNE.Ph]4`L9lrW^$PMtFQ="Mg`+M/s/o6e,4(-`Bg7JH<Qa.Q?UMr0AJTmm?:[eII;RNjF?)lp?`)8jDDMCrbO>g!U
%BcJj4[b\ZR3jatY8%2SEe*Xr_oi%qF*TL$egS@N;QX_$9kpp/\I((%C_b*S-\R`$qM@sZciq&VI[_'*bUXCoI0i;X\=KlSDID8n$
%NKa['ZNB+#O__*%RCYD9OTAGYS"h8lLrb.AraHT]GR8QLX]U_3KX."`T?"!q7:dr6r#&YL^;E_:'LA1)fDc+oM*4dL;q<p#YU_LN
%*IMor!"[JUr29m;;W]Bdh2L5Y8)>iRJ6F#5l=JD-C:J4aT5m?nh6tl&(---fej_d!dagIc*G!Wa0H0M"f<#;8]2@p"R`ik)VCX[#
%qU-,ri@e2JU0V!Mn-*]b0kuB)]*2jj$F-ZKOnn<l[1i@ZUqP`G+lXV#.*:Y)[&lj1J'OOld"cnhI^+7ECVS'Y972MXmP2\HWp,?t
%4-7*Y?EA=Vft]Xn^MU0)<J@DA+-_SS_"cSpZ"BqdZ&7@jZEt"hm01X4SI]"!D'Loj,C2c^%95d#JuqJ;!/G)F!c_p9kRrP%qpbUp
%ZhPpi#VEFd&h2mF23a7pfbSP`E#'b6X_)[bo(mC)d09]11)c6>V<mS\HqY['F6&%,mo)N%0R=h:]3sO9f@Z4/AZs`F01F=W<JM#V
%:T2j,]inm2G?\D`gl+LSQLsEQ'e;/NmbUb7ANQX>^>&WK'_B$tjn([RGE:D<FIOr)BciW#g?._Fq6F-W5]u5%Y`BQbI(_[Zc<(f$
%Aen\tH&+]O<_Naf743(EB!Rb8cqRo&^o!JO/=V'u/K209&)b`NiLHsTW3MF2O>F?Z@`$uu(1j%-BfLa#S^-ad0#QSHZ[p!gQp<(4
%osoq03AH-[IKo><f[=#1/>mSRJe0&_3\+0ZQDXttk=u#n;O(#SL`dS/C1F[19P>6U+r6H?PfOh*.#?gt$j+XGb@#`/`npQE,5B[6
%&X&`2@Ak4_(SB9>Lr#s9jLJWA=KD=Be)!GS3lgYKG+.S[EY/+p4q-=!h1F+&\`K%Q^Eo<Ga7"KRV&Y\"oG?5NCEo9a2c'I77ORpl
%ap4^f!dq"3Cl>,XNW]>3T?:@@fr(\#P)^=$Dm$EP;t,g@2leYq:g'2om]]H@:#0;pPQNi]<`:^c;pO0`VJd3!gAZVB6a=#9bKPC[
%/X23DWBF^o$<+S>K+pi[\ej#0]=d"gK]n9q1-27PoL;"GGRR?lNEs71?hqdr)p7B&f\4E.A)3/>n#KN]H?s:J@tKd";]geCOP@#a
%f\;>]#[!<@^;lS6ORL$\g)jO@[4r;l.WYf41((.9ET#WRl-LgaLa09mn6fY)IK*d4N_Mk+PpcB,!mZfeK26n(68Ji>D%^$m-Md;X
%EjoEjg1-&IXsIXQ8oZC(&R8'm>'i&L]#)E!`3).WI1%@Cf0tFiL]roL2_4K('^`=!P:dsZ`jO$2/WqOMNh,QbiQVd(8c&u*,@tr*
%.qcd0`f=q"cG#!qR<aRi8gh!;;rr?[^5Up>YCKH.p#3;;q$b4Kf#8BeP07tLTAF9,5^Dj,k[0HO/@-6$,e>2gR(1VV3mB7ie31me
%X"-e9B4ZV'#7oS;#X%M:fcU3:diheMBPK\Ul>$XVdW-Qkc'fG[B=J&MAVY_m[I:=Z;Wp3k<k\Wig7>rk_A56na<#?T[m?8i"/it"
%%<8>%U_FZtddobQ`%H_*%ZlYAVf<YYo'LLh_5B2(%7+#n3Bfin3s_sm0@[\+6Uh*Ma:#pc1Uu:@GE=X@\^?;>s2/BW#P/hI%bWK"
%Do!jGk7MFH)qj%UQ(/'4_5X=XS_tW9)O"GH4H09ns!2KeVs5:m3^jYc*,'6+BhY=:@#'(::=Yt+Uk,i%P$&J(l<rsBHh2$(T+Bjp
%ah_#g^=99c5[@jSK2EoGUd%L9m_Pn"HrP?:"JJ:`Y$P5'rKG.X?cfe0<;C7h-4oRMdlbSiN&ke4N;E5`K-@lE)(?W3b=NJE>7d6P
%GZ/)=4"S$P>]FoDFq;UeP;Zoi]*0R%4H97.6h/c(6pW^l\WnZN$a3]k\WfA2Z)j76@=VTNY;U"Ja0t$VjTLN^_(oGb;Rb3$\4YRB
%B[_-s9>!W/WDXc[=REGC;pb*UL.5D:heH;D*@)AI>DRM?eFXIa%u@!Nr@(6F*SuB6#](*5SNLp>/@@I\cTc#GDCJ#fJWBfj7pM'D
%Nk!bnl52Hp2/QS&#DbJ)[7iG>2SH%q2tW6VF*LOckc&dB9P$#qI:%>,*s%8)A=m4?m6"n;9g?#YG%9*9o>d7Ee\O4ODB*\V;B\sq
%\b#sAeT\F^-!midPG!6X+;I#H<c)drHKn`H'H7%"$A5!4'SSl<!Vpg)YTTm"em)%4Bc51$YBF&-QE<N!q%Vk9ggOgXN:IH?2R?HA
%6JX_>a;1mnH,?/H:_R?I*'$e3/i7h:^lf"2DuTfg%<4Um.gVUHHk$AX:d2b6j7#*aIRq^K;^d`jJd(YC`B/qVeW-K:O;HlnH?=EC
%BH%;:o.VdeDmAT2+$ZJmc)5oIYk^a=cIKJr+1C@H4a4lh)oSSlkkuII*``?Q5KO3R3bSQVFm?;VHk1?)aLUcR\c*hTjqc^(^/)MS
%^)Zqio79"6_oB\T;25fpC_"Fhjd+CTNboH1:n=l1P$UqL*?:Unf*.KlG>K-rhQBXlYu11&'K3>)q.,/P3>?de^iaot&?:Un+JH>o
%"&u<]=5SY(12ak^rnLtXb@EH%HG#B.Q$X)KY#7HD%beDQ(*&S]#5ctsG]g8F,VYmr34/!O]"gC$\]g#&rj#hS);uXTY:83iHrRia
%a3/RYH&HN*'eYj7F4>Q\a8@o+[ht-:q>:afRX8[-cTXR/1=hK)0%],5`IW-%V[B#,/"TgKGlhu69.eJFnm%u;ClJ#?4B``E/V\IJ
%1KW\DM'pgVN[LI:[W52iGh[Dp#:$MK^=ic3YqDSLq+5*]N,>tH[S<<R0[?>?4%/qqP3P0T>Hh-,iQ7g>]TKgP8bP3j#Bg7a6']D@
%3%g\9Bs+7MJAoUc8RAs]-X^=J?,:!XQ<B9L5BqoO9_U\q<g3[p:Ea0.MN&Ib_k@*On,8h3jI[>&]i&(;>C99uiGd/T8'D,K.mHX=
%]Xq0Vm@:'9h/9#W18^"YgAp+Ta>C:=D-m#Bl;d4S^j)b2Nng6M?=ZF[,!sRaVo.s<DaDqHl*7YhD5drXH4TV(2fS#?'NF(B_Q2LX
%Zus.(`l)K]APL3.(2OF)"[/ShHL-N2<Qh*+d`'_l4nYP=-?c;R791^$0h=5Q0Y)0bp_H.j-*,^\UO!/p\8*mfG.J"WcVM;*h8B]P
%hR?`'Ia'2+[t"2KQX1;.d?cHlgZ@?P`MUWO^k\9)/ck@iE,K021_)We/7Si)%e[cpmncj-.d'6Y3BET>&mgDTl)s-T9L\M<lu)i>
%j*!P[<c_*<AH+!kU-&`@nHO\n3-C@?Q[5"h:#_+8N%DW1dr\Ih<B;EBe]kuWbX!">el0s1[J=HA>qR>W,-bZ5k4lh\"_"N2.U^Yn
%pO;6k.Dc:^=BDHQ=j;d^[C?EdB.Aj57-^6Fe&`2W@#D6>8nTq5A%ZB^Ho)pRmOrO4.&=X)9P;8,ni.?tZffMp_c'o4^:5#&d:b%\
%(YI#)@O6?\P%[jk_f#C@":Ih=&U5FQqA(_1_;j@.'uRca9\S,2#B7pu?Kri(X>ka:1b+FL]uh.np<7W8Wu%VG_L@fo4W?PSLj1qJ
%BX;o@'j6g%NIW],W9%,RZUERt`(RWpn/87&d6;F0*`>F,M;QNlgIf^,W8H]UL<U("(qb(IBs*t*!?S3Y?&Rg??pff)fCR482\2_P
%p"=1::.a$pOL&UP.6SNaV>=\(js\g3f>#"*monQEkJ)H)e4Et6b.X#9%7nfchEdn#<c-(r7Cfh958#b6U'\A5<$7SHjQ^peBD7+U
%%*Ftsmtfa6;lf+)GPZPZVq#&FlF'pdl$qAdLs9/`1_nV-@P/t$aN^jdB8U\5JP4>^2(;2,jcdeZ:EG.(f)9ES6&/DQUeRtA>`[/4
%H+2%qZ%I1\0Vh)!7)Zgf)q9KQ'faXk6Ttf++gqq;CcZklo.p`+o:geP`/H7,S^,&^?Uk91ES\ho3f'g\1GoPV,HR^FiuP0(R<:eG
%@TG,[ar[XW<`frtC!pj:SsMW+=Wl-VqT^k`=*"jJ0Ik8sOll;<;qY!KcPmn$QO,*aS?.SXB$1QP[&2i305[c6@LD!tQF8dC#(!b&
%-isMQ<&O3_I(oT"VZ$,X%)4:ka/AIH^fTj+jNmJ96<$"eA$[o0[3l)&H,/a]G)K3PVg&2nV_$h.S+53Va7"1mA)miLI-n)UO^%<'
%'!uQtg25F\.[K,lh$tKhjddh?1L7R#KoD`lK%k;PmUnUDOS^E]_BFX+\Z\LChP1c1S?HPHIDOIufDk^'n%Shr+2@]j%p1O#qoa1J
%J,f>V5Q:1K5CN:TpOBpVfB;&iq#+QKqU:M_J,[X[s7A5].X?_Ts8&Aeje"d9lG!@c!ToI~>
%AI9_PrivateDataEnd
