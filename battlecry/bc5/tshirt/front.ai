%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 10.0
%%For: (Aether X Doombringer) (Digital Evolutions)
%%Title: (front.ai)
%%CreationDate: 5/20/2004 1:55 PM
%%BoundingBox: -1 -1 289 289
%%HiResBoundingBox: -0.5 -0.5 288.5 288.5
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%RGBCustomColor: 1 1 1 (0c 0m 0y 0k)
%%+ 0.8039 0.0471 0.0627 (18c 97m 88y 1k)
%%+ 0.498 0.498 0.498 (50% Black)
%%+ 0 0.6274 0.7765 (PANTONE Process Cyan CVC)
%%+ 0.9921 0.8274 0.1686 (Yellow)
%%RGBProcessColor: 0.9961 0.6314 0.1451 (Orange)
%%+ 0 0 0 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 144 144 144 144
%AI3_TileBox: 0 -18 576 744
%AI3_DocumentPreview: None
%AI5_ArtSize: 288 288
%AI5_RulerUnits: 0
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 300
%AI5_NumLayers: 2
%AI8_OpenToView: -55.9004 340.9004 0.6667 264 266 18 1 1 527 94 1 0
%AI5_OpenViewLayers: 73
%%PageOrigin:0 -18
%%AI3_PaperRect:-18 783 594 -9
%%AI3_Margin:18 -19 -18 9
%AI7_GridSettings: 72 32 72 32 1 0 1 0.29 0.29 1 0.65 0.65
%AI9_Flatten: 1
%AI7_Thumbnail: 128 128 8
%%BeginData: 14804 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD41F82626FD7EF8A5FECC7AA550502626FD77F8A4CCFECCFECCFE
%CCFECC7AFD62F8269E50FD10F8CCA4CCC6CCA4CCC6CCA4CC26FD5DF82750
%A5FECCFECCA47BFD0DF826FECCFECCFECCFECCFECCFECC26FD5BF87AC6CC
%FECCC6CCFECCC6CC26FD0BF826CCC6CCFECCC6CCFECCC6CCFEA4FD5AF851
%FECCFECCFECCFECCFECCFEA5FD0BF87BFECCFECCFECC7ACCFECCFECCFE26
%FD0BF850FD4DF89ECCC6CCA4CCC6CCA4CCC6CCA4FD0BF850CCC6CCA4CCA4
%26A4CCC6CCA4CC26FD0BF8C6A426FD4AF850CCFECCFECCFECCFECCFECCFE
%CC50FD0AF8A5FECCFECCFEA526CCFECCFECCFEFD0BF826CCFECC7A26FD48
%F8A5C6CCFECCC6C7F8CCC6CCFECCC6A5FD0AF8A4CCFECCC6CC7A50C6CCFE
%CCC6CCFD0BF87AFECCC6CCA450FD47F8A4CCFECCFECCFE26A4CCFECCFECC
%FE26FD09F8CCFECCFECCFE7B50CCFECCFECC7AFD0BF87ACCFECCFECC50FD
%47F850C6CCA4CCC6CC5050C6CCA4CCC6A4FD09F826C6CCA4CCC6CC50A5C6
%CCA4CCC67AFD0BF8CCA4CCC6CCA426FD47F826CCFECCFECCFECC26CCFEA5
%5026FD0AF826CCFECCFECCFECCFECCFECCFECC50FD0AF826FECCFECCFEA5
%F8F8F89FA451FD35F826FD0DF8A4CCC6CCFECCC62626FD0EF87AFECCC6CC
%FECCC6CCFECCC6CC50FD0BF850CCC6CCFECC50F8F87AC6CCFE7AFD32F826
%A4CC26FD0CF87BFECCFECCFECC74FD0FF874CCFECCFECCFECCFECCFEC726
%FD0CF87BFECCFECCFE26F87BFECCFECCFECC50FD2FF826A4CCC6CCFD0DF8
%CCC6CCA4CCC6A4FD07F826FD07F8A4A4CCC6CCA4CCC6CCA4CCC626FD0CF8
%9ECCC6CCA49EF87AA4CCC6CCA4CCC6CC26FD2DF851A4CCFECCFECC26FD0B
%F8A4CCFECCFECCFE27F8F8F87BA4CCA4FD07F8A4CCFECCFECCA4CCFECCFE
%CCA427FD0BF8CCFECCFECC507BFECCFECCFECCFECC26FD2DF850FECCC6CC
%FECCA426FD0BF87AFECCC6CCFECC5026A4CCC6CCFECC26FD06F8CCC6CCFE
%CCC67A50CCC6CCFECC7AFD0AF826C6CCFECCC6A5FECCC6CCFECCC6A5FD2E
%F850FECCFECCFECCC626FD0CF826CCFECCFECCFEA526CCFECCFECCFE7BFD
%05F826FECCFECCFECC50A5FECCFECCFEA5FD0AF850CCFECCFECCFECCFECC
%FECCFE7BFD2EF87AC6CCA4CCC6CC9E26FD0EF8A4CCC6CCA4CCC626A4CCC6
%CCA4CCA4FD05F826CCC6CCA4CCC6267ACCC6CCA4CC50FD0AF89EC6CCA4CC
%C6CCA4CCC6CCA450FD2EF87BFECCFECCFECCFECCFD0FF87BFECCFECCFECC
%507BFECCFECCFECC26FD04F87BFECCFECCFECCF8CCFECCFECCFE51FD0AF8
%C6CCFECCFECCFECCFECCA451FD30F8A5FECCC6CCFECCC6A5F8F8F8A57AFD
%09F826CCFECCC6CCFEA426CCFECCC6CCFE7AFD04F850CCFECCC6CCFEF8C6
%CCFECCC6CC26FD0AF8CCFECCC6CCFECCC6CCA426FD32F8A5FECCFECCFECC
%FEA526A5FECC7AFD09F8A4CCFECCFECCFE26A4CCFECCFECCA4FD04F8A5FE
%CCFECCFEA526CCFECCFECCFE26FD09F8A5FECCFECCFECCFECC7A26FD34F8
%CCC6CCA4CCC6CCA4CCC6CCA4CC26FD08F87AA4CCC6CCA4CCA4CCA4CCC6CC
%A450FD04F8A4CCA4CCC6CC7A50C6CCA4CCC6CCFD09F850C6CCA4CCC6CCA4
%CC50FD36F826CCFECCFECCFECCFECCFECCFECCFD08F826CCFECCFECCFECC
%FECCFECCFEA5FD05F8CCFECCFECCFE7B50CCFECCFECC9EFD08F827C6CCFE
%CCFECCFECC26FD38F826CCC6CCFECCC6CCFECCC6CC26FD09F8A4CCFECCC6
%CCFECCC6CCFECC26FD05F87AA4C6CCFECC26A5FECCC6CCFE7AFD08F87ACC
%FECCC6CCFECC26FD3AF850CCFECCFECCFECCFECC26FD0AF87BFECCFECCFE
%CCFECCFECC7AFD0AF851262650A5C6CCFECC50FD07F826CCFECCFECCFECC
%7AFD3CF826CCA4CCC6CCA4CCC650FD0BF8267ACCC6CCA4CCC67A26FD12F8
%262626FD07F8A5C6CCA4CCC6CCA4FD10F8262626FD2BF87ACCFECCFECCFE
%CCFE27FD04F87A26FD07F8759EA55026FD1DF87BFECCFECCFECCFE51FD0D
%F8267ACCFECCFECCA47BFD29F87ACCFECCC6CCFECCA426F8F87ACCA426FD
%27F826C6CCFECCC6CCFEA4FD0DF87AFECCC6CC7AA4C6CCFECC26FD28F87A
%CCFECCFECCFECCA426A4CCFECCC626FD26F826CCFECCFECCFECC26FD0CF8
%7BFECCA450FD04F850CCFECC26FD28F89ECCC6CCA4CCC6CCA4CCC6CCA4CC
%A4F8F8507AA47AA57AA47AA57AA47AA57AA47AA57AA47AA57AA47AA57AA4
%7AA57AA47AA57A7AF8F8F87AA4CCC6CC50FD0CF87AC6CC50F8F8505050F8
%F8F89EC6CCFD28F827A4CCFECCFECCFECCFECCFECCFE7BF8F850CCFECCFE
%CCFECCFECCFECCFECCFECCFECCFECCFECCFECCFECCFECCFECCFECCFECC9E
%FD04F851A4CCA4FD0CF827FECC5027A4CCFECCFECC50F8F8A5FE9FFD28F8
%26A4CCC6CCFECCC6CCFECCC650F8F8F87AFEA5507A5074507A5074507A50
%74507A5074507A5074507A5074507A507450A5FEA4FD05F8265026FD0CF8
%7ACC7AF8A4CCFE7A50C7FECC26F826CCC626FD28F826C6CCFECCFECCFECC
%FE50FD04F850CCA4FD1DF850CCA4FD14F8C7FE5150CCA426F8F8F87BFEA5
%F8F8A4CC26FD11F826A47AFD15F826C6CCA4CCC6CCA426FD05F850A4A5FD
%1DF850A4A5FD14F8C6CCF8A5C650FD05F8CC7AF8F8A5C650FD11F87ACCFE
%CC7A26FD13F851FECCFECCA427FD06F850CCA4FD1DF850CCA4FD14F8CCFE
%F8A4CC26FD04F827FEA550F8A4CC50FD11F8CCFECCC6CCFE7AFD13F850C6
%CCA426FD07F874C6A5FD1DF874C6A5FD14F8FECCF87BFEA4FD04F8A4CCFE
%CC50C7FE26FD10F87BFECCFECCFECCFECC7A26FD11F87BA426FD08F850CC
%7AFD1DF850CC7AFD14F8CCFE50F8CCFEC774A5FECCFEA55050FECCFD11F8
%A4CCA4CCC6CCA4CCC6CCA47AFD1BF87AC6A4FD1DF87AC6A4FD14F87ACC7A
%F8F87AA4CCA4CC7A26F8F8A4CC7AFD10F850CCFECCFECCFECCFECCFECCFE
%CC9E51FD06F826CCA450FD0EF850CC9EFD1DF850CC9EFD14F851FECC26F8
%F8CCFEA5F8F8F827A4CCA427FD11F850A5C6CCFECCC6CCFECCC6CCFECCC6
%A526FD04F87AC6CCFEA426FD0CF87AFEA4FD1DF87AFEA4FD15F8A5FEA5F8
%F8FECC5026507AC6CCA426FD14F850A4CCFECCFECCFECCFECCFECCFECCA4
%26F826FECCFECCFE50FD0CF850CCA4FD1DF850CCA4FD16F8CCFEA5F851C6
%CCFECCFECC7A26FD17F826A5C6CCA4CCC6CCA4CCC6CCA4CCC6A47ACCC6CC
%A4CCFD0DF850A4A5FD0DF8FD10267AA4A5FD17F8CCC6CCF8F826505050FD
%1CF8509ECCFECCFECCFECCFECCFECCFECCFECCFECC50FD0DF850CCA4FD0D
%F850CCFECCFECCFECCFECCFECCFECCFECCFECCA4FD17F826A5FEFD24F826
%A5FECCC6CCFECCC6CCFECCC6CCFECCA426FD0DF874C6A5FD0DF874C6CCFE
%CCC6CCFECCC6CCFECCC6CCFECCC6A5FD19F850FD13F84444FD11F851A4CC
%FECCFECCFECCFECCFECCFE7BFD0EF850CC7AFD0DF850CC7AFD39F8204568
%938C93FD13F826A4A4CCC6CCA4CCC6CCA4CCFD0FF87AC6A4FD0DF87AC6A4
%FD36F82044688D688D688D68FD15F8517ACCFECCFECCFECC50FD0FF850CC
%9EFD0DF850CC9EFD32F820206F8D9368938D9368938D93FD18F87AC6CCFE
%CCA426FD0FF87AFEA4FD0DF87AFEA4FD2FF8202069688D6893688D689368
%8D689368FD19F8267ACCFE7BFD10F850CCA4FD0DF850CCA4FD2CF8204493
%8C9368938C9368938C9368938C936893FD1CF87AFD11F850A4A5FD0DF850
%A4A5FD29F820448D688D688D688D688D688D688D688D688D688D68FD2EF8
%50CCA4FD0DF850CCA4FD26F84B449368938D9368938D9368938D9368938D
%9368938D936893F8F826507A502626FD26F874C6A5FD0DF874C6A5FD25F8
%446893688D6893688D6893688D6893688D6893688D6893688D68F8F826CC
%FECCFEA5FD26F850CC7AFD0DF850CC7AFD25F8449368938C9368938C9368
%938C9368938C9368938C9368938C93F8F826C6CCA4CC7AFD26F87AC6A4FD
%0DF87AC6CC7A7A505050FD0426FD1CF844688D688D688D688D688D688D68
%8D688D688D688D688D686944F8F850CCFECCFE7B26512626FD22F850CC9E
%FD0DF850CCFECCFECCFECCFECCFECCFE7BFD1AF8449368938D9368938D93
%68938D9368938D936893686F2027FD04F87AFECCC6CCFECCC6CCFECCC6CC
%7AA47A7B507450262626FD15F87AFEA4FD0DF82650747AA57AA4A4CCFECC
%C6CCFE7AFD19F845688D6893688D6893688D6893688D68694420FD09F850
%CCFECCFECCFECCFECCFECCFECCFECCFECCFECCFECCFECCFE7BFD12F850CC
%A4FD18F826A4CCFE7BFD18F844938C9368938C9368938C9368934444FD0C
%F87AA4CCC6CCA4CCC6CCA4CCC6CCA4CCC6CCA4CCC6CCA4CCC6CC50FD12F8
%50A4A5FD1AF87ACCC67AFD17F844688D688D688D688D688D688D688D688D
%6869446820442020F8F8F89ECCFECCFECCFECCFECCFECCFECCFECCFECCFE
%CCFECCFECCFE7BFD12F850CCFE51FD1AF87ACCFEA5FD16F844938D936893
%8D9368938D9368938D9368938D9368938D93689320F8A4C6CCFECCC6CCFE
%CCC6CCFECCC6CCFECCC6CCFECCC6CCFECC26FD12F826A4CCFE7AFD1AF87A
%CCC6A5FD15F820204544696893688D6893688D6893688D6893688D689368
%8D6820F8A4CCFECCFECCFECCFECCFECCFECCFECCFECCFECCFECCFECCFE26
%FD13F826A4CCFE7BFD1AF850CCFEA526FD19F82045446968938C9368938C
%9368938C9368938C9320F8CCC6CCA4CC2626267A50507AA57AA4A4CCC6CC
%A4CCC6CCA4CC26FD15F87ACCC6A4FD1AF826CCA4CC26FD18F8202069688D
%688D688D688D688D688D688D688D6820F8FECCFECCFEFD0EF8512650507B
%5026FD16F87ACCFEA526FD19F850CCFECC26FD12F845446F689368938D93
%68938D9368938D9368938D9368938D9320F8CCFECCC6CCFD2CF850CCC6CC
%26FD19F826CCFE74FD11F845688D6893688D6893688D6893688D6893688D
%689368682020FD06F82626FD2DF850CCFECC26FD19F87ACC50FD11F82093
%8C9368938C9368938C9368938C69444B2020FD3BF826CCA4CC26FD18F8A4
%A47AFD11F820688D688D688D688D688D688D68692020FD3FF826CCFECC7A
%7B26502627FD12F89ECC50FD11F820938D9368938D9368938D9368938D93
%6893686F4427FD3CF8A5FECCC6CCFECCC6CCFECCA4FD0EF8A4C67AFD11F8
%206893688D6893688D6893688D6893688D6893688D6893684420FD39F8A5
%A4A5FECCFECCFECCFECCFD0EF8A4CC50FD11F8209368938C9368938C9368
%938C9368938C9368938C9368938C9320FD3FF82650CCC6FD0EF8A5C650FD
%11F820688D688D688D688D688D688D688D688D688D688D688D688D6820FD
%19F8267BFD25F851FECCFD0EF8A4CC50FD11F8209368938D9368938D9368
%938D9368938D9368938D9368938D9344FD16F8267AA4CCFE50FD24F826CC
%FEFD0EF8A5FE74FD12F820686893688D6893688D6893688D6893688D6893
%688D68936844FD13F8267BA4CCFECCFECC7AFD11F8267B507B507B507B50
%7B507B507B507B507B5026FECCFD0EF87ACC50FD15F8204B689368938C93
%68938C9368938C9368938C93689344FD10F8267AA4CCC6CCA4CCC6CCA4CC
%FD11F850A4CCC6CCA4CCC6CCA4CCC6CCA4CCC6CCA4CC26CCA4FD0EF8A4A4
%7AFD19F8204469688D688D688D688D688D688D688D6844F8F8F826759ECC
%26FD04F826269FC6CCFECCFECCFECCFECCFECCFE51FD10F850CCC6A59EA5
%A4A59EA5A4A59EA5A4A5A4CCFE50FECCFD0EF89ECC50FD1CF820206F6893
%68938D9368938D93689344F8F850CCFECCC67BF8F826A5FECCC6CCFECCC6
%CCFECCC6CCFECCC6CC7AFD10F874C6A5FD0DF826C6CC26CCC6FD0EF8A4C6
%7AFD21F8444493688D6893688D6845F8F850FECCFECCA4A5FECCFECCFECC
%FECCFECCFECCFECCFECCFECCFEA5FD10F850CC7AFD0DF826CCFE51FECCFD
%0EF8A4CC50FD24F821446968938C9344F8F8F8CCA4CCC6CCA4CCC6CCA4CC
%C6CCA4CCC6CCA4CCC6CCA49E5026FD11F87AC6A4FD0DF826C6CC26CCC6FD
%0EF8A5C650FD0FF82020FD17F820456844F8F8F87ACCFECCFECCFECCFECC
%FECCFECCFECCFECCFEA55027FD14F850CC9EFD0DF826CCFE51FECCFD0EF8
%A4CC50FD0EF82068934420FD1CF850C6CCFECCC6CCFECCC6CCFECCC6CCFE
%7A2626FD17F87AFEA4FD0DF826FECC26CCFEFD0EF8A5FE74FD0DF820688D
%68936820FD1CF8CCFECCFECCFECCFECCFECCC6A55026FD0BF851FD0EF850
%CCA4FD0DF826CCFE26FECCFD0EF87ACC50FD0CF82068938C9368936820FD
%1BF8A4CCA4CCC6CCA4CCA47A26FD0EF8A4A426FD0DF850A4A5FD0DF826A4
%CC26CCA4FD0EF8A4A47AFD0CF8448D688D688D688D6844FD1AF875FECCFE
%CCFE9F26FD10F8A5FECCA426FD0CF850CCA4FD0DF826CCFEA5FECCFD0EF8
%9ECC50FD0BF8449368938D9368938D93686FFD1AF8CCC6CCFECC26FD10F8
%A5FECCC6CCA4FD0CF874C6A5FD0DF826C6CCFECCC6FD0EF8A4C67AFD0AF8
%2093688D6893688D6893688D6869FD19F8A4CCFECCFE50FD0FF87BFECCFE
%CCFECC7AFD0BF850CC7AFD0DF8267B507B507BFD0EF8A4CC50FD09F82093
%68938C9368938C9368938C93689320FD17F850C6CCA4CC7AFD0EF87AC6CC
%A4CCC6CCA4A5FD0BF87AC6A4FD21F8A5C650FD09F869688D688D688D688D
%688D688D688D688D20FD16F826CCA47B26FD0EF87BFECCFECCFECCFEA5FD
%0CF850CCA427FD1FF827A4CC50FD09F8206F68938D9368938D9368938D93
%68938D9344FD27F850C6CCFECCC6CCFEA4F8F8F82626FD08F850FECCA426
%FD1EF8A4CCFE50FD0BF8686893688D6893688D6893688D6893688D44FD25
%F851FECCFECCFECCFECC26F8F87BFECCFD09F851FECCA426FD1BF826A4CC
%FE51FD0DF84568938C9368938C9368938C9368938C936820FD22F826A4CC
%C6CCA4CCC6CCA4CC26A4A4CCC6A4FD09F850C6CCA426FD1AF89ECCC650FD
%0FF820688D688D688D688D688D688D688D688D6844FD20F826A4CCFECCFE
%CCFECCFECCFECCFECCFECCFEA5FD09F851FECCC626FD17F826A4CCFE51FD
%11F827689368938D9368938D9368938D9368938D4BFD1EF826A4CCC6CCFE
%CCC6CCFECCC6CCFECCC6CCFECCC67BFD09F850C6CCA426FD15F826A4CCC6
%50FD13F869688D6893688D6893688D6893688D68936868FD1CF826A4CCFE
%CCFECCFEA526CCFECCFECCFECCFECCFECC74FD0AF850FECCC626FD13F826
%A4CCFE50FD13F84568938C9368938C9368938C9368938C9368938C69FD1B
%F8A4CCA4CCC6CCA4A5F850A4CCC6CCA4CCC6CCA4A526FD0CF850A4CCA426
%FD12F8A4CCA450FD13F820688D688D688D688D688D688D688D688D688D68
%8D6868FD19F8A4CCFECCFECCFEA526A5FECCFECCFECCFECCFE7BFD07F851
%FD07F851FECCA45126502651265026512650265126502651A4CCFE51FD05
%F8204493FD0BF827689368938D9344938D9368938D9368938D9368938D93
%FD19F87ACCFECCC6CCFE7A26CCFECCC6CCFECCC6CC7A26FD05F8507ACCC6
%CC50FD06F850FECCC6CCFECCC6CCFECCC6CCFECCC6CCFECCC6CCFE50FD04
%F82069688D6820FD0AF86893688D689368F8F869688D6893688D6893688D
%688DFD19F87ACCFECCFECCFE7B50CCFECCFECCFECCFECC50FD05F826CCFE
%CCFECCFECCC67BFD05F851FECCFECCFECCFECCFECCFECCFECCFECCFECCFE
%51F8F8F845689368938C9368FD0AF89368938C9368934420F86F8C936893
%8C9368938C9320FD18F850CCC6CCA4CCC6A49ECCC6CCA4CCC6CCA49EFD07
%F8A5C6CCA4CCC6CCA4CCC6CC7A26FD18F82069688D688D688D688DFD09F8
%20688D688D688D688D6820F844688D688D688D688D44FD18F850CCFECCFE
%CCFECCA4CCFECCFECCFECCA451FD07F851FECCFECCFECCFECCFECCFECCFE
%A526FD14F84B8D9368938D9368938D93686FFD08F8449368938D9368938D
%936827F82168938D93689344FD19F87AC6CCFECCC6CCFECCC6CCFECCC6CC
%50FD09F87ACCFECCC6CCFECCC6CCFECCC6CCFECCFD14F82093688D689368
%8D6893688D68FD08F869688D6893688D6893688D6844448D6893688D68FD
%1BF8A5FECCFECCFECCFECCFECCFEC726FD09F826CCFECCFECCFECC7ACCFE
%CCFECCFECC50FD15F868938C9368938C9368938C9344FD07F868938C9368
%938C9368938C9368938C9368936820FD1CF8A4A4CCC6CCA4CCC6CCA47AFD
%0BF87AC6CCA4CCC6CC7A50C6CCA4CCC6CCA4FD16F844688D688D688D688D
%688D6869FD07F88D688D688D688D688D688D688D688D688D6820FD1EF8CC
%FECCFECCFECC9E27FD0CF8FECCFECCFECCFE51A4CCFECCFECCFE7BFD17F8
%938D9368938D9368938D93684BFD05F84568938D9368938D9368938D9368
%938D93684BFD1FF826CCFECCC6CC50FD0EF87BFECCC6CCFEA426CCFECCC6
%CCFECCFD09F8267AA47A7AFD0AF84493688D6893688D6893688D68FD06F8
%8D6893688D6893688D6893688D68936844FD21F850CCFEA5FD11F8CCFECC
%FECC26A5FECCFECCFECC7AFD08F826A4CCFECCFE7BFD09F82068938C9368
%938C9368938C9320FD06F86968938C9368938C9368938C93686FFD23F850
%50FD12F87ACCC6CCA47AC6CCA4CCC6CCA426FD08F850CCA4CCC6CCA426FD
%09F868688D688D688D688D688D6868FD07F868688D688D688D688D688D68
%69FD36F8267ACCFECCFECCFECCFECCFECCFEA5FD09F87BFECCFECCFECC26
%FD09F820938D9368938D9368938D936827FD07F84B8D9368938D9368938D
%6F20FD35F8A5FECCC6CCFECCC6CCFECCC6CCFECC26FD09F850CCC6CCFECC
%C626FD0AF86893688D6893688D6893688D44FD08F820688D6893688D4420
%FD36F826FECCFECCFECCFECCFECCFECCFECCA4FD0AF826C6CCFECCFEA5FD
%0BF84468938C9368938C9368938C93FD09F82068936845FD39F87ACCA4CC
%C6CCA4CCC6CCA4CCC6CCA450FD0BF826A4CCA4A5FD0DF869688D688D688D
%688D688D6844FD0AF820FD3AF826CCFECCFECCFE7B50CCFECCFECCFECCFD
%1EF844938D9368938D9368938D9368FD45F87BFECCC6CCFECCF8CCFECCC6
%CCFECC26FD1FF86893688D6893688D6893688D20FD43F826FECCFECCFECC
%7A50FECCFECCFECCA4FD20F86968938C9368938C9368938C6FFD43F826CC
%A4CCC6CCA426A4CCA4CCC6CCA450FD21F88D688D688D688D688D688D6820
%FD43F8A4CCFECCFECCA4CCFECCFECCFECCFD22F844938D9368938D936893
%8D9368FD43F87AC6CCFECCC6CCFECCC6CCFECC50FD22F8206893688D6893
%688D6893688DFD43F826CCFECCFECCFECCFECCFECCC626FD23F86968938C
%9368938C9368938C69FD43F87ACCA4CCC6CCA4CCC6CCA47AFD24F8208D68
%8D688D688D688D688D44FD45F87BC6CCFECCFECCFECC26FD25F868938D93
%68938D93686FFD48F82650CCC6CCFECC7AFD26F8446893688D686920FD4D
%F850A4CCFE26FD27F89368936844FD51F8267AFD28F84444FDFCF8FDFCF8
%FD31F8F8
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0 0 0 1 ([Registration]) 0 Xs
([Registration]) Pc
0 0 0 0 1 1 1 (0c 0m 0y 0k) 0 1 Xx
(0c 0m 0y 0k) Pc
0.1608 0.9294 0.8784 0.0392 0.8039 0.0471 0.0627 (18c 97m 88y 1k) 0 1 Xx
(18c 97m 88y 1k) Pc
0.4275 0.3137 0.2863 0.1294 0.498 0.498 0.498 (50% Black) 0 1 Xx
(50% Black) Pc
0.0275 0.3608 0.8314 0.0039 0.9961 0.6314 0.1451 (Orange) 0 1 Xk
(Orange) Pc
0.9137 0.0588 0.0431 0.0039 0 0.6274 0.7765 (PANTONE Process Cyan CVC) 0 1 Xx
(PANTONE Process Cyan CVC) Pc
0.0196 0.1647 0.8353 0 0.9921 0.8274 0.1686 (Yellow) 0 1 Xx
(Yellow) Pc
PB
%AI5_EndPalette
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (Flare.aip)
%AI5_End_NonPrinting--
%%EndSetup
%AI5_BeginLayer
1 1 0 1 0 0 1 0 79 128 255 0 100 Lb
(Black) Ln
1 A
0 A
uu300 Ar
0 O
0 0 0 1 0 0 0 Xa
0 J 0 j 1 w 3.8637 M []0 d0 XR
0 288 m
288 288 L
288 0 L
0 0 L
0 288 L
0 288 L
f144 144 m
FUu0 R
0 0 0 1 0 0 0 XA
0 288 m
288 288 L
288 0 L
0 0 L
0 288 L
0 288 L
s144 144 m
SUULB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 100 Lb
(Title) Ln
0 A
*u
0 O
0.0275 0.0392 0.8863 0 0.9804 0.9608 0.098 Xa
0 J 0 j 1 w 4 M []0 d1 XR
73.4692 28.6123 m
76.7285 19.1738 L
97.6538 9.416 L
121.2905 60.1045 L
100.3647 69.8623 L
89.5747 66.2871 L
83.146 52.502 L
87.3096 44.4492 L
79.6011 41.7607 L
73.4692 28.6123 L
f91.6709 36.8223 m
94.145 35.668 L
89.2002 25.0635 L
86.7256 26.2178 L
91.6709 36.8223 L
f101.3247 57.71 m
103.8701 56.5225 L
98.6284 45.2822 L
96.0835 46.4688 L
101.3247 57.71 L
f*U
*u
29.5879 60.2783 m
41.9224 45.5791 L
89.4785 75.9121 L
80.8042 86.249 L
72.5352 80.3291 L
69.0254 84.5117 L
76.2417 91.6865 L
67.5674 102.0244 L
29.5879 60.2783 L
f61.4004 77.0947 m
63.9575 74.0479 L
46.3838 61.1348 L
45.832 61.791 L
61.4004 77.0947 L
f*U
4.9956 113.7158 m
13.5283 87.4551 L
23.6177 90.7324 L
21.4966 97.2607 L
64.5977 111.2656 L
60.1865 124.8408 L
17.085 110.8369 L
15.0845 116.9941 L
4.9956 113.7158 L
f3.8696 167.5771 m
1.9434 140.0313 L
12.5259 139.291 L
13.0049 146.1392 L
58.2139 142.9775 L
59.2095 157.2173 L
14.0005 160.3789 L
14.4521 166.8374 L
3.8696 167.5771 L
f18.2813 209.3872 m
12.0239 196.5576 L
62.2915 172.0405 L
72.96 193.9141 L
63.4253 198.5645 L
59.0142 189.5205 L
18.2813 209.3872 L
f58.7261 257.7979 m
41.3359 242.1396 L
78.7593 200.5767 L
96.5552 216.6001 L
89.457 224.4834 L
81.979 217.7505 L
72.8452 227.895 L
78.7578 233.2188 L
71.6592 241.1025 L
65.7466 235.7788 L
58.7529 243.5464 L
65.8247 249.9141 L
58.7261 257.7979 L
f117.4614 275.939 m
107.3857 280.9487 L
93.1421 276.3208 L
87.936 266.3452 L
100.374 228.0659 L
111.835 223.5884 L
124.1494 227.5898 L
129.8994 237.6597 L
124.9336 252.9419 L
111.729 248.6514 L
115.8267 236.04 L
113.082 235.1479 L
102.3555 268.1602 L
105.1001 269.0518 L
108.5229 258.5176 L
121.728 262.8081 L
117.4614 275.939 L
f*u
176.1328 274.4414 m
169.1953 283.3721 L
147.3359 286.4443 L
139.5522 231.0605 L
153.3018 229.1284 L
156.4277 251.3745 L
159.209 250.9834 L
156.082 228.7373 L
169.4453 226.8594 L
172.5723 249.1055 L
167.373 255.271 L
174.0479 259.6104 L
176.1328 274.4414 L
f160.6855 261.4888 m
157.9053 261.8794 L
159.6094 274.0068 L
162.3896 273.6157 L
160.6855 261.4888 L
f*U
223.3389 261.312 m
208.498 246.3945 L
208.3652 246.4775 L
215.2021 266.3965 L
203.4268 273.7544 L
195.9063 239.6382 L
183.7119 220.124 L
195.8174 212.5596 L
208.0117 232.0737 L
235.0469 253.9956 L
223.3389 261.312 L
f*u
246.8623 202.4756 m
243.5703 200.9492 239.7334 200.6738 237.375 204.4482 c
235.7314 207.0771 237.0576 210.146 239.5596 211.7095 c
242.6553 213.6436 247.3984 213.6006 249.5449 210.166 c
251.373 207.2402 250.5615 204.1978 246.8623 202.4756 C
f1 D
253.207 204.9658 m
254.3525 208.04 254.0449 210.3247 252.6934 212.4873 c
249.4082 217.7456 242.3271 218.0376 237.1953 214.8315 c
232.8281 212.1021 231.4707 206.5371 233.8018 202.8052 c
235.3926 200.2612 237.6924 199.2217 240.0352 198.6812 C
238.583 197.4199 238.1377 195.9619 238.8369 194.7485 c
240.0234 192.6597 242.6641 190.8892 246.6064 190.5234 c
249.8721 190.2051 253.7197 191.3125 257.2393 193.5117 c
261.1836 195.9761 263.3252 199.9087 264.0254 204.3555 C
264.8203 208.7441 263.8193 212.8945 261.4873 216.626 c
255.8438 225.6582 244.1982 228.3467 234.7002 222.4111 c
225.0742 216.396 222.6191 204.6616 228.3154 195.5444 c
231.7871 189.9893 234.835 187.9429 238.3271 185.939 C
238.8848 190.7095 L
236.5205 191.4727 234.1191 193.8052 231.9199 197.3247 c
227.3896 204.5762 229.0596 214.1699 236.8193 219.0186 c
244.1563 223.603 253.5645 221.7573 258.0156 214.6333 c
262.0693 208.1455 260.7168 200.4019 253.5938 195.9502 c
249.3945 193.3267 243.8086 193.4917 242.5898 195.4424 c
241.6895 196.8843 244.2383 197.7109 245.8652 198.3149 C
258.0889 203.0044 L
256.207 206.0151 L
253.207 204.9658 L
f*U
0 D
143.8623 35.6846 m
148.1807 35.7598 151.3604 39.2148 151.2881 43.374 c
151.2158 47.4932 147.918 50.835 143.5991 50.7598 c
139.2803 50.6846 136.1406 47.2295 136.2129 43.1104 c
136.2852 38.9521 139.5435 35.6094 143.8623 35.6846 c
f0.2039 0.9608 0.7725 0.0706 0.7333 0.0549 0.1098 Xa
287.123 107.9824 m
229.4854 123.4355 L
229.1621 141.9287 L
249.7393 145.6875 L
249.7139 147.1836 L
229.0127 150.4941 L
228.6943 168.7158 L
285.7559 186.3076 L
286.1523 163.5981 L
258.9082 156.73 L
258.9258 155.7773 L
286.3398 152.8564 L
286.5293 141.9775 L
259.2461 137.4209 L
259.2617 136.4688 L
286.7266 130.6904 L
287.123 107.9824 L
f*u
230.2041 37.3076 m
213.1689 51.1025 L
216.833 68.085 L
225.1357 78.3379 L
209.9648 90.6221 L
225.2002 109.4355 L
269.7773 73.3389 L
246.2393 44.2725 L
230.2041 37.3076 L
f1 D
230.7676 68.0029 m
243.2627 57.8848 L
246.0859 61.3721 L
233.5908 71.4902 L
230.7676 68.0029 L
f*U
0 D
213.5742 19.0566 m
190.8389 8.9326 L
167.5078 61.334 L
190.2441 71.4561 L
213.5742 19.0566 L
f0 R
0.0275 0.0392 0.8863 0 0.9804 0.9608 0.098 XA
5 w176.8662 215.4756 m
104.6226 215.4756 L
104.6226 152.0737 L
128.1538 131.3711 L
147.9668 129.9248 L
147.9668 95.5449 L
141.3662 95.5449 L
141.3662 117.9844 L
104.6226 117.9844 L
104.6226 88.1152 L
125.4702 67.4727 L
165.1055 67.4727 L
185.7441 88.1152 L
185.7441 140.6865 L
165.1055 159.7339 L
140.9521 161.1792 L
140.9521 187.4004 L
176.8662 187.4004 L
176.8662 215.4756 L
sLB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
